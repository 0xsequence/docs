# sequence-builder v0.1.0 bf64eca100017a5742f614bf010220d93a6552b8
# --
# Code generated by webrpc-gen@v0.26.1 with openapi generator; DO NOT EDIT
# 
# webrpc-gen -service=Analytics -match=@analytics -schema=proto/schema/builder.ridl -target=openapi -title=Analytics Api -servers=https://api.sequence.app;Analytics -securityAnnotation=@auth -securitySchemes= -out=proto/docs/analytics.gen.yaml
openapi: 3.0.0
info:
  title: 'Analytics Api'
  version: ''
servers:
  - url: 'https://api.sequence.app'
    description: 'Analytics'
components:
  schemas:
    ErrorWebrpcEndpoint:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcEndpoint"
        code:
          type: number
          example: 0
        msg:
          type: string
          example: "endpoint error"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcRequestFailed:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcRequestFailed"
        code:
          type: number
          example: -1
        msg:
          type: string
          example: "request failed"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcBadRoute:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadRoute"
        code:
          type: number
          example: -2
        msg:
          type: string
          example: "bad route"
        cause:
          type: string
        status:
          type: number
          example: 404
    ErrorWebrpcBadMethod:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadMethod"
        code:
          type: number
          example: -3
        msg:
          type: string
          example: "bad method"
        cause:
          type: string
        status:
          type: number
          example: 405
    ErrorWebrpcBadRequest:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadRequest"
        code:
          type: number
          example: -4
        msg:
          type: string
          example: "bad request"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcBadResponse:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadResponse"
        code:
          type: number
          example: -5
        msg:
          type: string
          example: "bad response"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorWebrpcServerPanic:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcServerPanic"
        code:
          type: number
          example: -6
        msg:
          type: string
          example: "server panic"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorWebrpcInternalError:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcInternalError"
        code:
          type: number
          example: -7
        msg:
          type: string
          example: "internal error"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorWebrpcClientDisconnected:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcClientDisconnected"
        code:
          type: number
          example: -8
        msg:
          type: string
          example: "client disconnected"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcStreamLost:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcStreamLost"
        code:
          type: number
          example: -9
        msg:
          type: string
          example: "stream lost"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcStreamFinished:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcStreamFinished"
        code:
          type: number
          example: -10
        msg:
          type: string
          example: "stream finished"
        cause:
          type: string
        status:
          type: number
          example: 200
    ErrorUnauthorized:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "Unauthorized"
        code:
          type: number
          example: 1000
        msg:
          type: string
          example: "Unauthorized access"
        cause:
          type: string
        status:
          type: number
          example: 401
    ErrorPermissionDenied:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "PermissionDenied"
        code:
          type: number
          example: 1001
        msg:
          type: string
          example: "Permission denied"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorSessionExpired:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "SessionExpired"
        code:
          type: number
          example: 1002
        msg:
          type: string
          example: "Session expired"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorMethodNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "MethodNotFound"
        code:
          type: number
          example: 1003
        msg:
          type: string
          example: "Method not found"
        cause:
          type: string
        status:
          type: number
          example: 404
    ErrorRequestConflict:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "RequestConflict"
        code:
          type: number
          example: 1004
        msg:
          type: string
          example: "Conflict with target resource"
        cause:
          type: string
        status:
          type: number
          example: 409
    ErrorServiceDisabled:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "ServiceDisabled"
        code:
          type: number
          example: 1005
        msg:
          type: string
          example: "Service disabled"
        cause:
          type: string
        status:
          type: number
          example: 404
    ErrorTimeout:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "Timeout"
        code:
          type: number
          example: 2000
        msg:
          type: string
          example: "Request timed out"
        cause:
          type: string
        status:
          type: number
          example: 408
    ErrorInvalidArgument:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "InvalidArgument"
        code:
          type: number
          example: 2001
        msg:
          type: string
          example: "Invalid argument"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "NotFound"
        code:
          type: number
          example: 3000
        msg:
          type: string
          example: "Resource not found"
        cause:
          type: string
        status:
          type: number
          example: 422
    ErrorUserNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "UserNotFound"
        code:
          type: number
          example: 3001
        msg:
          type: string
          example: "User not found"
        cause:
          type: string
        status:
          type: number
          example: 422
    ErrorProjectNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "ProjectNotFound"
        code:
          type: number
          example: 3002
        msg:
          type: string
          example: "Project not found"
        cause:
          type: string
        status:
          type: number
          example: 422
    ErrorInvalidTier:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "InvalidTier"
        code:
          type: number
          example: 3003
        msg:
          type: string
          example: "Invalid subscription tier"
        cause:
          type: string
        status:
          type: number
          example: 422
    ErrorEmailTemplateExists:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "EmailTemplateExists"
        code:
          type: number
          example: 3004
        msg:
          type: string
          example: "Email Template exists"
        cause:
          type: string
        status:
          type: number
          example: 409
    ErrorSubscriptionLimit:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "SubscriptionLimit"
        code:
          type: number
          example: 3005
        msg:
          type: string
          example: "Subscription limit reached"
        cause:
          type: string
        status:
          type: number
          example: 402
    ErrorFeatureNotIncluded:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "FeatureNotIncluded"
        code:
          type: number
          example: 3006
        msg:
          type: string
          example: "Feature not included"
        cause:
          type: string
        status:
          type: number
          example: 402
    ErrorInvalidNetwork:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "InvalidNetwork"
        code:
          type: number
          example: 3007
        msg:
          type: string
          example: "Invalid network"
        cause:
          type: string
        status:
          type: number
          example: 422
    ErrorInvitationExpired:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "InvitationExpired"
        code:
          type: number
          example: 4000
        msg:
          type: string
          example: "Invitation code is expired"
        cause:
          type: string
        status:
          type: number
          example: 422
    ErrorAlreadyCollaborator:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "AlreadyCollaborator"
        code:
          type: number
          example: 4001
        msg:
          type: string
          example: "Already a collaborator"
        cause:
          type: string
        status:
          type: number
          example: 409
    ErrorNoPaymentMethod:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "NoPaymentMethod"
        code:
          type: number
          example: 4002
        msg:
          type: string
          example: "No default payment method"
        cause:
          type: string
        status:
          type: number
          example: 402
    ErrorInvitationLimitReached:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "InvitationLimitReached"
        code:
          type: number
          example: 4003
        msg:
          type: string
          example: "Invitation signup limit reached"
        cause:
          type: string
        status:
          type: number
          example: 422
    SortOrder:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - DESC
        - ASC
    ProjectType:
      type: string
      description: Represented as string on the server side
      enum:
        - EMBEDDED_WALLET_REACT
        - EMBEDDED_WALLET_NEXTJS
        - EMBEDDED_WALLET_UNITY
        - EMBEDDED_WALLET_UNREAL
        - MARKETPLACE_STANDALONE
        - MARKETPLACE_REACT
        - MARKETPLACE_UNITY
        - MARKETPLACE_UNREAL
        - SALE_CONTRACT_ERC1155
        - SALE_CONTRACT_ERC721
        - ALLOWLIST_STARTER
    Feature:
      type: string
      description: Represented as string on the server side
      enum:
        - ANALYTICS
        - MARKETPLACE_SUBDOMAIN
        - MARKETPLACE_DOMAIN
    TemplateType:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - UNKNOWN
        - LOGIN
        - GUARD
    Page:
      type: object
      properties:
        pageSize:
          type: number
        page:
          type: number
        column:
          type: string
        more:
          type: boolean
        before:
          type: object
        after:
          type: object
        sort:
          type: array
          description: '[]SortBy'
          items:
            $ref: '#/components/schemas/SortBy'
    SortBy:
      type: object
      required:
        - column
      properties:
        column:
          type: string
        order:
          $ref: '#/components/schemas/SortOrder'
    Project:
      type: object
      required:
        - id
        - name
        - ownerAddress
        - ownerAvatarUrl
        - licenseId
        - logoImageKey
        - logoImageUrl
        - websiteUrl
        - chainIds
        - collaboratorCount
        - onboardingVisibility
        - onboardingSteps
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        name:
          type: string
        type:
          $ref: '#/components/schemas/ProjectType'
        ownerAddress:
          type: string
        ownerEmail:
          type: string
        ownerAvatarUrl:
          type: string
        licenseId:
          type: number
        logoImageKey:
          type: string
        logoImageUrl:
          type: string
        websiteUrl:
          type: string
        chainIds:
          type: array
          description: '[]uint64'
          items:
            type: number
        ecosystemId:
          type: number
        collaboratorCount:
          type: number
        onboardingVisibility:
          type: boolean
        onboardingSteps:
          type: object
          description: 'map<string,bool>'
          additionalProperties:
            type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
    ProjectListFilter:
      type: object
      properties:
        name:
          type: string
        chainId:
          type: number
        collaboratorAddress:
          type: string
        collaboratorEmail:
          type: string
        licenseId:
          type: number
        active:
          type: boolean
    OpenIdProvider:
      type: object
      required:
        - iss
        - aud
      properties:
        iss:
          type: string
        aud:
          type: array
          description: '[]string'
          items:
            type: string
    LimitSettings:
      type: object
      required:
        - mauIncludedWarn
        - mauIncludedMax
        - mauOverageWarn
        - rateLimit
      properties:
        maxKeys:
          type: number
        mauIncludedWarn:
          type: number
        mauIncludedMax:
          type: number
        mauOverageWarn:
          type: number
        mauOverageMax:
          type: number
        rateLimit:
          type: number
    PriceSettings:
      type: object
      required:
        - subscription
        - overage
        - marketplaceFee
        - gasFeeMarkup
      properties:
        subscription:
          type: string
        overage:
          type: string
        marketplaceFee:
          type: string
        gasFeeMarkup:
          type: string
    EcosystemLicense:
      type: object
      required:
        - id
        - ecosystemId
        - isDefault
        - packageName
        - label
        - tier
        - mainnetEnabled
        - limits
        - prices
        - gasIncluded
        - totalLicenses
        - availableLicenses
        - licensePerUser
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        ecosystemId:
          type: number
        isDefault:
          type: boolean
        packageName:
          type: string
        label:
          type: string
        tier:
          type: number
        mainnetEnabled:
          type: boolean
        defaultChainIds:
          type: array
          description: '[]uint64'
          items:
            type: number
        availableChainIds:
          type: array
          description: '[]uint64'
          items:
            type: number
        extraChainIds:
          type: array
          description: '[]uint64'
          items:
            type: number
        limits:
          $ref: '#/components/schemas/LimitSettings'
        prices:
          $ref: '#/components/schemas/PriceSettings'
        gasIncluded:
          type: number
        totalLicenses:
          type: number
        availableLicenses:
          type: number
        licensePerUser:
          type: number
        features:
          type: array
          description: '[]Feature'
          items:
            $ref: '#/components/schemas/Feature'
        createdAt:
          type: string
        updatedAt:
          type: string
    ContractData:
      type: object
      required:
        - abi
        - bytecode
      properties:
        abi:
          type: string
        bytecode:
          type: string
        hash:
          type: string
        implementationAddress:
          type: string
    SESSettings:
      type: object
      required:
        - accessRoleARN
        - sourceARN
        - region
      properties:
        accessRoleARN:
          type: string
        sourceARN:
          type: string
        region:
          type: string
    ResourceType:
      type: string
      description: Represented as int8 on the server side
      enum:
        - CONTRACTS
        - MARKET_COLLECTIONS
        - SHOP_COLLECTIONS
    SubscriptionProvider:
      type: string
      description: Represented as string on the server side
      enum:
        - ADMIN
        - STRIPE
        - GOOGLE
    CollaboratorAccess:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - NONE
        - READ
        - WRITE
        - ADMIN
    CollaboratorType:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - USER
        - SERVICE_ACCOUNT
    ContractSourceType:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - LINKED
        - DEPLOYED
    PaymentProvider:
      type: string
      description: Represented as uint16 on the server side
      enum:
        - NONE
        - STRIPE
        - ADMIN
    PaymentStatus:
      type: string
      description: Represented as uint16 on the server side
      enum:
        - INITIATED
        - PENDING
        - SUCCEEDED
        - FAILED
        - PROCESSED
    AdminMarketplaceContractType:
      type: string
      description: Represented as uint16 on the server side
      enum:
        - UNKNOWN
        - ERC20
        - ERC721
        - ERC1155
    AdminCollectionPriority:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - low
        - normal
        - high
    AdminCollectionStatus:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - created
        - syncing_contract_metadata
        - synced_contract_metadata
        - syncing_metadata
        - synced_metadata
        - syncing_tokens
        - synced_tokens
        - syncing_orders
        - active
        - failed
        - inactive
        - incompatible_type
    TokenType:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - ERC20
        - ERC721
        - ERC1155
    FileScope:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - LOGO
        - MARKETPLACE
        - AVATAR
        - EMAIL
        - WALLET
        - TOKEN_DIRECTORY
        - ECOSYSTEM
    TaskStatus:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - PENDING
        - PAUSED
        - FAILED
        - COMPLETED
        - DISABLED
    OnboardingStep:
      type: string
      description: Represented as string on the server side
      enum:
        - linkOrDeployContract
        - createMarketplace
        - setUpGasTank
        - configureWaas
        - customizeWallet
        - inviteCollaborator
        - cloneGithub
        - copyCredentials
        - customizeMarketplace
        - deployERC721Contract
        - deployERC1155Contract
        - addMarketplaceCollection
        - createCollection
        - customizeCollectible
        - deploySaleContract
        - setSaleSettings
        - addMinterRoleToItems
        - setUpAudienceList
        - setUpBot
    TrialType:
      type: string
      description: Represented as string on the server side
      enum:
        - ANALYTICS
    AuditType:
      type: string
      description: Represented as string on the server side
      enum:
        - SUBSCRIPTION
        - BILLING_OVERRIDE
        - ECOSYSTEM_LICENSE
    Version:
      type: object
      required:
        - webrpcVersion
        - schemaVersion
        - schemaHash
        - appVersion
      properties:
        webrpcVersion:
          type: string
        schemaVersion:
          type: string
        schemaHash:
          type: string
        appVersion:
          type: string
    RuntimeStatus:
      type: object
      required:
        - healthOK
        - startTime
        - uptime
        - ver
        - env
        - branch
        - commitHash
        - networks
        - checks
      properties:
        healthOK:
          type: boolean
        startTime:
          type: string
        uptime:
          type: number
        ver:
          type: string
        env:
          type: string
        branch:
          type: string
        commitHash:
          type: string
        networks:
          type: object
          description: 'map<string,bool>'
          additionalProperties:
            type: boolean
        checks:
          $ref: '#/components/schemas/RuntimeChecks'
    RuntimeChecks:
      type: object
      required:
        - quotaControl
        - joqueue
        - stripe
        - cloudCommerce
      properties:
        quotaControl:
          type: boolean
        joqueue:
          type: boolean
        stripe:
          type: boolean
        cloudCommerce:
          type: boolean
    AuthState:
      type: object
      required:
        - jwtToken
        - expiresAt
        - address
        - sessionType
      properties:
        jwtToken:
          type: string
        expiresAt:
          type: string
        address:
          type: string
        sessionType:
          type: string
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      required:
        - address
        - createdAt
        - updatedAt
        - sysAdmin
        - avatarKey
        - avatarUrl
      properties:
        address:
          type: string
        email:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        sysAdmin:
          type: boolean
        avatarKey:
          type: string
        avatarUrl:
          type: string
    UserSettings:
      type: object
      required:
        - projectsLimit
        - projectCount
      properties:
        projectsLimit:
          type: number
        projectsLeft:
          type: number
        projectCount:
          type: number
    UserOverride:
      type: object
      required:
        - id
        - address
        - extraProjects
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        address:
          type: string
        extraProjects:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
    CreateProjectOptions:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ProjectType'
        chainIds:
          type: array
          description: '[]uint64'
          items:
            type: number
    ResourceFilter:
      type: object
      properties:
        contracts:
          $ref: '#/components/schemas/ContractFilter'
    Resource:
      type: object
      required:
        - type
        - total
        - detail
      properties:
        type:
          $ref: '#/components/schemas/ResourceType'
        total:
          type: number
        detail:
          type: array
          description: '[]ResourceDetail'
          items:
            $ref: '#/components/schemas/ResourceDetail'
    ResourceDetail:
      type: object
      required:
        - key
        - count
      properties:
        key:
          type: object
        count:
          type: number
    ProjectSubscription:
      type: object
      required:
        - id
        - projectId
        - licenseId
        - subscriptionId
        - dateStart
      properties:
        id:
          type: number
        projectId:
          type: number
        provider:
          $ref: '#/components/schemas/SubscriptionProvider'
        licenseId:
          type: number
        subscriptionId:
          type: string
        providerUrl:
          type: string
        dateStart:
          type: string
        dateEnd:
          type: string
    Collaborator:
      type: object
      required:
        - id
        - projectId
        - type
        - userAddress
        - access
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        projectId:
          type: number
        type:
          $ref: '#/components/schemas/CollaboratorType'
        userAddress:
          type: string
        userEmail:
          type: string
        userAvatarUrl:
          type: string
        userAvatarKey:
          type: string
        access:
          $ref: '#/components/schemas/CollaboratorAccess'
        invitationId:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
    Contract:
      type: object
      required:
        - id
        - projectId
        - contractName
        - contractAddress
        - contractType
        - chainId
        - source
        - contractExtensions
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        projectId:
          type: number
        contractName:
          type: string
        contractAddress:
          type: string
        contractType:
          type: string
        chainId:
          type: number
        source:
          $ref: '#/components/schemas/ContractSourceType'
        abi:
          type: string
        bytecode:
          type: string
        bytecodeHash:
          type: string
        audienceId:
          type: number
        decimals:
          type: number
        symbol:
          type: string
        contractExtensions:
          $ref: '#/components/schemas/ContractExtensions'
        tags:
          type: array
          description: '[]string'
          items:
            type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    ContractExtensions:
      type: object
      properties:
        itemsContractAddress:
          type: string
        splitterContractAddresses:
          type: array
          description: '[]string'
          items:
            type: string
        laosCollectionAddress:
          type: string
    ContractSync:
      type: object
      properties:
        decimals:
          type: number
        symbol:
          type: string
    ContractFilter:
      type: object
      properties:
        chainId:
          type: number
        contractSourceType:
          $ref: '#/components/schemas/ContractSourceType'
        contractTypes:
          type: array
          description: '[]string'
          items:
            type: string
        tag:
          type: string
    ContractTag:
      type: object
      required:
        - tag
        - count
      properties:
        tag:
          type: string
        count:
          type: number
    ContractLink:
      type: object
      required:
        - project
        - collaborator
      properties:
        contract:
          $ref: '#/components/schemas/Contract'
        project:
          $ref: '#/components/schemas/Project'
        collaborator:
          $ref: '#/components/schemas/Collaborator'
    RelayerGasSponsor:
      type: object
      required:
        - id
        - projectId
        - chainId
        - displayName
        - address
        - active
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        projectId:
          type: number
        chainId:
          type: number
        displayName:
          type: string
        address:
          type: string
        active:
          type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
    RelayerTransaction:
      type: object
      required:
        - txnHash
        - txnNonce
        - txnStatus
        - txnRevertReason
        - requeues
        - queuedAt
        - sentAt
        - minedAt
        - target
        - input
        - txnArgs
        - walletAddress
        - metaTxnNonce
        - gasLimit
        - gasPrice
        - gasUsed
        - gasEstimated
        - usdRate
        - creditsUsed
        - cost
        - isWhitelisted
        - createdAt
        - updatedAt
      properties:
        txnHash:
          type: string
        txnNonce:
          type: string
        metaTxnID:
          type: string
        txnStatus:
          type: string
        txnRevertReason:
          type: string
        requeues:
          type: number
        queuedAt:
          type: string
        sentAt:
          type: string
        minedAt:
          type: string
        target:
          type: string
        input:
          type: string
        txnArgs:
          type: object
          description: 'map<string,any>'
          additionalProperties:
            type: object
        txnReceipt:
          type: object
          description: 'map<string,any>'
          additionalProperties:
            type: object
        walletAddress:
          type: string
        metaTxnNonce:
          type: string
        gasLimit:
          type: number
        gasPrice:
          type: string
        gasUsed:
          type: number
        gasEstimated:
          type: number
        gasFeeMarkup:
          type: number
        usdRate:
          type: string
        creditsUsed:
          type: number
        cost:
          type: string
        isWhitelisted:
          type: boolean
        gasSponsor:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
    GasTankStatus:
      type: object
      required:
        - provider
        - setupPayment
        - mainnetSponsors
      properties:
        provider:
          $ref: '#/components/schemas/PaymentProvider'
        setupPayment:
          type: boolean
        mainnetSponsors:
          type: boolean
        gasTankBalance:
          type: number
    BillingSettings:
      type: object
      required:
        - features
        - limits
        - prices
        - topUp
      properties:
        features:
          type: array
          description: '[]Feature'
          items:
            $ref: '#/components/schemas/Feature'
        limits:
          $ref: '#/components/schemas/LimitSettings'
        prices:
          $ref: '#/components/schemas/PriceSettings'
        topUp:
          $ref: '#/components/schemas/TopUpSettings'
    BillingCycle:
      type: object
      required:
        - start
        - end
      properties:
        start:
          type: string
        end:
          type: string
    TopUpSettings:
      type: object
      required:
        - active
        - provider
        - threshold
        - amount
        - limit
      properties:
        active:
          type: boolean
        provider:
          $ref: '#/components/schemas/PaymentProvider'
        threshold:
          type: number
        amount:
          type: number
        limit:
          type: number
    BillingOverride:
      type: object
      required:
        - topUpEnabled
        - topUpProvider
        - extraFeatures
      properties:
        mauIncludedMax:
          type: number
        mauIncludedWarn:
          type: number
        mauOverageMax:
          type: number
        mauOverageWarn:
          type: number
        rateLimit:
          type: number
        priceSubscription:
          type: string
        priceOverage:
          type: string
        marketplaceFee:
          type: string
        gasFeeMarkup:
          type: string
        topUpEnabled:
          type: boolean
        topUpProvider:
          $ref: '#/components/schemas/PaymentProvider'
        topUpThreshold:
          type: number
        topUpAmount:
          type: number
        topUpLimit:
          type: number
        extraFeatures:
          type: array
          description: '[]Feature'
          items:
            $ref: '#/components/schemas/Feature'
    UsageInfo:
      type: object
      required:
        - includedWarn
        - includedMax
        - overageWarn
        - overageMax
        - usage
        - balance
        - overage
      properties:
        includedWarn:
          type: number
        includedMax:
          type: number
        overageWarn:
          type: number
        overageMax:
          type: number
        mau:
          type: number
        usage:
          type: number
        balance:
          type: number
        overage:
          type: number
        extraCharged:
          type: string
    SubscriptionInfo:
      type: object
      required:
        - current
        - cycle
        - settings
        - info
      properties:
        current:
          $ref: '#/components/schemas/ProjectSubscription'
        license:
          $ref: '#/components/schemas/EcosystemLicense'
        cycle:
          $ref: '#/components/schemas/BillingCycle'
        settings:
          $ref: '#/components/schemas/BillingSettings'
        info:
          $ref: '#/components/schemas/UsageInfo'
        plannedDowngrade:
          $ref: '#/components/schemas/EcosystemLicense'
        pendingUpgrade:
          $ref: '#/components/schemas/EcosystemLicense'
    PaymentHistory:
      type: object
      required:
        - totalPayments
        - payments
      properties:
        totalPayments:
          type: number
        payments:
          type: array
          description: '[]Payment'
          items:
            $ref: '#/components/schemas/Payment'
    Redirect:
      type: object
      required:
        - url
      properties:
        url:
          type: string
    StripeEventData:
      type: object
      required:
        - object
      properties:
        object:
          $ref: '#/components/schemas/StripeEventDataObject'
    StripeEventDataObject:
      type: object
      required:
        - id
        - object
      properties:
        id:
          type: string
        object:
          type: string
    Payment:
      type: object
      required:
        - id
        - projectId
        - provider
        - externalTxnID
        - createdAt
      properties:
        id:
          type: number
        projectId:
          type: number
        chainId:
          type: number
        status:
          $ref: '#/components/schemas/PaymentStatus'
        provider:
          $ref: '#/components/schemas/PaymentProvider'
        externalTxnID:
          type: string
        createdAt:
          type: string
    PaymentLog:
      type: object
      required:
        - id
        - paymentID
        - data
        - createdAt
      properties:
        id:
          type: number
        paymentID:
          type: number
        data:
          $ref: '#/components/schemas/PaymentLogData'
        createdAt:
          type: string
    PaymentLogData:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
        data:
          type: object
    InvoicesReturn:
      type: object
      required:
        - hasMore
        - invoices
      properties:
        hasMore:
          type: boolean
        invoices:
          type: array
          description: '[]Invoice'
          items:
            $ref: '#/components/schemas/Invoice'
    Invoice:
      type: object
      required:
        - id
        - date
        - amount
        - paid
        - url
      properties:
        id:
          type: string
        date:
          type: string
        amount:
          type: string
        paid:
          type: boolean
        url:
          type: string
    ContractInfo:
      type: object
      required:
        - data
      properties:
        data:
          type: object
    ContractInfoOverride:
      type: object
      required:
        - data
      properties:
        data:
          type: object
    ProjectInvitation:
      type: object
      required:
        - id
        - projectId
        - code
        - access
        - expiresAt
        - usageCount
        - createdAt
      properties:
        id:
          type: number
        projectId:
          type: number
        code:
          type: string
        access:
          $ref: '#/components/schemas/CollaboratorAccess'
        expiresAt:
          type: string
        usageCount:
          type: number
        signupLimit:
          type: number
        createdAt:
          type: string
        deletedAt:
          type: string
    AdminMarketplaceCollection:
      type: object
      required:
        - status
        - chainId
        - contractAddress
        - contractType
        - priority
        - tokenQuantityDecimals
        - createdAt
        - updatedAt
      properties:
        status:
          $ref: '#/components/schemas/AdminCollectionStatus'
        chainId:
          type: number
        contractAddress:
          type: string
        contractType:
          $ref: '#/components/schemas/AdminMarketplaceContractType'
        priority:
          $ref: '#/components/schemas/AdminCollectionPriority'
        tokenQuantityDecimals:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
    OffchainInventory:
      type: object
      required:
        - id
        - projectId
        - chainId
        - externalProductId
        - paymentTokenAddress
        - paymentTokenType
        - paymentTokenId
        - paymentAmount
        - paymentRecipient
      properties:
        id:
          type: number
        projectId:
          type: number
        chainId:
          type: number
        externalProductId:
          type: string
        paymentTokenAddress:
          type: string
        paymentTokenType:
          $ref: '#/components/schemas/TokenType'
        paymentTokenId:
          type: number
        paymentAmount:
          type: number
        paymentRecipient:
          type: string
        chainedCallAddress:
          type: string
        chainedCallData:
          type: string
        allowCrossChainPayments:
          type: boolean
        callbackURL:
          type: string
        createdAt:
          type: string
        deletedAt:
          type: string
    OffchainPayment:
      type: object
      required:
        - id
        - offchainInventoryId
        - productRecipient
        - paymentChainId
        - paymentTokenAddress
        - expiration
        - createdAt
      properties:
        id:
          type: number
        offchainInventoryId:
          type: number
        productRecipient:
          type: string
        paymentChainId:
          type: number
        paymentTokenAddress:
          type: string
        expiration:
          type: string
        createdAt:
          type: string
        completedAt:
          type: string
        processedAt:
          type: string
    WalletConfigSchema:
      type: object
      required:
        - version
        - config
      properties:
        version:
          type: number
        config:
          type: object
          description: 'map<string,any>'
          additionalProperties:
            type: object
    LegacyWalletConfig:
      type: object
      required:
        - version
        - projectId
        - platform
        - config
      properties:
        id:
          type: number
        version:
          type: number
        projectId:
          type: number
        platform:
          type: string
        config:
          type: object
          description: 'map<string,any>'
          additionalProperties:
            type: object
        createdAt:
          type: string
        updatedAt:
          type: string
    ProjectFile:
      type: object
      required:
        - id
        - projectId
        - scope
        - mimetype
        - filepath
        - contents
        - hash
        - url
        - createdAt
      properties:
        id:
          type: number
        projectId:
          type: number
        scope:
          $ref: '#/components/schemas/FileScope'
        mimetype:
          type: string
        filepath:
          type: string
        contents:
          type: array
          description: '[]byte'
          items:
            type: string
        hash:
          type: array
          description: '[]byte'
          items:
            type: string
        url:
          type: string
        createdAt:
          type: string
    WaasTemplate:
      type: object
      required:
        - id
        - projectId
        - subject
        - introText
        - logoUrl
        - placeholders
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        templateType:
          $ref: '#/components/schemas/TemplateType'
        projectId:
          type: number
        subject:
          type: string
        introText:
          type: string
        logoUrl:
          type: string
        template:
          type: string
        fromEmail:
          type: string
        placeholders:
          type: array
          description: '[]string'
          items:
            type: string
        sesConfig:
          $ref: '#/components/schemas/SESSettings'
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
    TaskRunner:
      type: object
      required:
        - id
        - workGroup
        - runAt
      properties:
        id:
          type: number
        workGroup:
          type: string
        runAt:
          type: string
    Task:
      type: object
      required:
        - id
        - queue
        - status
        - try
        - payload
        - hash
      properties:
        id:
          type: number
        queue:
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        try:
          type: number
        runAt:
          type: string
        lastRanAt:
          type: string
        createdAt:
          type: string
        payload:
          type: array
          description: '[]byte'
          items:
            type: string
        hash:
          type: string
    CreditBonus:
      type: object
      required:
        - id
        - projectId
        - amount
        - balance
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        projectId:
          type: number
        amount:
          type: number
        balance:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
    WaasSettings:
      type: object
      required:
        - recoveryAddress
        - authConfig
        - oidcProviders
        - allowedOrigins
        - updateCode
        - tenantKey
      properties:
        recoveryAddress:
          type: string
        authConfig:
          $ref: '#/components/schemas/WaasAuthConfig'
        oidcProviders:
          type: array
          description: '[]OpenIdProvider'
          items:
            $ref: '#/components/schemas/OpenIdProvider'
        allowedOrigins:
          type: array
          description: '[]string'
          items:
            type: string
        updateCode:
          type: string
        tenantKey:
          type: string
    WaasAuthEmailConfig:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
    WaasAuthGuestConfig:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
    WaasAuthPlayfabConfig:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
        titleId:
          type: string
    WaasAuthStytchConfig:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
        projectId:
          type: string
    WaasAuthTwitterConfig:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
        clientId:
          type: string
    WaasAuthConfig:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/WaasAuthEmailConfig'
        guest:
          $ref: '#/components/schemas/WaasAuthGuestConfig'
        playfab:
          $ref: '#/components/schemas/WaasAuthPlayfabConfig'
        stytch:
          $ref: '#/components/schemas/WaasAuthStytchConfig'
        twitter:
          $ref: '#/components/schemas/WaasAuthTwitterConfig'
    WaasWalletStatus:
      type: object
      required:
        - chainId
        - address
        - deployed
      properties:
        chainId:
          type: number
        address:
          type: string
        deployed:
          type: boolean
    Audience:
      type: object
      required:
        - id
        - projectId
        - name
        - contactCount
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        projectId:
          type: number
        name:
          type: string
        contactCount:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
    AudienceContact:
      type: object
      required:
        - audienceId
        - address
      properties:
        id:
          type: number
        audienceId:
          type: number
        name:
          type: string
        address:
          type: string
        email:
          type: string
        userIp:
          type: string
        stage:
          type: number
        provider:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    AudienceRegistrationStatus:
      type: object
      required:
        - totalCount
      properties:
        totalCount:
          type: number
    Trial:
      type: object
      required:
        - id
        - projectId
        - type
        - startAt
        - endAt
      properties:
        id:
          type: number
        projectId:
          type: number
        type:
          $ref: '#/components/schemas/TrialType'
        startAt:
          type: string
        endAt:
          type: string
    WalletProof:
      type: object
      required:
        - address
        - message
        - signature
        - chainId
      properties:
        address:
          type: string
        message:
          type: string
        signature:
          type: string
        chainId:
          type: number
    AuditLog:
      type: object
      required:
        - id
        - walletAddress
        - userEmail
        - entityId
        - type
        - oldValue
        - newValue
        - createdAt
      properties:
        id:
          type: number
        walletAddress:
          type: string
        userEmail:
          type: string
        entityId:
          type: number
        type:
          $ref: '#/components/schemas/AuditType'
        oldValue:
          type: object
        newValue:
          type: object
        createdAt:
          type: string
    DateInterval:
      type: string
      description: Represented as uint16 on the server side
      enum:
        - DAY
        - WEEK
        - MONTH
    QueryFilter:
      type: object
      properties:
        projectId:
          type: number
        ecosystemId:
          type: number
        startDate:
          type: string
        endDate:
          type: string
        dateInterval:
          $ref: '#/components/schemas/DateInterval'
        collections:
          type: array
          description: '[]string'
          items:
            type: string
        tokenId:
          type: string
    Chart:
      type: object
      required:
        - value
        - label
      properties:
        value:
          type: number
        label:
          type: string
    ChartWithPercentage:
      type: object
      required:
        - label
        - total
        - percentage
      properties:
        label:
          type: string
        total:
          type: number
        percentage:
          type: number
    MultiValueChart:
      type: object
      required:
        - value
        - label
      properties:
        value:
          type: object
          description: 'map<string,float64>'
          additionalProperties:
            type: number
        label:
          type: string
    QueryResult:
      type: object
      required:
        - collection
        - source
        - volumeUSD
        - numTokens
        - numTxns
      properties:
        collection:
          type: string
        source:
          type: string
        tokenId:
          type: string
        volumeUSD:
          type: number
        numTokens:
          type: number
        numTxns:
          type: number
    ContractLibraryStatus:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - DEPRECATED
        - NIGHTLY
        - STABLE
    ContractLibraryItem:
      type: object
      required:
        - uid
        - contractType
        - name
        - description
        - author
        - license
        - moreInfoUrl
        - disabled
        - createdAt
        - updatedAt
      properties:
        uid:
          type: string
        contractType:
          type: string
        name:
          type: string
        description:
          type: string
        author:
          type: string
        license:
          type: string
        moreInfoUrl:
          type: string
        disabled:
          type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
    ContractLibraryVersion:
      type: object
      required:
        - uid
        - version
        - audited
        - releaseNotes
        - upgradable
        - sourceData
        - status
        - createdAt
        - updatedAt
      properties:
        uid:
          type: string
        version:
          type: number
        audited:
          type: boolean
        releaseNotes:
          type: string
        upgradable:
          type: boolean
        sourceData:
          $ref: '#/components/schemas/ContractData'
        factoryAddress:
          type: string
        factoryData:
          $ref: '#/components/schemas/ContractData'
        chainIds:
          type: array
          description: '[]uint64'
          items:
            type: number
        status:
          $ref: '#/components/schemas/ContractLibraryStatus'
        createdAt:
          type: string
        updatedAt:
          type: string
    ProjectContractSource:
      type: object
      required:
        - projectId
        - uid
        - data
        - name
        - createdAt
        - updatedAt
      properties:
        projectId:
          type: number
        uid:
          type: string
        data:
          $ref: '#/components/schemas/ContractData'
        name:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    EcosystemType:
      type: string
      description: Represented as string on the server side
      enum:
        - UNKNOWN
        - OPEN
        - CLOSED
    EcosystemAccess:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - User
        - Read
        - Write
        - Admin
        - Owner
    ThemeType:
      type: string
      description: Represented as string on the server side
      enum:
        - LIGHT
        - DARK
        - CUSTOM
    Ecosystem:
      type: object
      required:
        - id
        - name
        - type
        - ownerAddress
        - builderDomain
        - accessKeyPrefix
        - chainIds
        - exclusive
        - settings
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        name:
          type: string
        type:
          $ref: '#/components/schemas/EcosystemType'
        ownerAddress:
          type: string
        builderDomain:
          type: string
        walletDomain:
          type: string
        accessKeyPrefix:
          type: string
        chainIds:
          type: array
          description: '[]uint64'
          items:
            type: number
        exclusive:
          type: boolean
        projectCount:
          type: number
        settings:
          $ref: '#/components/schemas/EcosystemSettings'
        createdAt:
          type: string
        updatedAt:
          type: string
    EcosystemCollaborator:
      type: object
      required:
        - id
        - ecosystemId
        - userAddress
        - access
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        ecosystemId:
          type: number
        userAddress:
          type: string
        access:
          $ref: '#/components/schemas/EcosystemAccess'
        createdAt:
          type: string
        updatedAt:
          type: string
    EcosystemSettings:
      type: object
      required:
        - title
        - description
        - learnMoreButton
        - learnMoreUrl
        - crispWebsiteId
        - themes
      properties:
        title:
          type: string
        description:
          type: string
        learnMoreButton:
          type: string
        learnMoreUrl:
          type: string
        crispWebsiteId:
          type: string
        themes:
          type: array
          description: '[]ThemeSettings'
          items:
            $ref: '#/components/schemas/ThemeSettings'
    ThemeSettings:
      type: object
      required:
        - type
        - customCss
        - fileLogo
        - fileTitle
        - fileBackground
        - fileBackgroundMobile
      properties:
        type:
          $ref: '#/components/schemas/ThemeType'
        customCss:
          type: string
        fileLogo:
          type: string
        fileTitle:
          type: string
        fileBackground:
          type: string
        fileBackgroundMobile:
          type: string
    Configuration:
      type: object
      required:
        - ecosystemId
        - name
        - builderDomain
        - chainIds
        - license
        - settings
        - exclusiveChainIds
      properties:
        ecosystemId:
          type: number
        name:
          type: string
        builderDomain:
          type: string
        walletDomain:
          type: string
        chainIds:
          type: array
          description: '[]uint64'
          items:
            type: number
        license:
          $ref: '#/components/schemas/EcosystemLicense'
        settings:
          $ref: '#/components/schemas/EcosystemSettings'
        exclusiveChainIds:
          type: object
          description: 'map<uint64,uint64>'
          additionalProperties:
            type: number
    EcosystemTemplate:
      type: object
      required:
        - subject
        - introText
        - logoUrl
        - fromEmail
        - content
        - placeholders
        - createdAt
        - updatedAt
      properties:
        subject:
          type: string
        introText:
          type: string
        logoUrl:
          type: string
        fromEmail:
          type: string
        content:
          type: string
        placeholders:
          type: array
          description: '[]string'
          items:
            type: string
        sesSettings:
          $ref: '#/components/schemas/SESSettings'
        createdAt:
          type: string
        updatedAt:
          type: string
    MarketplaceWalletType:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - UNIVERSAL
        - EMBEDDED
        - ECOSYSTEM
    FilterCondition:
      type: string
      description: Represented as string on the server side
      enum:
        - ENTIRE_KEY
        - SPECIFIC_VALUE
    MarketplaceLegacyType:
      type: string
      description: Represented as string on the server side
      enum:
        - AMM
        - P2P
        - SEQUENCE
        - ORDERBOOK
    MarketplaceHostname:
      type: object
      required:
        - hostname
        - projectId
        - isDefaultHostname
        - isCustomDomain
        - createdAt
      properties:
        hostname:
          type: string
        projectId:
          type: number
        isDefaultHostname:
          type: boolean
        isCustomDomain:
          type: boolean
        createdAt:
          type: string
    Marketplace:
      type: object
      required:
        - projectId
        - settings
        - market
        - shop
      properties:
        projectId:
          type: number
        settings:
          $ref: '#/components/schemas/MarketplaceSettings'
        market:
          $ref: '#/components/schemas/MarketplacePage'
        shop:
          $ref: '#/components/schemas/MarketplacePage'
        createdAt:
          type: string
        updatedAt:
          type: string
    MarketplaceSettings:
      type: object
      required:
        - style
        - publisherId
        - title
        - socials
        - faviconUrl
        - walletOptions
        - logoUrl
        - fontUrl
      properties:
        style:
          type: object
          description: 'map<string,any>'
          additionalProperties:
            type: object
        publisherId:
          type: string
        title:
          type: string
        socials:
          $ref: '#/components/schemas/MarketplaceSocials'
        faviconUrl:
          type: string
        walletOptions:
          $ref: '#/components/schemas/MarketplaceWallet'
        logoUrl:
          type: string
        fontUrl:
          type: string
        accessKey:
          type: string
    MarketplacePage:
      type: object
      required:
        - enabled
        - bannerUrl
        - ogImage
        - private
      properties:
        enabled:
          type: boolean
        bannerUrl:
          type: string
        ogImage:
          type: string
        private:
          type: boolean
    MarketplaceSocials:
      type: object
      required:
        - twitter
        - discord
        - website
        - tiktok
        - instagram
        - youtube
      properties:
        twitter:
          type: string
        discord:
          type: string
        website:
          type: string
        tiktok:
          type: string
        instagram:
          type: string
        youtube:
          type: string
    MarketplaceWallet:
      type: object
      required:
        - walletType
        - oidcIssuers
        - connectors
        - includeEIP6963Wallets
      properties:
        walletType:
          $ref: '#/components/schemas/MarketplaceWalletType'
        oidcIssuers:
          type: object
          description: 'map<string,string>'
          additionalProperties:
            type: string
        connectors:
          type: array
          description: '[]string'
          items:
            type: string
        includeEIP6963Wallets:
          type: boolean
        ecosystem:
          $ref: '#/components/schemas/MarketplaceWalletEcosystem'
        embedded:
          $ref: '#/components/schemas/MarketplaceWalletEmbedded'
    MarketplaceWalletEcosystem:
      type: object
      required:
        - walletUrl
        - walletAppName
      properties:
        walletUrl:
          type: string
        walletAppName:
          type: string
        logoLightUrl:
          type: string
        logoDarkUrl:
          type: string
    MarketplaceWalletEmbedded:
      type: object
      required:
        - tenantKey
        - emailEnabled
        - providers
      properties:
        tenantKey:
          type: string
        emailEnabled:
          type: boolean
        providers:
          type: array
          description: '[]OpenIdProvider'
          items:
            $ref: '#/components/schemas/OpenIdProvider'
    MarketCollection:
      type: object
      required:
        - id
        - projectId
        - chainId
        - itemsAddress
        - contractType
        - bannerUrl
        - feePercentage
        - currencyOptions
        - destinationMarketplace
      properties:
        id:
          type: number
        projectId:
          type: number
        chainId:
          type: number
        itemsAddress:
          type: string
        contractType:
          type: string
        bannerUrl:
          type: string
        feePercentage:
          type: number
        currencyOptions:
          type: array
          description: '[]string'
          items:
            type: string
        destinationMarketplace:
          type: string
        filterSettings:
          $ref: '#/components/schemas/CollectionFilterSettings'
        createdAt:
          type: string
        updatedAt:
          type: string
    ShopCollection:
      type: object
      required:
        - id
        - projectId
        - chainId
        - itemsAddress
        - saleAddress
        - name
        - bannerUrl
        - tokenIds
      properties:
        id:
          type: number
        projectId:
          type: number
        chainId:
          type: number
        itemsAddress:
          type: string
        saleAddress:
          type: string
        name:
          type: string
        bannerUrl:
          type: string
        tokenIds:
          type: array
          description: '[]string'
          items:
            type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    MetadataFilterRule:
      type: object
      required:
        - key
        - condition
      properties:
        key:
          type: string
        condition:
          $ref: '#/components/schemas/FilterCondition'
        value:
          type: string
    CollectionFilterSettings:
      type: object
      required:
        - filterOrder
        - exclusions
      properties:
        filterOrder:
          type: array
          description: '[]string'
          items:
            type: string
        exclusions:
          type: array
          description: '[]MetadataFilterRule'
          items:
            $ref: '#/components/schemas/MetadataFilterRule'
    MarketplaceLegacySettings:
      type: object
      required:
        - publisherId
        - title
        - shortDescription
        - socials
        - faviconUrl
        - landingBannerUrl
        - collections
        - walletOptions
        - landingPageLayout
        - logoUrl
        - bannerUrl
      properties:
        projectId:
          type: number
        publisherId:
          type: string
        title:
          type: string
        shortDescription:
          type: string
        socials:
          $ref: '#/components/schemas/MarketplaceSocials'
        faviconUrl:
          type: string
        landingBannerUrl:
          type: string
        collections:
          type: array
          description: '[]MarketplaceLegacyCollection'
          items:
            $ref: '#/components/schemas/MarketplaceLegacyCollection'
        walletOptions:
          $ref: '#/components/schemas/MarketplaceLegacyWallet'
        landingPageLayout:
          type: string
        logoUrl:
          type: string
        bannerUrl:
          type: string
        fontUrl:
          type: string
        ogImage:
          type: string
        accessKey:
          type: string
    MarketplaceLegacyWallet:
      type: object
      required:
        - walletType
        - oidcIssuers
        - connectors
        - includeEIP6963Wallets
      properties:
        walletType:
          $ref: '#/components/schemas/MarketplaceWalletType'
        oidcIssuers:
          type: object
          description: 'map<string,string>'
          additionalProperties:
            type: string
        connectors:
          type: array
          description: '[]string'
          items:
            type: string
        includeEIP6963Wallets:
          type: boolean
        ecosystem:
          $ref: '#/components/schemas/MarketplaceWalletEcosystem'
        waas:
          $ref: '#/components/schemas/MarketplaceWalletEmbedded'
    MarketplaceLegacyCollection:
      type: object
      required:
        - marketplaceType
        - chainId
        - address
        - exchanges
        - bannerUrl
        - feePercentage
        - currencyOptions
        - destinationMarketplace
      properties:
        marketplaceType:
          $ref: '#/components/schemas/MarketplaceLegacyType'
        chainId:
          type: number
        address:
          type: string
        exchanges:
          type: array
          description: '[]string'
          items:
            type: string
        bannerUrl:
          type: string
        feePercentage:
          type: number
        currencyOptions:
          type: array
          description: '[]string'
          items:
            type: string
        destinationMarketplace:
          type: string
        filterSettings:
          $ref: '#/components/schemas/CollectionFilterSettings'
        isLAOSERC721:
          type: boolean
paths:
security:
  - ApiKeyAuth: []
