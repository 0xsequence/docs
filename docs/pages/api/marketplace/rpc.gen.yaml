# marketplace-api  9caabb2fa2e3adc26083bd9242ffe73a3c2f680b
# --
# Code generated by webrpc-gen@v0.25.1 with openapi generator; DO NOT EDIT
# 
# webrpc-gen -service=Marketplace -ignore=@internal -schema=proto/marketplace.ridl -target=openapi -title=Marketplace Api -servers=https://marketplace-api.sequence.app/amoy;Amoy Marketplace API,https://marketplace-api.sequence.app/apechain;Apechain Marketplace API,https://marketplace-api.sequence.app/apechain-testnet;Apechain-Testnet Marketplace API,https://marketplace-api.sequence.app/arbitrum;Arbitrum Marketplace API,https://marketplace-api.sequence.app/arbitrum-nova;Arbitrum-Nova Marketplace API,https://marketplace-api.sequence.app/arbitrum-sepolia;Arbitrum-Sepolia Marketplace API,https://marketplace-api.sequence.app/avalanche;Avalanche Marketplace API,https://marketplace-api.sequence.app/avalanche-testnet;Avalanche-Testnet Marketplace API,https://marketplace-api.sequence.app/b3;B3 Marketplace API,https://marketplace-api.sequence.app/b3-sepolia;B3-Sepolia Marketplace API,https://marketplace-api.sequence.app/base;Base Marketplace API,https://marketplace-api.sequence.app/base-sepolia;Base-Sepolia Marketplace API,https://marketplace-api.sequence.app/blast;Blast Marketplace API,https://marketplace-api.sequence.app/blast-sepolia;Blast-Sepolia Marketplace API,https://marketplace-api.sequence.app/bsc;Bsc Marketplace API,https://marketplace-api.sequence.app/bsc-testnet;Bsc-Testnet Marketplace API,https://marketplace-api.sequence.app/etherlink;Etherlink Marketplace API,https://marketplace-api.sequence.app/etherlink-testnet;Etherlink-Testnet Marketplace API,https://marketplace-api.sequence.app/frequency-testnet;Frequency-Testnet Marketplace API,https://marketplace-api.sequence.app/gnosis;Gnosis Marketplace API,https://marketplace-api.sequence.app/homeverse;Homeverse Marketplace API,https://marketplace-api.sequence.app/homeverse-testnet;Homeverse-Testnet Marketplace API,https://marketplace-api.sequence.app/immutable-zkevm;Immutable-Zkevm Marketplace API,https://marketplace-api.sequence.app/immutable-zkevm-testnet;Immutable-Zkevm-Testnet Marketplace API,https://marketplace-api.sequence.app/laos;Laos Marketplace API,https://marketplace-api.sequence.app/laos-sigma-testnet;Laos-Sigma-Testnet Marketplace API,https://marketplace-api.sequence.app/mainnet;Mainnet Marketplace API,https://marketplace-api.sequence.app/monad-testnet;Monad-Testnet Marketplace API,https://marketplace-api.sequence.app/moonbase-alpha;Moonbase-Alpha Marketplace API,https://marketplace-api.sequence.app/moonbeam;Moonbeam Marketplace API,https://marketplace-api.sequence.app/optimism;Optimism Marketplace API,https://marketplace-api.sequence.app/optimism-sepolia;Optimism-Sepolia Marketplace API,https://marketplace-api.sequence.app/polygon;Polygon Marketplace API,https://marketplace-api.sequence.app/polygon-zkevm;Polygon-Zkevm Marketplace API,https://marketplace-api.sequence.app/rootnet;Rootnet Marketplace API,https://marketplace-api.sequence.app/rootnet-porcini;Rootnet-Porcini Marketplace API,https://marketplace-api.sequence.app/sepolia;Sepolia Marketplace API,https://marketplace-api.sequence.app/skale-nebula;Skale-Nebula Marketplace API,https://marketplace-api.sequence.app/skale-nebula-testnet;Skale-Nebula-Testnet Marketplace API,https://marketplace-api.sequence.app/somnia-testnet;Somnia-Testnet Marketplace API,https://marketplace-api.sequence.app/soneium;Soneium Marketplace API,https://marketplace-api.sequence.app/soneium-minato;Soneium-Minato Marketplace API,https://marketplace-api.sequence.app/telos;Telos Marketplace API,https://marketplace-api.sequence.app/telos-testnet;Telos-Testnet Marketplace API,https://marketplace-api.sequence.app/toy-testnet;Toy-Testnet Marketplace API,https://marketplace-api.sequence.app/xai;Xai Marketplace API,https://marketplace-api.sequence.app/xai-sepolia;Xai-Sepolia Marketplace API,https://marketplace-api.sequence.app/xr-sepolia;Xr-Sepolia Marketplace API,https://marketplace-api.sequence.app/xr1;Xr1 Marketplace API -securityAnnotation=@auth -securitySchemes={       'ApiKeyAuth': {         'type': 'apiKey',         'in': 'header',         'description': 'Project access key for authenticating requests, get an access key at https://sequence.build',         'name': 'X-Access-Key'       },     } -out=proto/docs/marketplace.gen.yaml
openapi: 3.0.0
info:
  title: 'Marketplace Api'
  version: ''
servers:
  - url: 'https://marketplace-api.sequence.app/amoy'
    description: 'Amoy Marketplace API'
  - url: 'https://marketplace-api.sequence.app/apechain'
    description: 'Apechain Marketplace API'
  - url: 'https://marketplace-api.sequence.app/apechain-testnet'
    description: 'Apechain-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/arbitrum'
    description: 'Arbitrum Marketplace API'
  - url: 'https://marketplace-api.sequence.app/arbitrum-nova'
    description: 'Arbitrum-Nova Marketplace API'
  - url: 'https://marketplace-api.sequence.app/arbitrum-sepolia'
    description: 'Arbitrum-Sepolia Marketplace API'
  - url: 'https://marketplace-api.sequence.app/avalanche'
    description: 'Avalanche Marketplace API'
  - url: 'https://marketplace-api.sequence.app/avalanche-testnet'
    description: 'Avalanche-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/b3'
    description: 'B3 Marketplace API'
  - url: 'https://marketplace-api.sequence.app/b3-sepolia'
    description: 'B3-Sepolia Marketplace API'
  - url: 'https://marketplace-api.sequence.app/base'
    description: 'Base Marketplace API'
  - url: 'https://marketplace-api.sequence.app/base-sepolia'
    description: 'Base-Sepolia Marketplace API'
  - url: 'https://marketplace-api.sequence.app/blast'
    description: 'Blast Marketplace API'
  - url: 'https://marketplace-api.sequence.app/blast-sepolia'
    description: 'Blast-Sepolia Marketplace API'
  - url: 'https://marketplace-api.sequence.app/bsc'
    description: 'Bsc Marketplace API'
  - url: 'https://marketplace-api.sequence.app/bsc-testnet'
    description: 'Bsc-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/etherlink'
    description: 'Etherlink Marketplace API'
  - url: 'https://marketplace-api.sequence.app/etherlink-testnet'
    description: 'Etherlink-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/frequency-testnet'
    description: 'Frequency-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/gnosis'
    description: 'Gnosis Marketplace API'
  - url: 'https://marketplace-api.sequence.app/homeverse'
    description: 'Homeverse Marketplace API'
  - url: 'https://marketplace-api.sequence.app/homeverse-testnet'
    description: 'Homeverse-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/immutable-zkevm'
    description: 'Immutable-Zkevm Marketplace API'
  - url: 'https://marketplace-api.sequence.app/immutable-zkevm-testnet'
    description: 'Immutable-Zkevm-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/laos'
    description: 'Laos Marketplace API'
  - url: 'https://marketplace-api.sequence.app/laos-sigma-testnet'
    description: 'Laos-Sigma-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/mainnet'
    description: 'Mainnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/monad-testnet'
    description: 'Monad-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/moonbase-alpha'
    description: 'Moonbase-Alpha Marketplace API'
  - url: 'https://marketplace-api.sequence.app/moonbeam'
    description: 'Moonbeam Marketplace API'
  - url: 'https://marketplace-api.sequence.app/optimism'
    description: 'Optimism Marketplace API'
  - url: 'https://marketplace-api.sequence.app/optimism-sepolia'
    description: 'Optimism-Sepolia Marketplace API'
  - url: 'https://marketplace-api.sequence.app/polygon'
    description: 'Polygon Marketplace API'
  - url: 'https://marketplace-api.sequence.app/polygon-zkevm'
    description: 'Polygon-Zkevm Marketplace API'
  - url: 'https://marketplace-api.sequence.app/rootnet'
    description: 'Rootnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/rootnet-porcini'
    description: 'Rootnet-Porcini Marketplace API'
  - url: 'https://marketplace-api.sequence.app/sepolia'
    description: 'Sepolia Marketplace API'
  - url: 'https://marketplace-api.sequence.app/skale-nebula'
    description: 'Skale-Nebula Marketplace API'
  - url: 'https://marketplace-api.sequence.app/skale-nebula-testnet'
    description: 'Skale-Nebula-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/somnia-testnet'
    description: 'Somnia-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/soneium'
    description: 'Soneium Marketplace API'
  - url: 'https://marketplace-api.sequence.app/soneium-minato'
    description: 'Soneium-Minato Marketplace API'
  - url: 'https://marketplace-api.sequence.app/telos'
    description: 'Telos Marketplace API'
  - url: 'https://marketplace-api.sequence.app/telos-testnet'
    description: 'Telos-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/toy-testnet'
    description: 'Toy-Testnet Marketplace API'
  - url: 'https://marketplace-api.sequence.app/xai'
    description: 'Xai Marketplace API'
  - url: 'https://marketplace-api.sequence.app/xai-sepolia'
    description: 'Xai-Sepolia Marketplace API'
  - url: 'https://marketplace-api.sequence.app/xr-sepolia'
    description: 'Xr-Sepolia Marketplace API'
  - url: 'https://marketplace-api.sequence.app/xr1'
    description: 'Xr1 Marketplace API'
components:
  securitySchemes: {ApiKeyAuth: {type: apiKey, in: header, description: 'Project access key for authenticating requests, get an access key at https://sequence.build', name: X-Access-Key}}
  schemas:
    ErrorWebrpcEndpoint:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcEndpoint"
        code:
          type: number
          example: 0
        msg:
          type: string
          example: "endpoint error"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcRequestFailed:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcRequestFailed"
        code:
          type: number
          example: -1
        msg:
          type: string
          example: "request failed"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcBadRoute:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadRoute"
        code:
          type: number
          example: -2
        msg:
          type: string
          example: "bad route"
        cause:
          type: string
        status:
          type: number
          example: 404
    ErrorWebrpcBadMethod:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadMethod"
        code:
          type: number
          example: -3
        msg:
          type: string
          example: "bad method"
        cause:
          type: string
        status:
          type: number
          example: 405
    ErrorWebrpcBadRequest:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadRequest"
        code:
          type: number
          example: -4
        msg:
          type: string
          example: "bad request"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcBadResponse:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadResponse"
        code:
          type: number
          example: -5
        msg:
          type: string
          example: "bad response"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorWebrpcServerPanic:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcServerPanic"
        code:
          type: number
          example: -6
        msg:
          type: string
          example: "server panic"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorWebrpcInternalError:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcInternalError"
        code:
          type: number
          example: -7
        msg:
          type: string
          example: "internal error"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorWebrpcClientDisconnected:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcClientDisconnected"
        code:
          type: number
          example: -8
        msg:
          type: string
          example: "client disconnected"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcStreamLost:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcStreamLost"
        code:
          type: number
          example: -9
        msg:
          type: string
          example: "stream lost"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcStreamFinished:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcStreamFinished"
        code:
          type: number
          example: -10
        msg:
          type: string
          example: "stream finished"
        cause:
          type: string
        status:
          type: number
          example: 200
    ErrorUnauthorized:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "Unauthorized"
        code:
          type: number
          example: 1000
        msg:
          type: string
          example: "Unauthorized access"
        cause:
          type: string
        status:
          type: number
          example: 401
    ErrorPermissionDenied:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "PermissionDenied"
        code:
          type: number
          example: 1001
        msg:
          type: string
          example: "Permission denied"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorSessionExpired:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "SessionExpired"
        code:
          type: number
          example: 1002
        msg:
          type: string
          example: "Session expired"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorMethodNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "MethodNotFound"
        code:
          type: number
          example: 1003
        msg:
          type: string
          example: "Method not found"
        cause:
          type: string
        status:
          type: number
          example: 404
    ErrorTimeout:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "Timeout"
        code:
          type: number
          example: 2000
        msg:
          type: string
          example: "Request timed out"
        cause:
          type: string
        status:
          type: number
          example: 408
    ErrorInvalidArgument:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "InvalidArgument"
        code:
          type: number
          example: 2001
        msg:
          type: string
          example: "Invalid argument"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "NotFound"
        code:
          type: number
          example: 3000
        msg:
          type: string
          example: "Resource not found"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorUserNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "UserNotFound"
        code:
          type: number
          example: 3001
        msg:
          type: string
          example: "User not found"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorProjectNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "ProjectNotFound"
        code:
          type: number
          example: 3002
        msg:
          type: string
          example: "Project not found"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorInvalidTier:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "InvalidTier"
        code:
          type: number
          example: 3003
        msg:
          type: string
          example: "Invalid subscription tier"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorProjectLimitReached:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "ProjectLimitReached"
        code:
          type: number
          example: 3005
        msg:
          type: string
          example: "Project limit reached"
        cause:
          type: string
        status:
          type: number
          example: 402
    ErrorNotImplemented:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "NotImplemented"
        code:
          type: number
          example: 9999
        msg:
          type: string
          example: "Not Implemented"
        cause:
          type: string
        status:
          type: number
          example: 500
    TokenMetadata:
      type: object
      required:
        - tokenId
        - name
        - attributes
      properties:
        tokenId:
          type: string
        name:
          type: string
        description:
          type: string
        image:
          type: string
        video:
          type: string
        audio:
          type: string
        properties:
          type: object
          description: 'map<string,any>'
          additionalProperties:
            type: object
        attributes:
          type: array
          description: '[]map<string,any>'
          items:
            type: object
            description: 'map<string,any>'
            additionalProperties:
              type: object
        imageData:
          type: string
        externalUrl:
          type: string
        backgroundColor:
          type: string
        animationUrl:
          type: string
        decimals:
          type: number
        updatedAt:
          type: string
        assets:
          type: array
          description: '[]Asset'
          items:
            $ref: '#/components/schemas/Asset'
    Asset:
      type: object
      required:
        - id
        - collectionId
        - tokenId
        - metadataField
      properties:
        id:
          type: number
        collectionId:
          type: number
        tokenId:
          type: string
        url:
          type: string
        metadataField:
          type: string
        filename:
          type: string
        filesize:
          type: number
        mimeType:
          type: string
        width:
          type: number
        height:
          type: number
        updatedAt:
          type: string
    SortOrder:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - DESC
        - ASC
    PropertyType:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - INT
        - STRING
        - ARRAY
        - GENERIC
    MarketplaceKind:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - sequence_marketplace_v1
        - sequence_marketplace_v2
        - blur
        - zerox
        - opensea
        - looks_rare
        - x2y2
        - alienswap
        - payment_processor
        - mintify
        - magic_eden
    OrderbookKind:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - unknown
        - sequence_marketplace_v1
        - sequence_marketplace_v2
        - blur
        - opensea
        - looks_rare
        - reservoir
        - x2y2
    SourceKind:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - unknown
        - external
        - sequence_marketplace_v1
        - sequence_marketplace_v2
    OrderSide:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - listing
        - offer
    OrderStatus:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - active
        - inactive
        - expired
        - cancelled
        - filled
        - decimals_missing
    ContractType:
      type: string
      description: Represented as uint16 on the server side
      enum:
        - UNKNOWN
        - ERC20
        - ERC721
        - ERC1155
    CollectionPriority:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - low
        - normal
        - high
    CollectionStatus:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - created
        - syncing_contract_metadata
        - synced_contract_metadata
        - syncing_metadata
        - synced_metadata
        - syncing_tokens
        - synced_tokens
        - syncing_orders
        - active
        - failed
        - inactive
        - incompatible_type
    ProjectStatus:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - active
        - inactive
    CollectibleStatus:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - active
        - inactive
    CurrencyStatus:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - created
        - syncing_metadata
        - active
        - failed
    WalletKind:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - sequence
    StepType:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - tokenApproval
        - buy
        - sell
        - createListing
        - createOffer
        - signEIP712
        - signEIP191
        - cancel
    TransactionCrypto:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - none
        - partially
        - all
    TransactionNFTCheckoutProvider:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - unknown
        - sardine
        - transak
    TransactionOnRampProvider:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - unknown
        - sardine
        - transak
    TransactionSwapProvider:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - unknown
        - zerox
    ExecuteType:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - unknown
        - order
    ActivityAction:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - unknown
        - listing
        - offer
        - mint
        - sale
        - listingCancel
        - offerCancel
        - transfer
    Page:
      type: object
      required:
        - page
        - pageSize
      properties:
        page:
          type: number
        pageSize:
          type: number
        more:
          type: boolean
        sort:
          type: array
          description: '[]SortBy'
          items:
            $ref: '#/components/schemas/SortBy'
    SortBy:
      type: object
      required:
        - column
        - order
      properties:
        column:
          type: string
        order:
          $ref: '#/components/schemas/SortOrder'
    Filter:
      type: object
      properties:
        text:
          type: string
        properties:
          type: array
          description: '[]PropertyFilter'
          items:
            $ref: '#/components/schemas/PropertyFilter'
    PropertyFilter:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/PropertyType'
        min:
          type: number
        max:
          type: number
        values:
          type: array
          description: '[]any'
          items:
            type: object
    CollectiblesFilter:
      type: object
      required:
        - includeEmpty
      properties:
        includeEmpty:
          type: boolean
        searchText:
          type: string
        properties:
          type: array
          description: '[]PropertyFilter'
          items:
            $ref: '#/components/schemas/PropertyFilter'
        marketplaces:
          type: array
          description: '[]MarketplaceKind'
          items:
            $ref: '#/components/schemas/MarketplaceKind'
        inAccounts:
          type: array
          description: '[]string'
          items:
            type: string
        notInAccounts:
          type: array
          description: '[]string'
          items:
            type: string
        ordersCreatedBy:
          type: array
          description: '[]string'
          items:
            type: string
        ordersNotCreatedBy:
          type: array
          description: '[]string'
          items:
            type: string
        inCurrencyAddresses:
          type: array
          description: '[]string'
          items:
            type: string
        notInCurrencyAddresses:
          type: array
          description: '[]string'
          items:
            type: string
    Order:
      type: object
      required:
        - id
        - collectionId
        - orderId
        - marketplace
        - source
        - side
        - status
        - chainId
        - originName
        - collectionContractAddress
        - createdBy
        - priceAmount
        - priceAmountFormatted
        - priceAmountNet
        - priceAmountNetFormatted
        - priceCurrencyAddress
        - priceDecimals
        - priceUSD
        - priceUSDFormatted
        - quantityInitial
        - quantityInitialFormatted
        - quantityRemaining
        - quantityRemainingFormatted
        - quantityAvailable
        - quantityAvailableFormatted
        - quantityDecimals
        - feeBps
        - feeBreakdown
        - validFrom
        - validUntil
        - blockNumber
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        collectionId:
          type: number
        collectibleId:
          type: number
        orderId:
          type: string
        marketplace:
          $ref: '#/components/schemas/MarketplaceKind'
        source:
          $ref: '#/components/schemas/SourceKind'
        side:
          $ref: '#/components/schemas/OrderSide'
        status:
          $ref: '#/components/schemas/OrderStatus'
        chainId:
          type: number
        originName:
          type: string
        collectionContractAddress:
          type: string
        tokenId:
          type: string
        createdBy:
          type: string
        priceAmount:
          type: string
        priceAmountFormatted:
          type: string
        priceAmountNet:
          type: string
        priceAmountNetFormatted:
          type: string
        priceCurrencyAddress:
          type: string
        priceDecimals:
          type: number
        priceUSD:
          type: number
        priceUSDFormatted:
          type: string
        quantityInitial:
          type: string
        quantityInitialFormatted:
          type: string
        quantityRemaining:
          type: string
        quantityRemainingFormatted:
          type: string
        quantityAvailable:
          type: string
        quantityAvailableFormatted:
          type: string
        quantityDecimals:
          type: number
        feeBps:
          type: number
        feeBreakdown:
          type: array
          description: '[]FeeBreakdown'
          items:
            $ref: '#/components/schemas/FeeBreakdown'
        validFrom:
          type: string
        validUntil:
          type: string
        blockNumber:
          type: number
        orderCreatedAt:
          type: string
        orderUpdatedAt:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
    FeeBreakdown:
      type: object
      required:
        - kind
        - recipientAddress
        - bps
      properties:
        kind:
          type: string
        recipientAddress:
          type: string
        bps:
          type: number
    CollectibleOrder:
      type: object
      required:
        - metadata
      properties:
        metadata:
          $ref: '#/components/schemas/TokenMetadata'
        order:
          $ref: '#/components/schemas/Order'
        listing:
          $ref: '#/components/schemas/Order'
        offer:
          $ref: '#/components/schemas/Order'
    OrderFilter:
      type: object
      properties:
        createdBy:
          type: array
          description: '[]string'
          items:
            type: string
        marketplace:
          type: array
          description: '[]MarketplaceKind'
          items:
            $ref: '#/components/schemas/MarketplaceKind'
        currencies:
          type: array
          description: '[]string'
          items:
            type: string
    Collection:
      type: object
      required:
        - id
        - status
        - chainId
        - contractAddress
        - contractType
        - priority
        - tokenQuantityDecimals
        - config
        - syncContractMetadataJob
        - refreshMetadataJob
        - refreshMetadataTimestamp
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        status:
          $ref: '#/components/schemas/CollectionStatus'
        chainId:
          type: number
        contractAddress:
          type: string
        contractType:
          $ref: '#/components/schemas/ContractType'
        priority:
          $ref: '#/components/schemas/CollectionPriority'
        tokenQuantityDecimals:
          type: number
        config:
          $ref: '#/components/schemas/CollectionConfig'
        syncContractMetadataJob:
          type: number
        refreshMetadataJob:
          type: number
        refreshMetadataTimestamp:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
    CollectionConfig:
      type: object
      required:
        - lastSynced
        - collectiblesSynced
        - activitiesSynced
        - activitiesSyncedContinuity
      properties:
        lastSynced:
          type: object
          description: 'map<string,CollectionLastSynced>'
          additionalProperties:
            $ref: '#/components/schemas/CollectionLastSynced'
        collectiblesSynced:
          type: string
        activitiesSynced:
          type: string
        activitiesSyncedContinuity:
          type: string
    CollectionLastSynced:
      type: object
      required:
        - allOrders
        - newOrders
      properties:
        allOrders:
          type: string
        newOrders:
          type: string
    Project:
      type: object
      required:
        - id
        - projectId
        - collectionId
        - chainId
        - contractAddress
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        projectId:
          type: number
        collectionId:
          type: number
        chainId:
          type: number
        contractAddress:
          type: string
        status:
          $ref: '#/components/schemas/ProjectStatus'
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
    Collectible:
      type: object
      required:
        - id
        - collectionId
        - chainId
        - contractAddress
        - status
        - tokenId
        - decimals
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        collectionId:
          type: number
        chainId:
          type: number
        contractAddress:
          type: string
        status:
          $ref: '#/components/schemas/CollectibleStatus'
        tokenId:
          type: string
        decimals:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
    Currency:
      type: object
      required:
        - id
        - chainId
        - contractAddress
        - status
        - name
        - symbol
        - decimals
        - imageUrl
        - exchangeRate
        - defaultChainCurrency
        - nativeCurrency
        - createdAt
        - updatedAt
        - refreshMetadataJob
      properties:
        id:
          type: number
        chainId:
          type: number
        contractAddress:
          type: string
        status:
          $ref: '#/components/schemas/CurrencyStatus'
        name:
          type: string
        symbol:
          type: string
        decimals:
          type: number
        imageUrl:
          type: string
        exchangeRate:
          type: number
        defaultChainCurrency:
          type: boolean
        nativeCurrency:
          type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
        refreshMetadataJob:
          type: number
    OrderData:
      type: object
      required:
        - orderId
        - quantity
      properties:
        orderId:
          type: string
        quantity:
          type: string
        tokenId:
          type: string
    AdditionalFee:
      type: object
      required:
        - amount
        - receiver
      properties:
        amount:
          type: string
        receiver:
          type: string
    Step:
      type: object
      required:
        - id
        - data
        - to
        - value
        - price
      properties:
        id:
          $ref: '#/components/schemas/StepType'
        data:
          type: string
        to:
          type: string
        value:
          type: string
        price:
          type: string
        signature:
          $ref: '#/components/schemas/Signature'
        post:
          $ref: '#/components/schemas/PostRequest'
        executeType:
          $ref: '#/components/schemas/ExecuteType'
    PostRequest:
      type: object
      required:
        - endpoint
        - method
        - body
      properties:
        endpoint:
          type: string
        method:
          type: string
        body:
          type: object
    CreateReq:
      type: object
      required:
        - tokenId
        - quantity
        - expiry
        - currencyAddress
        - pricePerToken
      properties:
        tokenId:
          type: string
        quantity:
          type: string
        expiry:
          type: string
        currencyAddress:
          type: string
        pricePerToken:
          type: string
    GetOrdersInput:
      type: object
      required:
        - contractAddress
        - orderId
        - marketplace
      properties:
        contractAddress:
          type: string
        orderId:
          type: string
        marketplace:
          $ref: '#/components/schemas/MarketplaceKind'
    Signature:
      type: object
      required:
        - domain
        - types
        - primaryType
        - value
      properties:
        domain:
          $ref: '#/components/schemas/Domain'
        types:
          type: object
        primaryType:
          type: string
        value:
          type: object
    Domain:
      type: object
      required:
        - name
        - version
        - chainId
        - verifyingContract
      properties:
        name:
          type: string
        version:
          type: string
        chainId:
          type: number
        verifyingContract:
          type: string
    CheckoutOptionsMarketplaceOrder:
      type: object
      required:
        - contractAddress
        - orderId
        - marketplace
      properties:
        contractAddress:
          type: string
        orderId:
          type: string
        marketplace:
          $ref: '#/components/schemas/MarketplaceKind'
    CheckoutOptionsItem:
      type: object
      required:
        - tokenId
        - quantity
      properties:
        tokenId:
          type: string
        quantity:
          type: string
    CheckoutOptions:
      type: object
      required:
        - crypto
        - swap
        - nftCheckout
        - onRamp
      properties:
        crypto:
          $ref: '#/components/schemas/TransactionCrypto'
        swap:
          type: array
          description: '[]TransactionSwapProvider'
          items:
            $ref: '#/components/schemas/TransactionSwapProvider'
        nftCheckout:
          type: array
          description: '[]TransactionNFTCheckoutProvider'
          items:
            $ref: '#/components/schemas/TransactionNFTCheckoutProvider'
        onRamp:
          type: array
          description: '[]TransactionOnRampProvider'
          items:
            $ref: '#/components/schemas/TransactionOnRampProvider'
    Activity:
      type: object
      required:
        - id
        - collectionId
        - collectibleId
        - chainId
        - contractAddress
        - tokenId
        - action
        - txHash
        - source
        - from
        - quantity
        - quantityDecimals
        - activityCreatedAt
        - logIndex
        - uniqueHash
        - createdAt
        - updatedAt
      properties:
        id:
          type: number
        collectionId:
          type: number
        collectibleId:
          type: number
        chainId:
          type: number
        contractAddress:
          type: string
        tokenId:
          type: string
        action:
          $ref: '#/components/schemas/ActivityAction'
        txHash:
          type: string
        source:
          $ref: '#/components/schemas/SourceKind'
        from:
          type: string
        to:
          type: string
        quantity:
          type: string
        quantityDecimals:
          type: number
        priceAmount:
          type: string
        priceAmountFormatted:
          type: string
        priceCurrencyAddress:
          type: string
        priceDecimals:
          type: number
        activityCreatedAt:
          type: string
        logIndex:
          type: number
        uniqueHash:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
    Marketplace_ListCurrencies_Request:
      type: object
    Marketplace_GetCollectionDetail_Request:
      type: object
      properties:
        contractAddress:
          type: string
    Marketplace_GetCollectible_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
    Marketplace_GetLowestPriceOfferForCollectible_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
    Marketplace_GetHighestPriceOfferForCollectible_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
    Marketplace_GetLowestPriceListingForCollectible_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
    Marketplace_GetHighestPriceListingForCollectible_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
    Marketplace_ListListingsForCollectible_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_ListOffersForCollectible_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_GetCountOfListingsForCollectible_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
    Marketplace_GetCountOfOffersForCollectible_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
    Marketplace_GetCollectibleLowestOffer_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
    Marketplace_GetCollectibleHighestOffer_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
    Marketplace_GetCollectibleLowestListing_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
    Marketplace_GetCollectibleHighestListing_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
    Marketplace_ListCollectibleListings_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_ListCollectibleOffers_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        filter:
          $ref: '#/components/schemas/OrderFilter'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_GenerateBuyTransaction_Request:
      type: object
      properties:
        collectionAddress:
          type: string
        buyer:
          type: string
        marketplace:
          $ref: '#/components/schemas/MarketplaceKind'
        ordersData:
          type: array
          description: '[]OrderData'
          items:
            $ref: '#/components/schemas/OrderData'
        additionalFees:
          type: array
          description: '[]AdditionalFee'
          items:
            $ref: '#/components/schemas/AdditionalFee'
        walletType:
          $ref: '#/components/schemas/WalletKind'
    Marketplace_GenerateSellTransaction_Request:
      type: object
      properties:
        collectionAddress:
          type: string
        seller:
          type: string
        marketplace:
          $ref: '#/components/schemas/MarketplaceKind'
        ordersData:
          type: array
          description: '[]OrderData'
          items:
            $ref: '#/components/schemas/OrderData'
        additionalFees:
          type: array
          description: '[]AdditionalFee'
          items:
            $ref: '#/components/schemas/AdditionalFee'
        walletType:
          $ref: '#/components/schemas/WalletKind'
    Marketplace_GenerateListingTransaction_Request:
      type: object
      properties:
        collectionAddress:
          type: string
        owner:
          type: string
        contractType:
          $ref: '#/components/schemas/ContractType'
        orderbook:
          $ref: '#/components/schemas/OrderbookKind'
        listing:
          $ref: '#/components/schemas/CreateReq'
        walletType:
          $ref: '#/components/schemas/WalletKind'
    Marketplace_GenerateOfferTransaction_Request:
      type: object
      properties:
        collectionAddress:
          type: string
        maker:
          type: string
        contractType:
          $ref: '#/components/schemas/ContractType'
        orderbook:
          $ref: '#/components/schemas/OrderbookKind'
        offer:
          $ref: '#/components/schemas/CreateReq'
        walletType:
          $ref: '#/components/schemas/WalletKind'
    Marketplace_GenerateCancelTransaction_Request:
      type: object
      properties:
        collectionAddress:
          type: string
        maker:
          type: string
        marketplace:
          $ref: '#/components/schemas/MarketplaceKind'
        orderId:
          type: string
    Marketplace_Execute_Request:
      type: object
      properties:
        signature:
          type: string
        method:
          type: string
        endpoint:
          type: string
        executeType:
          $ref: '#/components/schemas/ExecuteType'
        body:
          type: object
    Marketplace_ListCollectibles_Request:
      type: object
      properties:
        side:
          $ref: '#/components/schemas/OrderSide'
        contractAddress:
          type: string
        filter:
          $ref: '#/components/schemas/CollectiblesFilter'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_GetCountOfAllCollectibles_Request:
      type: object
      properties:
        contractAddress:
          type: string
    Marketplace_GetCountOfFilteredCollectibles_Request:
      type: object
      properties:
        side:
          $ref: '#/components/schemas/OrderSide'
        contractAddress:
          type: string
        filter:
          $ref: '#/components/schemas/CollectiblesFilter'
    Marketplace_GetFloorOrder_Request:
      type: object
      properties:
        contractAddress:
          type: string
        filter:
          $ref: '#/components/schemas/CollectiblesFilter'
    Marketplace_ListCollectionActivities_Request:
      type: object
      properties:
        contractAddress:
          type: string
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_ListCollectibleActivities_Request:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_ListCollectiblesWithLowestListing_Request:
      type: object
      properties:
        contractAddress:
          type: string
        filter:
          $ref: '#/components/schemas/CollectiblesFilter'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_ListCollectiblesWithHighestOffer_Request:
      type: object
      properties:
        contractAddress:
          type: string
        filter:
          $ref: '#/components/schemas/CollectiblesFilter'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_GetOrders_Request:
      type: object
      properties:
        input:
          type: array
          description: '[]GetOrdersInput'
          items:
            $ref: '#/components/schemas/GetOrdersInput'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_CheckoutOptionsMarketplace_Request:
      type: object
      properties:
        wallet:
          type: string
        orders:
          type: array
          description: '[]CheckoutOptionsMarketplaceOrder'
          items:
            $ref: '#/components/schemas/CheckoutOptionsMarketplaceOrder'
        additionalFee:
          type: number
    Marketplace_CheckoutOptionsSalesContract_Request:
      type: object
      properties:
        wallet:
          type: string
        contractAddress:
          type: string
        collectionAddress:
          type: string
        items:
          type: array
          description: '[]CheckoutOptionsItem'
          items:
            $ref: '#/components/schemas/CheckoutOptionsItem'
    Marketplace_SupportedMarketplaces_Request:
      type: object
    Marketplace_ListCurrencies_Response:
      type: object
      properties:
        currencies:
          type: array
          description: '[]Currency'
          items:
            $ref: '#/components/schemas/Currency'
    Marketplace_GetCollectionDetail_Response:
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
    Marketplace_GetCollectible_Response:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/TokenMetadata'
    Marketplace_GetLowestPriceOfferForCollectible_Response:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    Marketplace_GetHighestPriceOfferForCollectible_Response:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    Marketplace_GetLowestPriceListingForCollectible_Response:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    Marketplace_GetHighestPriceListingForCollectible_Response:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    Marketplace_ListListingsForCollectible_Response:
      type: object
      properties:
        listings:
          type: array
          description: '[]Order'
          items:
            $ref: '#/components/schemas/Order'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_ListOffersForCollectible_Response:
      type: object
      properties:
        offers:
          type: array
          description: '[]Order'
          items:
            $ref: '#/components/schemas/Order'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_GetCountOfListingsForCollectible_Response:
      type: object
      properties:
        count:
          type: number
    Marketplace_GetCountOfOffersForCollectible_Response:
      type: object
      properties:
        count:
          type: number
    Marketplace_GetCollectibleLowestOffer_Response:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    Marketplace_GetCollectibleHighestOffer_Response:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    Marketplace_GetCollectibleLowestListing_Response:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    Marketplace_GetCollectibleHighestListing_Response:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    Marketplace_ListCollectibleListings_Response:
      type: object
      properties:
        listings:
          type: array
          description: '[]Order'
          items:
            $ref: '#/components/schemas/Order'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_ListCollectibleOffers_Response:
      type: object
      properties:
        offers:
          type: array
          description: '[]Order'
          items:
            $ref: '#/components/schemas/Order'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_GenerateBuyTransaction_Response:
      type: object
      properties:
        steps:
          type: array
          description: '[]Step'
          items:
            $ref: '#/components/schemas/Step'
    Marketplace_GenerateSellTransaction_Response:
      type: object
      properties:
        steps:
          type: array
          description: '[]Step'
          items:
            $ref: '#/components/schemas/Step'
    Marketplace_GenerateListingTransaction_Response:
      type: object
      properties:
        steps:
          type: array
          description: '[]Step'
          items:
            $ref: '#/components/schemas/Step'
    Marketplace_GenerateOfferTransaction_Response:
      type: object
      properties:
        steps:
          type: array
          description: '[]Step'
          items:
            $ref: '#/components/schemas/Step'
    Marketplace_GenerateCancelTransaction_Response:
      type: object
      properties:
        steps:
          type: array
          description: '[]Step'
          items:
            $ref: '#/components/schemas/Step'
    Marketplace_Execute_Response:
      type: object
      properties:
        orderId:
          type: string
    Marketplace_ListCollectibles_Response:
      type: object
      properties:
        collectibles:
          type: array
          description: '[]CollectibleOrder'
          items:
            $ref: '#/components/schemas/CollectibleOrder'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_GetCountOfAllCollectibles_Response:
      type: object
      properties:
        count:
          type: number
    Marketplace_GetCountOfFilteredCollectibles_Response:
      type: object
      properties:
        count:
          type: number
    Marketplace_GetFloorOrder_Response:
      type: object
      properties:
        collectible:
          $ref: '#/components/schemas/CollectibleOrder'
    Marketplace_ListCollectionActivities_Response:
      type: object
      properties:
        activities:
          type: array
          description: '[]Activity'
          items:
            $ref: '#/components/schemas/Activity'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_ListCollectibleActivities_Response:
      type: object
      properties:
        activities:
          type: array
          description: '[]Activity'
          items:
            $ref: '#/components/schemas/Activity'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_ListCollectiblesWithLowestListing_Response:
      type: object
      properties:
        collectibles:
          type: array
          description: '[]CollectibleOrder'
          items:
            $ref: '#/components/schemas/CollectibleOrder'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_ListCollectiblesWithHighestOffer_Response:
      type: object
      properties:
        collectibles:
          type: array
          description: '[]CollectibleOrder'
          items:
            $ref: '#/components/schemas/CollectibleOrder'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_GetOrders_Response:
      type: object
      properties:
        orders:
          type: array
          description: '[]Order'
          items:
            $ref: '#/components/schemas/Order'
        page:
          $ref: '#/components/schemas/Page'
    Marketplace_CheckoutOptionsMarketplace_Response:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/CheckoutOptions'
    Marketplace_CheckoutOptionsSalesContract_Response:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/CheckoutOptions'
    Marketplace_SupportedMarketplaces_Response:
      type: object
      properties:
        marketplaces:
          type: array
          description: '[]MarketplaceKind'
          items:
            $ref: '#/components/schemas/MarketplaceKind'
paths:
  /rpc/Marketplace/ListCurrencies:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_ListCurrencies_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_ListCurrencies_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetCollectionDetail:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetCollectionDetail_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetCollectionDetail_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetCollectible:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetCollectible_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetCollectible_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetLowestPriceOfferForCollectible:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetLowestPriceOfferForCollectible_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetLowestPriceOfferForCollectible_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetHighestPriceOfferForCollectible:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetHighestPriceOfferForCollectible_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetHighestPriceOfferForCollectible_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetLowestPriceListingForCollectible:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetLowestPriceListingForCollectible_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetLowestPriceListingForCollectible_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetHighestPriceListingForCollectible:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetHighestPriceListingForCollectible_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetHighestPriceListingForCollectible_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/ListListingsForCollectible:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_ListListingsForCollectible_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_ListListingsForCollectible_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/ListOffersForCollectible:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_ListOffersForCollectible_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_ListOffersForCollectible_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetCountOfListingsForCollectible:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetCountOfListingsForCollectible_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetCountOfListingsForCollectible_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetCountOfOffersForCollectible:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetCountOfOffersForCollectible_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetCountOfOffersForCollectible_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetCollectibleLowestOffer:
    post:
      summary: "Deprecated: Please use GetLowestPriceOfferForCollectible instead."
      deprecated: true
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetCollectibleLowestOffer_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetCollectibleLowestOffer_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetCollectibleHighestOffer:
    post:
      summary: "Deprecated: Please use GetHighestPriceOfferForCollectible instead."
      deprecated: true
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetCollectibleHighestOffer_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetCollectibleHighestOffer_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetCollectibleLowestListing:
    post:
      summary: "Deprecated: Please use GetLowestPriceListingForCollectible instead."
      deprecated: true
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetCollectibleLowestListing_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetCollectibleLowestListing_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetCollectibleHighestListing:
    post:
      summary: "Deprecated: Please use GetHighestPriceListingForCollectible instead."
      deprecated: true
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetCollectibleHighestListing_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetCollectibleHighestListing_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/ListCollectibleListings:
    post:
      summary: "Deprecated: Please use ListListingsForCollectible instead."
      deprecated: true
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_ListCollectibleListings_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_ListCollectibleListings_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/ListCollectibleOffers:
    post:
      summary: "Deprecated: Please use ListOffersForCollectible instead."
      deprecated: true
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_ListCollectibleOffers_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_ListCollectibleOffers_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GenerateBuyTransaction:
    post:
      summary: "checkout process"
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GenerateBuyTransaction_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GenerateBuyTransaction_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GenerateSellTransaction:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GenerateSellTransaction_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GenerateSellTransaction_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GenerateListingTransaction:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GenerateListingTransaction_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GenerateListingTransaction_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GenerateOfferTransaction:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GenerateOfferTransaction_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GenerateOfferTransaction_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GenerateCancelTransaction:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GenerateCancelTransaction_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GenerateCancelTransaction_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/Execute:
    post:
      summary: "only used in a case of external transactions ( when we create off-chain transactions ) for instance opensea market"
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_Execute_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_Execute_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/ListCollectibles:
    post:
      summary: "list of collectibles with best order for each collectible, by default this only returns collectibles with an order"
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_ListCollectibles_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_ListCollectibles_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetCountOfAllCollectibles:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetCountOfAllCollectibles_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetCountOfAllCollectibles_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetCountOfFilteredCollectibles:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetCountOfFilteredCollectibles_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetCountOfFilteredCollectibles_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetFloorOrder:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetFloorOrder_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetFloorOrder_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/ListCollectionActivities:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_ListCollectionActivities_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_ListCollectionActivities_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/ListCollectibleActivities:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_ListCollectibleActivities_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_ListCollectibleActivities_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/ListCollectiblesWithLowestListing:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_ListCollectiblesWithLowestListing_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_ListCollectiblesWithLowestListing_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/ListCollectiblesWithHighestOffer:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_ListCollectiblesWithHighestOffer_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_ListCollectiblesWithHighestOffer_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/GetOrders:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_GetOrders_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_GetOrders_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/CheckoutOptionsMarketplace:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_CheckoutOptionsMarketplace_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_CheckoutOptionsMarketplace_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/CheckoutOptionsSalesContract:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_CheckoutOptionsSalesContract_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_CheckoutOptionsSalesContract_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
  /rpc/Marketplace/SupportedMarketplaces:
    post:
      summary: ""
      security:
        - Public: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marketplace_SupportedMarketplaces_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marketplace_SupportedMarketplaces_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUserNotFound'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorInvalidTier'
                  - $ref: '#/components/schemas/ErrorProjectLimitReached'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
                  - $ref: '#/components/schemas/ErrorNotImplemented'
security:
  - ApiKeyAuth: []
