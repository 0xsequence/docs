# sequence-api v0.4.0 41bad73b43784be3b15b6b47dc632c4484669ba4
# --
# Code generated by webrpc-gen@v0.25.3 with openapi generator; DO NOT EDIT
# 
# webrpc-gen -service=API -match=@public -schema=proto/api.ridl -target=openapi -title=Sequence Api -servers=https://api.sequence.app/;Api -securityAnnotation=@auth -securitySchemes={       'ApiKeyAuth': {         'type': 'apiKey',         'in': 'header',         'description': 'Project access key for authenticating requests, get an access key at https://sequence.build',         'name': 'X-Access-Key'       },     } -out=proto/docs/api.gen.yaml
openapi: 3.0.0
info:
  title: 'Sequence Api'
  version: ''
servers:
  - url: 'https://api.sequence.app/'
    description: 'Api'
components:
  securitySchemes: {'ApiKeyAuth': {'type': 'apiKey', 'in': 'header', 'description': 'Project access key for authenticating requests, get an access key at https://sequence.build', 'name': 'X-Access-Key'}}
  schemas:
    ErrorWebrpcEndpoint:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcEndpoint"
        code:
          type: number
          example: 0
        msg:
          type: string
          example: "endpoint error"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcRequestFailed:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcRequestFailed"
        code:
          type: number
          example: -1
        msg:
          type: string
          example: "request failed"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcBadRoute:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadRoute"
        code:
          type: number
          example: -2
        msg:
          type: string
          example: "bad route"
        cause:
          type: string
        status:
          type: number
          example: 404
    ErrorWebrpcBadMethod:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadMethod"
        code:
          type: number
          example: -3
        msg:
          type: string
          example: "bad method"
        cause:
          type: string
        status:
          type: number
          example: 405
    ErrorWebrpcBadRequest:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadRequest"
        code:
          type: number
          example: -4
        msg:
          type: string
          example: "bad request"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcBadResponse:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadResponse"
        code:
          type: number
          example: -5
        msg:
          type: string
          example: "bad response"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorWebrpcServerPanic:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcServerPanic"
        code:
          type: number
          example: -6
        msg:
          type: string
          example: "server panic"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorWebrpcInternalError:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcInternalError"
        code:
          type: number
          example: -7
        msg:
          type: string
          example: "internal error"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorWebrpcClientDisconnected:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcClientDisconnected"
        code:
          type: number
          example: -8
        msg:
          type: string
          example: "client disconnected"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcStreamLost:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcStreamLost"
        code:
          type: number
          example: -9
        msg:
          type: string
          example: "stream lost"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcStreamFinished:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcStreamFinished"
        code:
          type: number
          example: -10
        msg:
          type: string
          example: "stream finished"
        cause:
          type: string
        status:
          type: number
          example: 200
    ErrorUnauthorized:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "Unauthorized"
        code:
          type: number
          example: 1000
        msg:
          type: string
          example: "Unauthorized access"
        cause:
          type: string
        status:
          type: number
          example: 401
    ErrorPermissionDenied:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "PermissionDenied"
        code:
          type: number
          example: 1001
        msg:
          type: string
          example: "Permission denied"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorSessionExpired:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "SessionExpired"
        code:
          type: number
          example: 1002
        msg:
          type: string
          example: "Session expired"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorMethodNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "MethodNotFound"
        code:
          type: number
          example: 1003
        msg:
          type: string
          example: "Method not found"
        cause:
          type: string
        status:
          type: number
          example: 404
    ErrorRequestConflict:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "RequestConflict"
        code:
          type: number
          example: 1004
        msg:
          type: string
          example: "Conflict with target resource"
        cause:
          type: string
        status:
          type: number
          example: 409
    ErrorAborted:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "Aborted"
        code:
          type: number
          example: 1005
        msg:
          type: string
          example: "Request aborted"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorGeoblocked:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "Geoblocked"
        code:
          type: number
          example: 1006
        msg:
          type: string
          example: "Geoblocked region"
        cause:
          type: string
        status:
          type: number
          example: 451
    ErrorRateLimited:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "RateLimited"
        code:
          type: number
          example: 1007
        msg:
          type: string
          example: "Rate-limited. Please slow down."
        cause:
          type: string
        status:
          type: number
          example: 429
    ErrorProjectNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "ProjectNotFound"
        code:
          type: number
          example: 1008
        msg:
          type: string
          example: "Project not found"
        cause:
          type: string
        status:
          type: number
          example: 401
    ErrorAccessKeyNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "AccessKeyNotFound"
        code:
          type: number
          example: 1101
        msg:
          type: string
          example: "Access key not found"
        cause:
          type: string
        status:
          type: number
          example: 401
    ErrorAccessKeyMismatch:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "AccessKeyMismatch"
        code:
          type: number
          example: 1102
        msg:
          type: string
          example: "Access key mismatch"
        cause:
          type: string
        status:
          type: number
          example: 409
    ErrorInvalidOrigin:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "InvalidOrigin"
        code:
          type: number
          example: 1103
        msg:
          type: string
          example: "Invalid origin for Access Key"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorInvalidService:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "InvalidService"
        code:
          type: number
          example: 1104
        msg:
          type: string
          example: "Service not enabled for Access key"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorUnauthorizedUser:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "UnauthorizedUser"
        code:
          type: number
          example: 1105
        msg:
          type: string
          example: "Unauthorized user"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorQuotaExceeded:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "QuotaExceeded"
        code:
          type: number
          example: 1200
        msg:
          type: string
          example: "Quota request exceeded"
        cause:
          type: string
        status:
          type: number
          example: 429
    ErrorQuotaRateLimit:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "QuotaRateLimit"
        code:
          type: number
          example: 1201
        msg:
          type: string
          example: "Quota rate limit exceeded"
        cause:
          type: string
        status:
          type: number
          example: 429
    ErrorNoDefaultKey:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "NoDefaultKey"
        code:
          type: number
          example: 1300
        msg:
          type: string
          example: "No default access key found"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorMaxAccessKeys:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "MaxAccessKeys"
        code:
          type: number
          example: 1301
        msg:
          type: string
          example: "Access keys limit reached"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorAtLeastOneKey:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "AtLeastOneKey"
        code:
          type: number
          example: 1302
        msg:
          type: string
          example: "You need at least one Access Key"
        cause:
          type: string
        status:
          type: number
          example: 403
    ErrorTimeout:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "Timeout"
        code:
          type: number
          example: 1900
        msg:
          type: string
          example: "Request timed out"
        cause:
          type: string
        status:
          type: number
          example: 408
    ErrorInvalidArgument:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "InvalidArgument"
        code:
          type: number
          example: 2000
        msg:
          type: string
          example: "Invalid argument"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorUnavailable:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "Unavailable"
        code:
          type: number
          example: 2002
        msg:
          type: string
          example: "Unavailable resource"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorQueryFailed:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "QueryFailed"
        code:
          type: number
          example: 2003
        msg:
          type: string
          example: "Query failed"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorNotFound:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "NotFound"
        code:
          type: number
          example: 3000
        msg:
          type: string
          example: "Resource not found"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorUnsupportedNetwork:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "UnsupportedNetwork"
        code:
          type: number
          example: 3008
        msg:
          type: string
          example: "Unsupported network"
        cause:
          type: string
        status:
          type: number
          example: 422
    SortOrder:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - DESC
        - ASC
    SardinePaymentType:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - ach
        - debit
        - credit
        - us_debit
        - international_debit
        - international_credit
    SardineQuoteType:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - buy
        - sell
    TokenType:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - ERC20
        - ERC721
        - ERC1155
    TransakBuySell:
      type: string
      description: Represented as uint8 on the server side
      enum:
        - UNKNOWN
        - BUY
        - SELL
    Version:
      type: object
      required:
        - webrpcVersion
        - schemaVersion
        - schemaHash
        - appVersion
      properties:
        webrpcVersion:
          type: string
        schemaVersion:
          type: string
        schemaHash:
          type: string
        appVersion:
          type: string
    RuntimeStatus:
      type: object
      required:
        - healthOK
        - startTime
        - uptime
        - ver
        - branch
        - commitHash
        - checks
        - numTxnsRelayed
      properties:
        healthOK:
          type: boolean
        startTime:
          type: string
        uptime:
          type: number
        ver:
          type: string
        branch:
          type: string
        commitHash:
          type: string
        checks:
          $ref: '#/components/schemas/RuntimeChecks'
        numTxnsRelayed:
          type: object
          description: 'map<string,NumTxnsRelayed>'
          additionalProperties:
            $ref: '#/components/schemas/NumTxnsRelayed'
    NumTxnsRelayed:
      type: object
      required:
        - chainID
        - prev
        - current
        - period
      properties:
        chainID:
          type: number
        prev:
          type: number
        current:
          type: number
        period:
          type: number
    RuntimeChecks:
      type: object
    SequenceContext:
      type: object
      required:
        - factory
        - mainModule
        - mainModuleUpgradable
        - guestModule
        - utils
      properties:
        factory:
          type: string
        mainModule:
          type: string
        mainModuleUpgradable:
          type: string
        guestModule:
          type: string
        utils:
          type: string
    PublicKey:
      type: object
      required:
        - id
        - x
        - y
      properties:
        id:
          type: string
        x:
          type: string
        y:
          type: string
    User:
      type: object
      required:
        - address
        - username
        - normalizedUsername
        - avatar
        - bio
        - location
        - locale
        - sysAdmin
      properties:
        address:
          type: string
        username:
          type: string
        normalizedUsername:
          type: string
        avatar:
          type: string
        bio:
          type: string
        location:
          type: string
        locale:
          type: string
        backup:
          type: boolean
        backupConfirmed:
          type: boolean
        maxInvites:
          type: number
        updatedAt:
          type: string
        createdAt:
          type: string
        sysAdmin:
          type: boolean
    WalletBackup:
      type: object
      required:
        - accountAddress
        - secretHash
        - encryptedWallet
        - userConfirmed
      properties:
        accountAddress:
          type: string
        secretHash:
          type: string
        encryptedWallet:
          type: string
        userConfirmed:
          type: boolean
        updatedAt:
          type: string
        createdAt:
          type: string
    Friend:
      type: object
      required:
        - id
        - userAddress
        - friendAddress
        - nickname
      properties:
        id:
          type: number
        userAddress:
          type: string
        friendAddress:
          type: string
        nickname:
          type: string
        user:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
    InviteCode:
      type: object
      required:
        - code
        - source
        - usesLeft
        - ownerAccount
        - url
      properties:
        code:
          type: string
        source:
          type: string
        usesLeft:
          type: number
        ownerAccount:
          type: string
        email:
          type: string
        url:
          type: string
        createdAt:
          type: string
        expiresAt:
          type: string
    InviteCodeAccount:
      type: object
      required:
        - code
        - claimedByUserAddress
      properties:
        code:
          type: string
        claimedByUserAddress:
          type: string
        claimedAt:
          type: string
    InviteInfo:
      type: object
      required:
        - expiryInHours
        - max
        - invites
      properties:
        expiryInHours:
          type: number
        max:
          type: number
        invites:
          type: array
          description: '[]InviteCode'
          items:
            $ref: '#/components/schemas/InviteCode'
    ContractCall:
      type: object
      required:
        - signature
        - function
        - args
      properties:
        signature:
          type: string
        function:
          type: string
        args:
          type: array
          description: '[]TupleComponent'
          items:
            $ref: '#/components/schemas/TupleComponent'
    TupleComponent:
      type: object
      required:
        - type
        - value
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: object
    IntentPrecondition:
      type: object
      required:
        - type
        - chainID
        - data
      properties:
        type:
          type: string
        chainID:
          type: string
        data:
          type: object
    IntentSolution:
      type: object
      required:
        - transactions
      properties:
        transactions:
          type: array
          description: '[]Transactions'
          items:
            $ref: '#/components/schemas/Transactions'
    Transactions:
      type: object
      required:
        - chainID
        - transactions
      properties:
        chainID:
          type: string
        transactions:
          type: array
          description: '[]Transaction'
          items:
            $ref: '#/components/schemas/Transaction'
        preconditions:
          type: array
          description: '[]IntentPrecondition'
          items:
            $ref: '#/components/schemas/IntentPrecondition'
    Transaction:
      type: object
      required:
        - delegateCall
        - revertOnError
        - gasLimit
        - target
        - value
        - data
      properties:
        delegateCall:
          type: boolean
        revertOnError:
          type: boolean
        gasLimit:
          type: string
        target:
          type: string
        value:
          type: string
        data:
          type: string
    UserStorage:
      type: object
      required:
        - userAddress
        - key
        - value
      properties:
        userAddress:
          type: string
        key:
          type: string
        value:
          type: object
    Token:
      type: object
      required:
        - chainId
        - contractAddress
      properties:
        chainId:
          type: number
        contractAddress:
          type: string
        tokenId:
          type: string
    Price:
      type: object
      required:
        - value
        - currency
      properties:
        value:
          type: number
        currency:
          type: string
    TokenPrice:
      type: object
      required:
        - token
        - floorPrice
        - buyPrice
        - sellPrice
        - updatedAt
      properties:
        token:
          $ref: '#/components/schemas/Token'
        price:
          $ref: '#/components/schemas/Price'
        price24hChange:
          $ref: '#/components/schemas/Price'
        floorPrice:
          $ref: '#/components/schemas/Price'
        buyPrice:
          $ref: '#/components/schemas/Price'
        sellPrice:
          $ref: '#/components/schemas/Price'
        updatedAt:
          type: string
    ExchangeRate:
      type: object
      required:
        - name
        - symbol
        - value
        - vsCurrency
        - currencyType
      properties:
        name:
          type: string
        symbol:
          type: string
        value:
          type: number
        vsCurrency:
          type: string
        currencyType:
          type: string
    LinkedWallet:
      type: object
      required:
        - id
        - walletAddress
        - linkedWalletAddress
      properties:
        id:
          type: number
        walletType:
          type: string
        walletAddress:
          type: string
        linkedWalletAddress:
          type: string
        createdAt:
          type: string
    Page:
      type: object
      properties:
        pageSize:
          type: number
        page:
          type: number
        totalRecords:
          type: number
        column:
          type: string
        before:
          type: object
        after:
          type: object
        sort:
          type: array
          description: '[]SortBy'
          items:
            $ref: '#/components/schemas/SortBy'
        more:
          type: boolean
    SortBy:
      type: object
      required:
        - column
        - order
      properties:
        column:
          type: string
        order:
          $ref: '#/components/schemas/SortOrder'
    SardineNFTCheckoutParams:
      type: object
      required:
        - name
        - imageUrl
        - network
        - recipientAddress
        - blockchainNftId
        - contractAddress
        - quantity
        - tokenAmount
        - tokenAddress
        - tokenSymbol
        - calldata
        - platform
      properties:
        name:
          type: string
        imageUrl:
          type: string
        network:
          type: string
        recipientAddress:
          type: string
        blockchainNftId:
          type: string
        contractAddress:
          type: string
        quantity:
          type: number
        decimals:
          type: number
        tokenAmount:
          type: string
        tokenAddress:
          type: string
        tokenSymbol:
          type: string
        tokenDecimals:
          type: number
        calldata:
          type: string
        platform:
          type: string
        approvedSpenderAddress:
          type: string
    SardineNFTCheckout:
      type: object
      required:
        - token
        - expiresAt
        - orderId
      properties:
        token:
          type: string
        expiresAt:
          type: string
        orderId:
          type: string
    SardineOrder:
      type: object
      required:
        - id
        - referenceId
        - status
        - fiatCurrency
        - fiatExchangeRateUSD
        - transactionId
        - total
        - subTotal
        - transactionFee
        - networkFee
        - transactionType
        - name
        - price
        - imageUrl
        - recipientAddress
      properties:
        id:
          type: string
        createdAt:
          type: string
        referenceId:
          type: string
        status:
          type: string
        fiatCurrency:
          type: string
        fiatExchangeRateUSD:
          type: number
        transactionId:
          type: string
        expiresAt:
          type: string
        total:
          type: number
        subTotal:
          type: number
        transactionFee:
          type: number
        networkFee:
          type: number
        paymentCurrency:
          type: string
        paymentMethodType:
          type: string
        transactionType:
          type: string
        name:
          type: string
        price:
          type: number
        imageUrl:
          type: string
        contractAddress:
          type: string
        transactionHash:
          type: string
        recipientAddress:
          type: string
    SardineRegion:
      type: object
      required:
        - countryCode
        - isAllowedOnRamp
        - isAllowedOnNFT
        - isBasicKycRequired
        - isSsnRequired
        - name
        - currencyCode
        - isPayrollSupported
        - supportedDocuments
        - paymentMethods
        - states
      properties:
        countryCode:
          type: string
        isAllowedOnRamp:
          type: boolean
        isAllowedOnNFT:
          type: boolean
        isBasicKycRequired:
          type: array
          description: '[]string'
          items:
            type: string
        isSsnRequired:
          type: array
          description: '[]string'
          items:
            type: string
        name:
          type: string
        currencyCode:
          type: string
        isPayrollSupported:
          type: boolean
        supportedDocuments:
          type: array
          description: '[]string'
          items:
            type: string
        paymentMethods:
          type: array
          description: '[]SardineRegionPaymentMethod'
          items:
            $ref: '#/components/schemas/SardineRegionPaymentMethod'
        states:
          type: array
          description: '[]SardineRegionState'
          items:
            $ref: '#/components/schemas/SardineRegionState'
    SardineRegionPaymentMethod:
      type: object
      required:
        - name
        - isAllowedOnRamp
        - isAllowedOnNFT
        - subTypes
        - type
        - subType
      properties:
        name:
          type: string
        isAllowedOnRamp:
          type: boolean
        isAllowedOnNFT:
          type: boolean
        subTypes:
          type: array
          description: '[]string'
          items:
            type: string
        type:
          type: string
        subType:
          type: string
    SardineRegionState:
      type: object
      required:
        - code
        - name
        - isAllowedOnRamp
        - isAllowedOnNFT
      properties:
        code:
          type: string
        name:
          type: string
        isAllowedOnRamp:
          type: boolean
        isAllowedOnNFT:
          type: boolean
    SardineSupportedToken:
      type: object
      required:
        - network
        - assetSymbol
        - assetName
        - chainId
        - tokenName
        - token
        - tokenAddress
      properties:
        network:
          type: string
        assetSymbol:
          type: string
        assetName:
          type: string
        chainId:
          type: string
        tokenName:
          type: string
        token:
          type: string
        tokenAddress:
          type: string
    SardineSupportedTokenForSwap:
      type: object
      required:
        - isSupported
        - isSupportedForAbstraction
        - currentBalance
      properties:
        isSupported:
          type: boolean
        isSupportedForAbstraction:
          type: boolean
        currentBalance:
          type: string
    SardineEnabledToken:
      type: object
      required:
        - network
        - assetSymbol
        - assetName
        - chainId
        - tokenName
        - token
        - tokenAddress
      properties:
        network:
          type: string
        assetSymbol:
          type: string
        assetName:
          type: string
        chainId:
          type: string
        tokenName:
          type: string
        token:
          type: string
        tokenAddress:
          type: string
    SardineGetQuoteParams:
      type: object
      required:
        - assetType
        - network
        - total
      properties:
        assetType:
          type: string
        network:
          type: string
        total:
          type: number
        currency:
          type: string
        paymentType:
          $ref: '#/components/schemas/SardinePaymentType'
        quoteType:
          $ref: '#/components/schemas/SardineQuoteType'
        walletAddress:
          type: string
    SardineQuote:
      type: object
      required:
        - quantity
        - network
        - assetType
        - total
        - currency
        - expiresAt
        - paymentType
        - price
        - subtotal
        - transactionFee
        - networkFee
        - highNetworkFee
        - minTransactionValue
        - maxTransactionValue
        - liquidityProvider
      properties:
        quantity:
          type: number
        network:
          type: string
        assetType:
          type: string
        total:
          type: number
        currency:
          type: string
        expiresAt:
          type: string
        paymentType:
          type: string
        price:
          type: number
        subtotal:
          type: number
        transactionFee:
          type: number
        networkFee:
          type: number
        highNetworkFee:
          type: boolean
        minTransactionValue:
          type: number
        maxTransactionValue:
          type: number
        liquidityProvider:
          type: string
    SardineFiatCurrency:
      type: object
      required:
        - currencyCode
        - name
        - currencySymbol
        - paymentOptions
        - supportingCountries
      properties:
        currencyCode:
          type: string
        name:
          type: string
        currencySymbol:
          type: string
        paymentOptions:
          type: array
          description: '[]SardinePaymentOption'
          items:
            $ref: '#/components/schemas/SardinePaymentOption'
        supportingCountries:
          type: array
          description: '[]string'
          items:
            type: string
    SardinePaymentOption:
      type: object
      required:
        - name
        - dailyLimit
        - weeklyLimit
        - monthlyLimit
        - maxAmount
        - minAmount
        - subTypes
        - type
        - subType
        - processingTime
      properties:
        name:
          type: string
        dailyLimit:
          type: number
        weeklyLimit:
          type: number
        monthlyLimit:
          type: number
        maxAmount:
          type: number
        minAmount:
          type: number
        subTypes:
          type: array
          description: '[]string'
          items:
            type: string
        type:
          type: string
        subType:
          type: string
        processingTime:
          type: string
    SwapPermit2Price:
      type: object
      required:
        - currencyAddress
        - currencyBalance
        - price
        - maxPrice
        - transactionValue
      properties:
        currencyAddress:
          type: string
        currencyBalance:
          type: string
        price:
          type: string
        maxPrice:
          type: string
        transactionValue:
          type: string
    SwapPermit2Quote:
      type: object
      required:
        - currencyAddress
        - currencyBalance
        - price
        - maxPrice
        - to
        - transactionData
        - transactionValue
        - approveData
      properties:
        currencyAddress:
          type: string
        currencyBalance:
          type: string
        price:
          type: string
        maxPrice:
          type: string
        to:
          type: string
        transactionData:
          type: string
        transactionValue:
          type: string
        approveData:
          type: string
    SwapPrice:
      type: object
      required:
        - currencyAddress
        - currencyBalance
        - price
        - maxPrice
        - transactionValue
      properties:
        currencyAddress:
          type: string
        currencyBalance:
          type: string
        price:
          type: string
        maxPrice:
          type: string
        transactionValue:
          type: string
    SwapQuote:
      type: object
      required:
        - currencyAddress
        - currencyBalance
        - price
        - maxPrice
        - to
        - transactionData
        - transactionValue
        - approveData
      properties:
        currencyAddress:
          type: string
        currencyBalance:
          type: string
        price:
          type: string
        maxPrice:
          type: string
        to:
          type: string
        transactionData:
          type: string
        transactionValue:
          type: string
        approveData:
          type: string
    CurrencyGroup:
      type: object
      required:
        - name
        - tokens
      properties:
        name:
          type: string
        tokens:
          type: array
          description: '[]CurrencyGroupToken'
          items:
            $ref: '#/components/schemas/CurrencyGroupToken'
    CurrencyGroupToken:
      type: object
      required:
        - chainId
        - tokenAddress
      properties:
        chainId:
          type: number
        tokenAddress:
          type: string
    OffchainInventory:
      type: object
      required:
        - id
        - projectId
        - chainId
        - externalProductId
        - paymentTokenAddress
        - paymentTokenType
        - paymentTokenId
        - paymentAmount
        - paymentRecipient
        - createdAt
      properties:
        id:
          type: number
        projectId:
          type: number
        chainId:
          type: number
        externalProductId:
          type: string
        paymentTokenAddress:
          type: string
        paymentTokenType:
          $ref: '#/components/schemas/TokenType'
        paymentTokenId:
          type: number
        paymentAmount:
          type: number
        paymentRecipient:
          type: string
        chainedCallAddress:
          type: string
        chainedCallData:
          type: string
        allowCrossChainPayments:
          type: boolean
        callbackURL:
          type: string
        createdAt:
          type: string
        deletedAt:
          type: string
    OffchainPayment:
      type: object
      required:
        - id
        - offchainInventoryId
        - productRecipient
        - paymentChainId
        - paymentTokenAddress
        - expiration
        - createdAt
      properties:
        id:
          type: number
        offchainInventoryId:
          type: number
        productRecipient:
          type: string
        paymentChainId:
          type: number
        paymentTokenAddress:
          type: string
        expiration:
          type: string
        createdAt:
          type: string
        completedAt:
          type: string
        processedAt:
          type: string
    PaymentResponse:
      type: object
      required:
        - paymentId
        - offchainInventoryId
        - chainId
        - externalProductId
        - paymentTokenAddress
        - paymentTokenType
        - paymentTokenId
        - paymentTotal
        - expiration
        - signature
        - txTo
        - txData
      properties:
        paymentId:
          type: number
        offchainInventoryId:
          type: number
        chainId:
          type: number
        externalProductId:
          type: string
        paymentTokenAddress:
          type: string
        paymentTokenType:
          $ref: '#/components/schemas/TokenType'
        paymentTokenId:
          type: number
        paymentTotal:
          type: number
        expiration:
          type: string
        signature:
          type: string
        txTo:
          type: string
        txData:
          type: string
    AdoptedChildWallet:
      type: object
      required:
        - address
      properties:
        address:
          type: string
    Pack:
      type: object
      required:
        - id
        - chainId
        - projectId
        - contractAddress
        - content
      properties:
        id:
          type: number
        chainId:
          type: number
        projectId:
          type: number
        contractAddress:
          type: string
        content:
          type: array
          description: '[]PackContent'
          items:
            $ref: '#/components/schemas/PackContent'
        createdAt:
          type: string
    PackContent:
      type: object
      required:
        - tokenAddresses
        - tokenIds
        - amounts
      properties:
        tokenAddresses:
          type: array
          description: '[]string'
          items:
            type: string
        tokenIds:
          type: array
          description: '[][]string'
          items:
            type: array
            description: '[]string'
            items:
              type: string
        amounts:
          type: array
          description: '[][]string'
          items:
            type: array
            description: '[]string'
            items:
              type: string
    TransakCountry:
      type: object
      required:
        - alpha2
        - alpha3
        - isAllowed
        - isLightKycAllowed
        - name
        - currencyCode
        - supportedDocuments
        - partners
        - states
      properties:
        alpha2:
          type: string
        alpha3:
          type: string
        isAllowed:
          type: boolean
        isLightKycAllowed:
          type: boolean
        name:
          type: string
        currencyCode:
          type: string
        supportedDocuments:
          type: array
          description: '[]string'
          items:
            type: string
        partners:
          type: array
          description: '[]TransakPartner'
          items:
            $ref: '#/components/schemas/TransakPartner'
        states:
          type: array
          description: '[]TransakState'
          items:
            $ref: '#/components/schemas/TransakState'
    TransakPartner:
      type: object
      required:
        - name
        - isCardPayment
        - currencyCode
      properties:
        name:
          type: string
        isCardPayment:
          type: boolean
        currencyCode:
          type: string
    TransakState:
      type: object
      required:
        - code
        - name
        - isAllowed
      properties:
        code:
          type: string
        name:
          type: string
        isAllowed:
          type: boolean
    TransakCryptoCurrency:
      type: object
      required:
        - id
        - coinID
        - address
        - addressAdditionalData
        - createdAt
        - decimals
        - image
        - isAllowed
        - isPopular
        - isStable
        - name
        - roundOff
        - symbol
        - isIgnorePriceVerification
        - imageBk
        - kycCountriesNotSupported
        - network
        - uniqueID
        - tokenType
        - tokenIdentifier
        - isPayInAllowed
        - isSuspended
      properties:
        id:
          type: string
        coinID:
          type: string
        address:
          type: string
        addressAdditionalData:
          type: object
        createdAt:
          type: string
        decimals:
          type: number
        image:
          $ref: '#/components/schemas/TransakCryptoCurrencyImage'
        isAllowed:
          type: boolean
        isPopular:
          type: boolean
        isStable:
          type: boolean
        name:
          type: string
        roundOff:
          type: number
        symbol:
          type: string
        isIgnorePriceVerification:
          type: boolean
        imageBk:
          $ref: '#/components/schemas/TransakCryptoCurrencyImage'
        kycCountriesNotSupported:
          type: array
          description: '[]string'
          items:
            type: string
        network:
          $ref: '#/components/schemas/TransakCryptoCurrencyNetwork'
        uniqueID:
          type: string
        tokenType:
          type: string
        tokenIdentifier:
          type: string
        isPayInAllowed:
          type: boolean
        isSuspended:
          type: boolean
    TransakCryptoCurrencyImage:
      type: object
      required:
        - large
        - small
        - thumb
      properties:
        large:
          type: string
        small:
          type: string
        thumb:
          type: string
    TransakCryptoCurrencyNetwork:
      type: object
      required:
        - name
        - fiatCurrenciesNotSupported
        - chainID
      properties:
        name:
          type: string
        fiatCurrenciesNotSupported:
          type: array
          description: '[]any'
          items:
            type: object
        chainID:
          type: string
    TransakCryptoCurrencyNetworkFiatNotSupported:
      type: object
      required:
        - fiatCurrency
        - paymentMethod
      properties:
        fiatCurrency:
          type: string
        paymentMethod:
          type: string
    TransakFiatCurrency:
      type: object
      required:
        - symbol
        - supportingCountries
        - logoSymbol
        - name
        - paymentOptions
        - isPopular
        - isAllowed
        - roundOff
        - isPayOutAllowed
        - defaultCountryForNFT
        - icon
        - displayMessage
      properties:
        symbol:
          type: string
        supportingCountries:
          type: array
          description: '[]string'
          items:
            type: string
        logoSymbol:
          type: string
        name:
          type: string
        paymentOptions:
          type: array
          description: '[]TransakFiatCurrencyPaymentOption'
          items:
            $ref: '#/components/schemas/TransakFiatCurrencyPaymentOption'
        isPopular:
          type: boolean
        isAllowed:
          type: boolean
        roundOff:
          type: number
        isPayOutAllowed:
          type: boolean
        defaultCountryForNFT:
          type: string
        icon:
          type: string
        displayMessage:
          type: string
    TransakFiatCurrencyPaymentOption:
      type: object
      required:
        - name
        - id
        - isNftAllowed
        - isNonCustodial
        - processingTime
        - displayText
        - icon
        - limitCurrency
        - isActive
        - provider
        - maxAmount
        - minAmount
        - defaultAmount
        - isConverted
        - visaPayoutCountries
        - mastercardPayoutCountries
        - isPayOutAllowed
        - minAmountForPayOut
        - maxAmountForPayOut
        - defaultAmountForPayOut
      properties:
        name:
          type: string
        id:
          type: string
        isNftAllowed:
          type: boolean
        isNonCustodial:
          type: boolean
        processingTime:
          type: string
        displayText:
          type: boolean
        icon:
          type: string
        limitCurrency:
          type: string
        isActive:
          type: boolean
        provider:
          type: string
        maxAmount:
          type: number
        minAmount:
          type: number
        defaultAmount:
          type: number
        isConverted:
          type: boolean
        visaPayoutCountries:
          type: array
          description: '[]string'
          items:
            type: string
        mastercardPayoutCountries:
          type: array
          description: '[]string'
          items:
            type: string
        isPayOutAllowed:
          type: boolean
        minAmountForPayOut:
          type: number
        maxAmountForPayOut:
          type: number
        defaultAmountForPayOut:
          type: number
    TransakPrice:
      type: object
      required:
        - quoteID
        - conversionPrice
        - marketConversionPrice
        - slippage
        - fiatCurrency
        - cryptoCurrency
        - paymentMethod
        - fiatAmount
        - cryptoAmount
        - isBuyOrSell
        - network
        - feeDecimal
        - totalFee
        - feeBreakdown
        - nonce
        - cryptoLiquidityProvider
        - notes
      properties:
        quoteID:
          type: string
        conversionPrice:
          type: number
        marketConversionPrice:
          type: number
        slippage:
          type: number
        fiatCurrency:
          type: string
        cryptoCurrency:
          type: string
        paymentMethod:
          type: string
        fiatAmount:
          type: number
        cryptoAmount:
          type: number
        isBuyOrSell:
          type: string
        network:
          type: string
        feeDecimal:
          type: number
        totalFee:
          type: number
        feeBreakdown:
          type: array
          description: '[]TransakPriceFeeBreakdown'
          items:
            $ref: '#/components/schemas/TransakPriceFeeBreakdown'
        nonce:
          type: number
        cryptoLiquidityProvider:
          type: string
        notes:
          type: array
          description: '[]any'
          items:
            type: object
    TransakPriceFeeBreakdown:
      type: object
      required:
        - Name
        - Value
        - ID
        - Ids
      properties:
        Name:
          type: string
        Value:
          type: number
        ID:
          type: string
        Ids:
          type: array
          description: '[]string'
          items:
            type: string
    TransakGetPriceParams:
      type: object
      required:
        - fiatCurrency
        - cryptoCurrency
        - isBuyOrSell
        - network
        - paymentMethod
        - fiatAmount
        - cryptoAmount
        - quoteCountryCode
      properties:
        fiatCurrency:
          type: string
        cryptoCurrency:
          type: string
        isBuyOrSell:
          $ref: '#/components/schemas/TransakBuySell'
        network:
          type: string
        paymentMethod:
          type: string
        fiatAmount:
          type: number
        cryptoAmount:
          type: number
        quoteCountryCode:
          type: string
    TransakChain:
      type: object
      required:
        - name
        - chainId
      properties:
        name:
          type: string
        chainId:
          type: number
    API_IsValidSignature_Request:
      type: object
      properties:
        chainId:
          type: string
        walletAddress:
          type: string
        digest:
          type: string
        signature:
          type: string
    API_IsValidMessageSignature_Request:
      type: object
      properties:
        chainId:
          type: string
        walletAddress:
          type: string
        message:
          type: string
        signature:
          type: string
    API_IsValidTypedDataSignature_Request:
      type: object
      properties:
        chainId:
          type: string
        walletAddress:
          type: string
        typedData:
          type: object
        signature:
          type: string
    API_IsValidETHAuthProof_Request:
      type: object
      properties:
        chainId:
          type: string
        walletAddress:
          type: string
        ethAuthProofString:
          type: string
    API_LinkWallet_Request:
      type: object
      properties:
        parentWalletAddress:
          type: string
        parentWalletMessage:
          type: string
        parentWalletSignature:
          type: string
        linkedWalletAddress:
          type: string
        linkedWalletMessage:
          type: string
        linkedWalletSignature:
          type: string
        signatureChainId:
          type: string
        linkedWalletType:
          type: string
    API_GetLinkedWallets_Request:
      type: object
      properties:
        parentWalletAddress:
          type: string
        parentWalletMessage:
          type: string
        parentWalletSignature:
          type: string
        signatureChainId:
          type: string
    API_RemoveLinkedWallet_Request:
      type: object
      properties:
        parentWalletAddress:
          type: string
        parentWalletMessage:
          type: string
        parentWalletSignature:
          type: string
        linkedWalletAddress:
          type: string
        signatureChainId:
          type: string
    API_GetSwapPermit2Price_Request:
      type: object
      properties:
        buyCurrencyAddress:
          type: string
        sellCurrencyAddress:
          type: string
        buyAmount:
          type: string
        chainId:
          type: number
        slippagePercentage:
          type: number
    API_GetSwapPermit2Prices_Request:
      type: object
      properties:
        userAddress:
          type: string
        buyCurrencyAddress:
          type: string
        buyAmount:
          type: string
        chainId:
          type: number
        slippagePercentage:
          type: number
    API_GetSwapPermit2Quote_Request:
      type: object
      properties:
        userAddress:
          type: string
        buyCurrencyAddress:
          type: string
        sellCurrencyAddress:
          type: string
        buyAmount:
          type: string
        chainId:
          type: number
        includeApprove:
          type: boolean
        slippagePercentage:
          type: number
    API_GetSwapPrice_Request:
      type: object
      properties:
        buyCurrencyAddress:
          type: string
        sellCurrencyAddress:
          type: string
        buyAmount:
          type: string
        chainId:
          type: number
        slippagePercentage:
          type: number
    API_GetSwapPrices_Request:
      type: object
      properties:
        userAddress:
          type: string
        buyCurrencyAddress:
          type: string
        buyAmount:
          type: string
        chainId:
          type: number
        slippagePercentage:
          type: number
    API_GetSwapQuote_Request:
      type: object
      properties:
        userAddress:
          type: string
        buyCurrencyAddress:
          type: string
        sellCurrencyAddress:
          type: string
        buyAmount:
          type: string
        chainId:
          type: number
        includeApprove:
          type: boolean
        slippagePercentage:
          type: number
    API_GetSwapQuoteV2_Request:
      type: object
      properties:
        userAddress:
          type: string
        buyCurrencyAddress:
          type: string
        sellCurrencyAddress:
          type: string
        buyAmount:
          type: string
        chainId:
          type: number
        includeApprove:
          type: boolean
        slippagePercentage:
          type: number
    API_GetLifiChains_Request:
      type: object
    API_GetLifiTokens_Request:
      type: object
      properties:
        chainIds:
          type: array
          description: '[]uint64'
          items:
            type: number
    API_IsValidSignature_Response:
      type: object
      properties:
        isValid:
          type: boolean
    API_IsValidMessageSignature_Response:
      type: object
      properties:
        isValid:
          type: boolean
    API_IsValidTypedDataSignature_Response:
      type: object
      properties:
        isValid:
          type: boolean
    API_IsValidETHAuthProof_Response:
      type: object
      properties:
        isValid:
          type: boolean
    API_LinkWallet_Response:
      type: object
      properties:
        status:
          type: boolean
    API_GetLinkedWallets_Response:
      type: object
      properties:
        linkedWallets:
          type: array
          description: '[]LinkedWallet'
          items:
            $ref: '#/components/schemas/LinkedWallet'
    API_RemoveLinkedWallet_Response:
      type: object
      properties:
        status:
          type: boolean
    API_GetSwapPermit2Price_Response:
      type: object
      properties:
        swapPermit2Price:
          $ref: '#/components/schemas/SwapPermit2Price'
    API_GetSwapPermit2Prices_Response:
      type: object
      properties:
        swapPermit2Prices:
          type: array
          description: '[]SwapPermit2Price'
          items:
            $ref: '#/components/schemas/SwapPermit2Price'
    API_GetSwapPermit2Quote_Response:
      type: object
      properties:
        swapPermit2Quote:
          $ref: '#/components/schemas/SwapPermit2Quote'
    API_GetSwapPrice_Response:
      type: object
      properties:
        swapPrice:
          $ref: '#/components/schemas/SwapPrice'
    API_GetSwapPrices_Response:
      type: object
      properties:
        swapPrices:
          type: array
          description: '[]SwapPrice'
          items:
            $ref: '#/components/schemas/SwapPrice'
    API_GetSwapQuote_Response:
      type: object
      properties:
        swapQuote:
          $ref: '#/components/schemas/SwapQuote'
    API_GetSwapQuoteV2_Response:
      type: object
      properties:
        swapQuote:
          $ref: '#/components/schemas/SwapQuote'
    API_GetLifiChains_Response:
      type: object
      properties:
        chains:
          type: array
          description: '[]uint64'
          items:
            type: number
    API_GetLifiTokens_Response:
      type: object
      properties:
        tokens:
          type: array
          description: '[]Token'
          items:
            $ref: '#/components/schemas/Token'
paths:
  /rpc/API/IsValidSignature:
    post:
      tags: ["API"]
      summary: "TODO: we can add walletContext optional in the future when we need it"
      description: |
        NOTE: chainId can be either a number or canonical name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_IsValidSignature_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_IsValidSignature_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/IsValidMessageSignature:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_IsValidMessageSignature_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_IsValidMessageSignature_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/IsValidTypedDataSignature:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_IsValidTypedDataSignature_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_IsValidTypedDataSignature_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/IsValidETHAuthProof:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_IsValidETHAuthProof_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_IsValidETHAuthProof_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/LinkWallet:
    post:
      tags: ["API"]
      summary: ""
      description: |
        Linked wallets (v0 -- simple support)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_LinkWallet_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_LinkWallet_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/GetLinkedWallets:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_GetLinkedWallets_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_GetLinkedWallets_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/RemoveLinkedWallet:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_RemoveLinkedWallet_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_RemoveLinkedWallet_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/GetSwapPermit2Price:
    post:
      tags: ["API"]
      summary: ""
      description: |
        Currency abstraction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_GetSwapPermit2Price_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_GetSwapPermit2Price_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/GetSwapPermit2Prices:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_GetSwapPermit2Prices_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_GetSwapPermit2Prices_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/GetSwapPermit2Quote:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_GetSwapPermit2Quote_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_GetSwapPermit2Quote_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/GetSwapPrice:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_GetSwapPrice_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_GetSwapPrice_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/GetSwapPrices:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_GetSwapPrices_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_GetSwapPrices_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/GetSwapQuote:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_GetSwapQuote_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_GetSwapQuote_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/GetSwapQuoteV2:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_GetSwapQuoteV2_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_GetSwapQuoteV2_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/GetLifiChains:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_GetLifiChains_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_GetLifiChains_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
  /rpc/API/GetLifiTokens:
    post:
      tags: ["API"]
      summary: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/API_GetLifiTokens_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_GetLifiTokens_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                  - $ref: '#/components/schemas/ErrorWebrpcRequestFailed'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                  - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                  - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                  - $ref: '#/components/schemas/ErrorWebrpcClientDisconnected'
                  - $ref: '#/components/schemas/ErrorWebrpcStreamLost'
                  - $ref: '#/components/schemas/ErrorUnauthorized'
                  - $ref: '#/components/schemas/ErrorPermissionDenied'
                  - $ref: '#/components/schemas/ErrorSessionExpired'
                  - $ref: '#/components/schemas/ErrorMethodNotFound'
                  - $ref: '#/components/schemas/ErrorRequestConflict'
                  - $ref: '#/components/schemas/ErrorAborted'
                  - $ref: '#/components/schemas/ErrorGeoblocked'
                  - $ref: '#/components/schemas/ErrorRateLimited'
                  - $ref: '#/components/schemas/ErrorProjectNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyNotFound'
                  - $ref: '#/components/schemas/ErrorAccessKeyMismatch'
                  - $ref: '#/components/schemas/ErrorInvalidOrigin'
                  - $ref: '#/components/schemas/ErrorInvalidService'
                  - $ref: '#/components/schemas/ErrorUnauthorizedUser'
                  - $ref: '#/components/schemas/ErrorQuotaExceeded'
                  - $ref: '#/components/schemas/ErrorQuotaRateLimit'
                  - $ref: '#/components/schemas/ErrorNoDefaultKey'
                  - $ref: '#/components/schemas/ErrorMaxAccessKeys'
                  - $ref: '#/components/schemas/ErrorAtLeastOneKey'
                  - $ref: '#/components/schemas/ErrorTimeout'
                  - $ref: '#/components/schemas/ErrorInvalidArgument'
                  - $ref: '#/components/schemas/ErrorUnavailable'
                  - $ref: '#/components/schemas/ErrorQueryFailed'
                  - $ref: '#/components/schemas/ErrorNotFound'
                  - $ref: '#/components/schemas/ErrorUnsupportedNetwork'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                  - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                  - $ref: '#/components/schemas/ErrorWebrpcInternalError'
