{
  "components": {
    "schemas": {
      "ErrorWebrpcEndpoint": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcEndpoint"
          },
          "code": {
            "type": "number",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": "endpoint error"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcRequestFailed": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcRequestFailed"
          },
          "code": {
            "type": "number",
            "example": -1
          },
          "msg": {
            "type": "string",
            "example": "request failed"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcBadRoute": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadRoute"
          },
          "code": {
            "type": "number",
            "example": -2
          },
          "msg": {
            "type": "string",
            "example": "bad route"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 404
          }
        }
      },
      "ErrorWebrpcBadMethod": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadMethod"
          },
          "code": {
            "type": "number",
            "example": -3
          },
          "msg": {
            "type": "string",
            "example": "bad method"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 405
          }
        }
      },
      "ErrorWebrpcBadRequest": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadRequest"
          },
          "code": {
            "type": "number",
            "example": -4
          },
          "msg": {
            "type": "string",
            "example": "bad request"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcBadResponse": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadResponse"
          },
          "code": {
            "type": "number",
            "example": -5
          },
          "msg": {
            "type": "string",
            "example": "bad response"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcServerPanic": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcServerPanic"
          },
          "code": {
            "type": "number",
            "example": -6
          },
          "msg": {
            "type": "string",
            "example": "server panic"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcInternalError": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcInternalError"
          },
          "code": {
            "type": "number",
            "example": -7
          },
          "msg": {
            "type": "string",
            "example": "internal error"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcClientDisconnected": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcClientDisconnected"
          },
          "code": {
            "type": "number",
            "example": -8
          },
          "msg": {
            "type": "string",
            "example": "client disconnected"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcStreamLost": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcStreamLost"
          },
          "code": {
            "type": "number",
            "example": -9
          },
          "msg": {
            "type": "string",
            "example": "stream lost"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcStreamFinished": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcStreamFinished"
          },
          "code": {
            "type": "number",
            "example": -10
          },
          "msg": {
            "type": "string",
            "example": "stream finished"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 200
          }
        }
      },
      "ErrorUnauthorized": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Unauthorized"
          },
          "code": {
            "type": "number",
            "example": 1000
          },
          "msg": {
            "type": "string",
            "example": "Unauthorized access"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 401
          }
        }
      },
      "ErrorPermissionDenied": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "PermissionDenied"
          },
          "code": {
            "type": "number",
            "example": 1001
          },
          "msg": {
            "type": "string",
            "example": "Permission denied"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 403
          }
        }
      },
      "ErrorSessionExpired": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "SessionExpired"
          },
          "code": {
            "type": "number",
            "example": 1002
          },
          "msg": {
            "type": "string",
            "example": "Session expired"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 403
          }
        }
      },
      "ErrorMethodNotFound": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "MethodNotFound"
          },
          "code": {
            "type": "number",
            "example": 1003
          },
          "msg": {
            "type": "string",
            "example": "Method not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 404
          }
        }
      },
      "ErrorRequestConflict": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "RequestConflict"
          },
          "code": {
            "type": "number",
            "example": 1004
          },
          "msg": {
            "type": "string",
            "example": "Conflict with target resource"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 409
          }
        }
      },
      "ErrorServiceDisabled": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "ServiceDisabled"
          },
          "code": {
            "type": "number",
            "example": 1005
          },
          "msg": {
            "type": "string",
            "example": "Service disabled"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 404
          }
        }
      },
      "ErrorTimeout": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Timeout"
          },
          "code": {
            "type": "number",
            "example": 2000
          },
          "msg": {
            "type": "string",
            "example": "Request timed out"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 408
          }
        }
      },
      "ErrorInvalidArgument": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "InvalidArgument"
          },
          "code": {
            "type": "number",
            "example": 2001
          },
          "msg": {
            "type": "string",
            "example": "Invalid argument"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorNotFound": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "NotFound"
          },
          "code": {
            "type": "number",
            "example": 3000
          },
          "msg": {
            "type": "string",
            "example": "Resource not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorUserNotFound": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "UserNotFound"
          },
          "code": {
            "type": "number",
            "example": 3001
          },
          "msg": {
            "type": "string",
            "example": "User not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorProjectNotFound": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "ProjectNotFound"
          },
          "code": {
            "type": "number",
            "example": 3002
          },
          "msg": {
            "type": "string",
            "example": "Project not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorInvalidTier": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "InvalidTier"
          },
          "code": {
            "type": "number",
            "example": 3003
          },
          "msg": {
            "type": "string",
            "example": "Invalid subscription tier"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorEmailTemplateExists": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "EmailTemplateExists"
          },
          "code": {
            "type": "number",
            "example": 3004
          },
          "msg": {
            "type": "string",
            "example": "Email Template exists"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 409
          }
        }
      },
      "ErrorSubscriptionLimit": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "SubscriptionLimit"
          },
          "code": {
            "type": "number",
            "example": 3005
          },
          "msg": {
            "type": "string",
            "example": "Subscription limit reached"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 402
          }
        }
      },
      "ErrorFeatureNotIncluded": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "FeatureNotIncluded"
          },
          "code": {
            "type": "number",
            "example": 3006
          },
          "msg": {
            "type": "string",
            "example": "Feature not included"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 402
          }
        }
      },
      "ErrorInvalidNetwork": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "InvalidNetwork"
          },
          "code": {
            "type": "number",
            "example": 3007
          },
          "msg": {
            "type": "string",
            "example": "Invalid network"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorInvitationExpired": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "InvitationExpired"
          },
          "code": {
            "type": "number",
            "example": 4000
          },
          "msg": {
            "type": "string",
            "example": "Invitation code is expired"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorAlreadyCollaborator": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "AlreadyCollaborator"
          },
          "code": {
            "type": "number",
            "example": 4001
          },
          "msg": {
            "type": "string",
            "example": "Already a collaborator"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 409
          }
        }
      },
      "AuthSessionType": {
        "type": "string",
        "description": "Represented as uint16 on the server side",
        "enum": [
          "PUBLIC",
          "WALLET",
          "USER",
          "ADMIN",
          "SERVICE"
        ]
      },
      "SubscriptionTier": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "COMMUNITY",
          "DEVELOPER",
          "GROWTH",
          "PRO",
          "ENTERPRISE"
        ]
      },
      "ProjectType": {
        "type": "string",
        "description": "Represented as string on the server side",
        "enum": [
          "EMBEDDED_WALLET_REACT",
          "EMBEDDED_WALLET_NEXTJS",
          "EMBEDDED_WALLET_UNITY",
          "EMBEDDED_WALLET_UNREAL",
          "MARKETPLACE_STANDALONE",
          "MARKETPLACE_REACT",
          "MARKETPLACE_UNITY",
          "MARKETPLACE_UNREAL",
          "SALE_CONTRACT_ERC1155",
          "SALE_CONTRACT_ERC721"
        ]
      },
      "ResourceType": {
        "type": "string",
        "description": "Represented as int8 on the server side",
        "enum": [
          "CONTRACTS"
        ]
      },
      "SubscriptionProvider": {
        "type": "string",
        "description": "Represented as string on the server side",
        "enum": [
          "ADMIN",
          "STRIPE",
          "GOOGLE"
        ]
      },
      "CollaboratorAccess": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "NONE",
          "READ",
          "WRITE",
          "ADMIN"
        ]
      },
      "CollaboratorType": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "USER",
          "SERVICE_ACCOUNT"
        ]
      },
      "ContractSourceType": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "LINKED",
          "DEPLOYED",
          "SALE"
        ]
      },
      "SortOrder": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "DESC",
          "ASC"
        ]
      },
      "PaymentProvider": {
        "type": "string",
        "description": "Represented as uint16 on the server side",
        "enum": [
          "UNKNOWN",
          "STRIPE",
          "MANUAL"
        ]
      },
      "PaymentStatus": {
        "type": "string",
        "description": "Represented as uint16 on the server side",
        "enum": [
          "INITIATED",
          "PENDING",
          "SUCCEEDED",
          "FAILED",
          "PROCESSED"
        ]
      },
      "MarketplaceWallet": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "UNIVERSAL",
          "EMBEDDED"
        ]
      },
      "MarketplaceType": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "AMM",
          "P2P",
          "SEQUENCE",
          "ORDERBOOK"
        ]
      },
      "TokenType": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "ERC20",
          "ERC721",
          "ERC1155"
        ]
      },
      "FileScope": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "LOGO",
          "MARKETPLACE",
          "AVATAR",
          "EMAIL",
          "WALLET",
          "TOKEN_DIRECTORY"
        ]
      },
      "EmailTemplateType": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "UNKNOWN",
          "LOGIN",
          "GUARD"
        ]
      },
      "TaskStatus": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "PENDING",
          "PAUSED",
          "FAILED",
          "COMPLETED",
          "DISABLED"
        ]
      },
      "DateInterval": {
        "type": "string",
        "description": "Represented as uint16 on the server side",
        "enum": [
          "DAY",
          "WEEK",
          "MONTH"
        ]
      },
      "OnboardingStep": {
        "type": "string",
        "description": "Represented as string on the server side",
        "enum": [
          "linkOrDeployContract",
          "createMarketplace",
          "setUpGasTank",
          "configureWaas",
          "customizeWallet",
          "inviteCollaborator",
          "cloneGithub",
          "copyCredentials",
          "customizeMarketplace",
          "deployERC721Contract",
          "deployERC1155Contract",
          "addMarketplaceCollection",
          "createCollection",
          "customizeCollectible",
          "deploySaleContract",
          "setSaleSettings",
          "addMinterRoleToItems",
          "setUpAudienceList"
        ]
      },
      "WaasTenantState": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "PENDING",
          "DEPLOYING",
          "READY",
          "FAILED"
        ]
      },
      "TrialType": {
        "type": "string",
        "description": "Represented as string on the server side",
        "enum": [
          "ANALYTICS"
        ]
      },
      "Version": {
        "type": "object",
        "required": [
          "webrpcVersion",
          "schemaVersion",
          "schemaHash",
          "appVersion"
        ],
        "properties": {
          "webrpcVersion": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "string"
          },
          "schemaHash": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          }
        }
      },
      "RuntimeStatus": {
        "type": "object",
        "required": [
          "healthOK",
          "startTime",
          "uptime",
          "ver",
          "env",
          "branch",
          "commitHash",
          "networks",
          "checks"
        ],
        "properties": {
          "healthOK": {
            "type": "boolean"
          },
          "startTime": {
            "type": "string"
          },
          "uptime": {
            "type": "number"
          },
          "ver": {
            "type": "string"
          },
          "env": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "commitHash": {
            "type": "string"
          },
          "networks": {
            "type": "object",
            "description": "map<string,bool>",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "checks": {
            "$ref": "#/components/schemas/RuntimeChecks"
          }
        }
      },
      "RuntimeChecks": {
        "type": "object",
        "required": [
          "quotaControl",
          "joqueue",
          "stripe",
          "cloudCommerce"
        ],
        "properties": {
          "quotaControl": {
            "type": "boolean"
          },
          "joqueue": {
            "type": "boolean"
          },
          "stripe": {
            "type": "boolean"
          },
          "cloudCommerce": {
            "type": "boolean"
          }
        }
      },
      "Configuration": {
        "type": "object",
        "required": [
          "name",
          "title",
          "chainIds",
          "domains"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "chainIds": {
            "type": "array",
            "description": "[]uint64",
            "items": {
              "type": "number"
            }
          },
          "domains": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "logoUrl": {
            "type": "string"
          },
          "logoLightUrl": {
            "type": "string"
          },
          "titleUrl": {
            "type": "string"
          },
          "backgroundUrl": {
            "type": "string"
          },
          "mobileBackgroundUrl": {
            "type": "string"
          },
          "customCss": {
            "type": "string"
          },
          "animationUrl": {
            "type": "string"
          },
          "crispWebsiteId": {
            "type": "string"
          },
          "learnMoreButton": {
            "type": "string"
          },
          "learnMoreUrl": {
            "type": "string"
          }
        }
      },
      "AuthState": {
        "type": "object",
        "required": [
          "jwtToken",
          "expiresAt",
          "address",
          "sessionType"
        ],
        "properties": {
          "jwtToken": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "sessionType": {
            "$ref": "#/components/schemas/AuthSessionType"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "address",
          "createdAt",
          "updatedAt",
          "sysAdmin",
          "avatarKey",
          "avatarUrl"
        ],
        "properties": {
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "sysAdmin": {
            "type": "boolean"
          },
          "avatarKey": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          }
        }
      },
      "UserSettings": {
        "type": "object",
        "required": [
          "freeProjectsLeft"
        ],
        "properties": {
          "freeProjectsLeft": {
            "type": "number"
          }
        }
      },
      "UserOverride": {
        "type": "object",
        "required": [
          "id",
          "address",
          "extraProjects",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "extraProjects": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Project": {
        "type": "object",
        "required": [
          "id",
          "name",
          "ownerAddress",
          "ownerAvatarUrl",
          "draft",
          "logoImageKey",
          "logoImageUrl",
          "websiteUrl",
          "chainIds",
          "whitelabel",
          "subscriptionTier",
          "collaboratorCount",
          "onboardingSteps",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProjectType"
          },
          "ownerAddress": {
            "type": "string"
          },
          "ownerEmail": {
            "type": "string"
          },
          "ownerAvatarUrl": {
            "type": "string"
          },
          "draft": {
            "type": "boolean"
          },
          "logoImageKey": {
            "type": "string"
          },
          "logoImageUrl": {
            "type": "string"
          },
          "websiteUrl": {
            "type": "string"
          },
          "chainIds": {
            "type": "array",
            "description": "[]uint64",
            "items": {
              "type": "number"
            }
          },
          "whitelabel": {
            "type": "string"
          },
          "subscriptionTier": {
            "$ref": "#/components/schemas/SubscriptionTier"
          },
          "collaboratorCount": {
            "type": "number"
          },
          "onboardingSteps": {
            "type": "object",
            "description": "map<string,bool>",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          }
        }
      },
      "ResourceFilter": {
        "type": "object",
        "properties": {
          "contracts": {
            "$ref": "#/components/schemas/ContractFilter"
          }
        }
      },
      "Resource": {
        "type": "object",
        "required": [
          "type",
          "total",
          "detail"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "total": {
            "type": "number"
          },
          "detail": {
            "type": "array",
            "description": "[]ResourceDetail",
            "items": {
              "$ref": "#/components/schemas/ResourceDetail"
            }
          }
        }
      },
      "ResourceDetail": {
        "type": "object",
        "required": [
          "key",
          "count"
        ],
        "properties": {
          "key": {
            "type": "object"
          },
          "count": {
            "type": "number"
          }
        }
      },
      "ProjectSubscription": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "subscriptionTier",
          "provider",
          "providerId",
          "dateStart"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "subscriptionTier": {
            "$ref": "#/components/schemas/SubscriptionTier"
          },
          "provider": {
            "$ref": "#/components/schemas/SubscriptionProvider"
          },
          "providerId": {
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          }
        }
      },
      "Collaborator": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "type",
          "userAddress",
          "access",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "type": {
            "$ref": "#/components/schemas/CollaboratorType"
          },
          "userAddress": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          },
          "userAvatarUrl": {
            "type": "string"
          },
          "userAvatarKey": {
            "type": "string"
          },
          "access": {
            "$ref": "#/components/schemas/CollaboratorAccess"
          },
          "invitationId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Contract": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "contractName",
          "contractAddress",
          "contractType",
          "chainId",
          "source",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "contractName": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "contractType": {
            "type": "string"
          },
          "chainId": {
            "type": "number"
          },
          "source": {
            "$ref": "#/components/schemas/ContractSourceType"
          },
          "itemsContractAddress": {
            "type": "string"
          },
          "abi": {
            "type": "string"
          },
          "bytecode": {
            "type": "string"
          },
          "bytecodeHash": {
            "type": "string"
          },
          "audienceId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ContractFilter": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "number"
          },
          "contractSourceType": {
            "$ref": "#/components/schemas/ContractSourceType"
          },
          "contractType": {
            "type": "string"
          }
        }
      },
      "ContractLink": {
        "type": "object",
        "required": [
          "project",
          "collaborator"
        ],
        "properties": {
          "contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "collaborator": {
            "$ref": "#/components/schemas/Collaborator"
          }
        }
      },
      "NodeAccount": {
        "type": "object",
        "required": [
          "id",
          "displayName",
          "requestRateLimit",
          "requestMonthlyQuota",
          "active"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "displayName": {
            "type": "string"
          },
          "requestRateLimit": {
            "type": "number"
          },
          "requestMonthlyQuota": {
            "type": "number"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "RelayerGasTank": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "relayerIdMap",
          "totalPayments",
          "totalUsage"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "relayerIdMap": {
            "type": "object",
            "description": "map<string,uint64>",
            "additionalProperties": {
              "type": "number"
            }
          },
          "totalPayments": {
            "type": "number"
          },
          "totalUsage": {
            "type": "number"
          },
          "timestampUsage": {
            "type": "string"
          },
          "lastPaymentId": {
            "type": "number"
          }
        }
      },
      "RelayerGasBalance": {
        "type": "object",
        "required": [
          "id",
          "name",
          "chainId",
          "currentBalance",
          "feeMarkupFactor",
          "unlimited"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "chainId": {
            "type": "number"
          },
          "currentBalance": {
            "type": "number"
          },
          "feeMarkupFactor": {
            "type": "number"
          },
          "unlimited": {
            "type": "boolean"
          }
        }
      },
      "RelayerGasSponsor": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "chainId",
          "displayName",
          "address",
          "active",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "displayName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "RelayerGasSponsorUsage": {
        "type": "object",
        "required": [
          "id",
          "chainId",
          "totalGasUsed",
          "totalTxnFees",
          "avgGasPrice",
          "totalTxns",
          "startTime",
          "endTime"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "totalGasUsed": {
            "type": "number"
          },
          "totalTxnFees": {
            "type": "number"
          },
          "avgGasPrice": {
            "type": "number"
          },
          "totalTxns": {
            "type": "number"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          }
        }
      },
      "RelayerTransaction": {
        "type": "object",
        "required": [
          "txnHash",
          "txnNonce",
          "txnStatus",
          "txnRevertReason",
          "requeues",
          "queuedAt",
          "sentAt",
          "minedAt",
          "target",
          "input",
          "txnArgs",
          "walletAddress",
          "metaTxnNonce",
          "gasLimit",
          "gasPrice",
          "gasUsed",
          "gasEstimated",
          "usdRate",
          "creditsUsed",
          "isWhitelisted",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "txnHash": {
            "type": "string"
          },
          "txnNonce": {
            "type": "string"
          },
          "metaTxnID": {
            "type": "string"
          },
          "txnStatus": {
            "type": "string"
          },
          "txnRevertReason": {
            "type": "string"
          },
          "requeues": {
            "type": "number"
          },
          "queuedAt": {
            "type": "string"
          },
          "sentAt": {
            "type": "string"
          },
          "minedAt": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "input": {
            "type": "string"
          },
          "txnArgs": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "txnReceipt": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "walletAddress": {
            "type": "string"
          },
          "metaTxnNonce": {
            "type": "string"
          },
          "gasLimit": {
            "type": "number"
          },
          "gasPrice": {
            "type": "string"
          },
          "gasUsed": {
            "type": "number"
          },
          "gasEstimated": {
            "type": "number"
          },
          "gasFeeMarkup": {
            "type": "number"
          },
          "usdRate": {
            "type": "string"
          },
          "creditsUsed": {
            "type": "number"
          },
          "isWhitelisted": {
            "type": "boolean"
          },
          "gasSponsor": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "IndexerWebhook": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "chainId",
          "contractAddress",
          "eventSig",
          "webhookUrl",
          "disabled",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "contractAddress": {
            "type": "string"
          },
          "eventSig": {
            "type": "string"
          },
          "webhookUrl": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ContractSource": {
        "type": "object",
        "required": [
          "id",
          "uid",
          "contractType",
          "name",
          "description",
          "author",
          "license",
          "audited",
          "moreInfoUrl",
          "disabled",
          "factorySourceUid",
          "abi",
          "bytecode",
          "bytecodeHash",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "uid": {
            "type": "string"
          },
          "contractType": {
            "type": "string"
          },
          "projectId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "audited": {
            "type": "boolean"
          },
          "moreInfoUrl": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "factorySourceUid": {
            "type": "string"
          },
          "abi": {
            "type": "string"
          },
          "bytecode": {
            "type": "string"
          },
          "bytecodeHash": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ContractFactory": {
        "type": "object",
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "uid",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "contractAddress": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "abi": {
            "type": "string"
          },
          "bytecode": {
            "type": "string"
          },
          "bytecodeHash": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "NewContractSource": {
        "type": "object",
        "required": [
          "uid",
          "name",
          "contractType",
          "bytecode",
          "abi"
        ],
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "audited": {
            "type": "boolean"
          },
          "moreInfoUrl": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "contractType": {
            "type": "string"
          },
          "bytecode": {
            "type": "string"
          },
          "abi": {
            "type": "string"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "column": {
            "type": "string"
          },
          "more": {
            "type": "boolean"
          },
          "before": {
            "type": "object"
          },
          "after": {
            "type": "object"
          },
          "sort": {
            "type": "array",
            "description": "[]SortBy",
            "items": {
              "$ref": "#/components/schemas/SortBy"
            }
          }
        }
      },
      "SortBy": {
        "type": "object",
        "required": [
          "column"
        ],
        "properties": {
          "column": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "BillingSettings": {
        "type": "object",
        "required": [
          "maxKeys",
          "rateLimit",
          "creditsIncludedWarn",
          "creditsIncludedMax",
          "creditsOverageWarn",
          "creditsOverageMax",
          "priceSubscriptionTier",
          "priceCreditOverage",
          "marketplaceFee",
          "gasFeeMarkup",
          "blockTransactions",
          "providerSettings"
        ],
        "properties": {
          "maxKeys": {
            "type": "number"
          },
          "rateLimit": {
            "type": "number"
          },
          "creditsIncludedWarn": {
            "type": "number"
          },
          "creditsIncludedMax": {
            "type": "number"
          },
          "creditsOverageWarn": {
            "type": "number"
          },
          "creditsOverageMax": {
            "type": "number"
          },
          "priceSubscriptionTier": {
            "type": "string"
          },
          "priceCreditOverage": {
            "type": "string"
          },
          "marketplaceFee": {
            "type": "string"
          },
          "gasFeeMarkup": {
            "type": "string"
          },
          "blockTransactions": {
            "type": "boolean"
          },
          "providerSettings": {
            "type": "object",
            "description": "map<string,BillingProviderSettings>",
            "additionalProperties": {
              "$ref": "#/components/schemas/BillingProviderSettings"
            }
          }
        }
      },
      "BillingProviderSettings": {
        "type": "object",
        "required": [
          "priceSubscriptionTier",
          "priceCreditOverage",
          "disabled"
        ],
        "properties": {
          "priceSubscriptionTier": {
            "type": "string"
          },
          "priceCreditOverage": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          }
        }
      },
      "BillingOverride": {
        "type": "object",
        "required": [
          "extraKeys",
          "discountSubscriptionTier",
          "discountCreditOverage",
          "forceAllowTransactions"
        ],
        "properties": {
          "extraKeys": {
            "type": "number"
          },
          "rateLimit": {
            "type": "number"
          },
          "creditsIncludedWarn": {
            "type": "number"
          },
          "creditsOverageWarn": {
            "type": "number"
          },
          "creditsOverageMax": {
            "type": "number"
          },
          "discountSubscriptionTier": {
            "type": "number"
          },
          "discountCreditOverage": {
            "type": "number"
          },
          "marketplaceFee": {
            "type": "number"
          },
          "forceAllowTransactions": {
            "type": "boolean"
          }
        }
      },
      "SubscriptionInfo": {
        "type": "object",
        "required": [
          "current",
          "subscriptionUrl",
          "cycleStart",
          "cycleEnd",
          "settings",
          "creditsBonus",
          "creditUsage",
          "creditBalance",
          "creditOverage"
        ],
        "properties": {
          "current": {
            "$ref": "#/components/schemas/ProjectSubscription"
          },
          "subscriptionUrl": {
            "type": "string"
          },
          "cycleStart": {
            "type": "string"
          },
          "cycleEnd": {
            "type": "string"
          },
          "plannedDowngrade": {
            "$ref": "#/components/schemas/SubscriptionTier"
          },
          "pendingUpgrade": {
            "$ref": "#/components/schemas/SubscriptionTier"
          },
          "settings": {
            "$ref": "#/components/schemas/BillingSettings"
          },
          "creditsBonus": {
            "type": "number"
          },
          "creditUsage": {
            "type": "number"
          },
          "creditBalance": {
            "type": "number"
          },
          "creditOverage": {
            "type": "number"
          },
          "extraCharged": {
            "type": "string"
          }
        }
      },
      "PaymentHistory": {
        "type": "object",
        "required": [
          "totalPayments",
          "payments"
        ],
        "properties": {
          "totalPayments": {
            "type": "number"
          },
          "payments": {
            "type": "array",
            "description": "[]Payment",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          }
        }
      },
      "Redirect": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "StripeEventData": {
        "type": "object",
        "required": [
          "object"
        ],
        "properties": {
          "object": {
            "$ref": "#/components/schemas/StripeEventDataObject"
          }
        }
      },
      "StripeEventDataObject": {
        "type": "object",
        "required": [
          "id",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string"
          }
        }
      },
      "Payment": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "provider",
          "externalTxnID",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "provider": {
            "$ref": "#/components/schemas/PaymentProvider"
          },
          "externalTxnID": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "PaymentLog": {
        "type": "object",
        "required": [
          "id",
          "paymentID",
          "data",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "paymentID": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/PaymentLogData"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "PaymentLogData": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "InvoicesReturn": {
        "type": "object",
        "required": [
          "hasMore",
          "invoices"
        ],
        "properties": {
          "hasMore": {
            "type": "boolean"
          },
          "invoices": {
            "type": "array",
            "description": "[]Invoice",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          }
        }
      },
      "Invoice": {
        "type": "object",
        "required": [
          "id",
          "date",
          "amount",
          "paid",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "paid": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "SubscriptionPlans": {
        "type": "object",
        "required": [
          "configs"
        ],
        "properties": {
          "configs": {
            "type": "object",
            "description": "map<string,SubscriptionPlan>",
            "additionalProperties": {
              "$ref": "#/components/schemas/SubscriptionPlan"
            }
          }
        }
      },
      "SubscriptionPlan": {
        "type": "object",
        "required": [
          "tier",
          "settings",
          "features"
        ],
        "properties": {
          "tier": {
            "$ref": "#/components/schemas/SubscriptionTier"
          },
          "settings": {
            "$ref": "#/components/schemas/BillingSettings"
          },
          "features": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CollectionInfo": {
        "type": "object",
        "required": [
          "chainId",
          "title",
          "type",
          "image",
          "address",
          "link",
          "description",
          "featured"
        ],
        "properties": {
          "chainId": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "featured": {
            "type": "boolean"
          }
        }
      },
      "ContractInfo": {
        "type": "object",
        "required": [
          "chainId",
          "address",
          "name",
          "type",
          "symbol",
          "logoURI",
          "deployed",
          "bytecodeHash",
          "extensions",
          "contentHash",
          "updatedAt"
        ],
        "properties": {
          "chainId": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "decimals": {
            "type": "number"
          },
          "logoURI": {
            "type": "string"
          },
          "deployed": {
            "type": "boolean"
          },
          "bytecodeHash": {
            "type": "string"
          },
          "extensions": {
            "type": "object"
          },
          "contentHash": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ProjectInvitation": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "code",
          "access",
          "expiresAt",
          "usageCount",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "code": {
            "type": "string"
          },
          "access": {
            "$ref": "#/components/schemas/CollaboratorAccess"
          },
          "expiresAt": {
            "type": "string"
          },
          "usageCount": {
            "type": "number"
          },
          "signupLimit": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          }
        }
      },
      "MarketplaceConfigSchema": {
        "type": "object",
        "required": [
          "version",
          "config",
          "style"
        ],
        "properties": {
          "version": {
            "type": "number"
          },
          "config": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "style": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "MarketplaceConfig": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "version",
          "config",
          "settings",
          "style"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "version": {
            "type": "number"
          },
          "config": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "settings": {
            "$ref": "#/components/schemas/MarketplaceSettings"
          },
          "style": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "MarketplaceWalletOptions": {
        "type": "object",
        "required": [
          "walletType",
          "oidcIssuers",
          "connectors",
          "includeEIP6963Wallets"
        ],
        "properties": {
          "walletType": {
            "$ref": "#/components/schemas/MarketplaceWallet"
          },
          "oidcIssuers": {
            "type": "object",
            "description": "map<string,string>",
            "additionalProperties": {
              "type": "string"
            }
          },
          "connectors": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "includeEIP6963Wallets": {
            "type": "boolean"
          }
        }
      },
      "MarketplaceCollection": {
        "type": "object",
        "required": [
          "marketplaceType",
          "chainId",
          "address",
          "feePercetage",
          "currencyOptions"
        ],
        "properties": {
          "marketplaceType": {
            "$ref": "#/components/schemas/MarketplaceType"
          },
          "chainId": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "feePercetage": {
            "type": "number"
          },
          "currencyOptions": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MarketplaceSettings": {
        "type": "object",
        "required": [
          "publisherId",
          "title",
          "shortDescription",
          "socials",
          "faviconUrl",
          "landingBannerUrl",
          "collections",
          "walletOptions",
          "landingPageLayout",
          "logoUrl",
          "bannerUrl"
        ],
        "properties": {
          "publisherId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "socials": {
            "type": "object",
            "description": "map<string,string>",
            "additionalProperties": {
              "type": "string"
            }
          },
          "faviconUrl": {
            "type": "string"
          },
          "landingBannerUrl": {
            "type": "string"
          },
          "collections": {
            "type": "array",
            "description": "[]MarketplaceCollection",
            "items": {
              "$ref": "#/components/schemas/MarketplaceCollection"
            }
          },
          "walletOptions": {
            "$ref": "#/components/schemas/MarketplaceWalletOptions"
          },
          "landingPageLayout": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "bannerUrl": {
            "type": "string"
          },
          "fontUrl": {
            "type": "string"
          },
          "ogImage": {
            "type": "string"
          }
        }
      },
      "MarketplaceHostname": {
        "type": "object",
        "required": [
          "id",
          "marketplaceConfigId",
          "hostname",
          "isDefaultHostname",
          "isCustomDomain",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "marketplaceConfigId": {
            "type": "number"
          },
          "hostname": {
            "type": "string"
          },
          "isDefaultHostname": {
            "type": "boolean"
          },
          "isCustomDomain": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "OffchainInventory": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "chainId",
          "externalProductId",
          "paymentTokenAddress",
          "paymentTokenType",
          "paymentTokenId",
          "paymentAmount",
          "paymentRecipient"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "externalProductId": {
            "type": "string"
          },
          "paymentTokenAddress": {
            "type": "string"
          },
          "paymentTokenType": {
            "$ref": "#/components/schemas/TokenType"
          },
          "paymentTokenId": {
            "type": "number"
          },
          "paymentAmount": {
            "type": "number"
          },
          "paymentRecipient": {
            "type": "string"
          },
          "chainedCallAddress": {
            "type": "string"
          },
          "chainedCallData": {
            "type": "string"
          },
          "allowCrossChainPayments": {
            "type": "boolean"
          },
          "callbackURL": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          }
        }
      },
      "OffchainPayment": {
        "type": "object",
        "required": [
          "id",
          "offchainInventoryId",
          "productRecipient",
          "paymentChainId",
          "paymentTokenAddress",
          "expiration",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "offchainInventoryId": {
            "type": "number"
          },
          "productRecipient": {
            "type": "string"
          },
          "paymentChainId": {
            "type": "number"
          },
          "paymentTokenAddress": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "completedAt": {
            "type": "string"
          },
          "processedAt": {
            "type": "string"
          }
        }
      },
      "WalletConfigSchema": {
        "type": "object",
        "required": [
          "version",
          "config"
        ],
        "properties": {
          "version": {
            "type": "number"
          },
          "config": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "WalletConfig": {
        "type": "object",
        "required": [
          "version",
          "projectId",
          "platform",
          "config"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "version": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "platform": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ProjectFile": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "scope",
          "mimetype",
          "filepath",
          "contents",
          "hash",
          "url",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "scope": {
            "$ref": "#/components/schemas/FileScope"
          },
          "mimetype": {
            "type": "string"
          },
          "filepath": {
            "type": "string"
          },
          "contents": {
            "type": "array",
            "description": "[]byte",
            "items": {
              "type": "string"
            }
          },
          "hash": {
            "type": "array",
            "description": "[]byte",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "EmailTemplate": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "subject",
          "introText",
          "logoUrl",
          "placeholders",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "templateType": {
            "$ref": "#/components/schemas/EmailTemplateType"
          },
          "projectId": {
            "type": "number"
          },
          "subject": {
            "type": "string"
          },
          "introText": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "placeholders": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          }
        }
      },
      "TaskRunner": {
        "type": "object",
        "required": [
          "id",
          "workGroup",
          "runAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "workGroup": {
            "type": "string"
          },
          "runAt": {
            "type": "string"
          }
        }
      },
      "Task": {
        "type": "object",
        "required": [
          "id",
          "queue",
          "status",
          "try",
          "payload",
          "hash"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "queue": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "try": {
            "type": "number"
          },
          "runAt": {
            "type": "string"
          },
          "lastRanAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "description": "[]byte",
            "items": {
              "type": "string"
            }
          },
          "hash": {
            "type": "string"
          }
        }
      },
      "QueryFilter": {
        "type": "object",
        "required": [
          "projectId"
        ],
        "properties": {
          "projectId": {
            "type": "number"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "dateInterval": {
            "$ref": "#/components/schemas/DateInterval"
          },
          "collections": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "tokenId": {
            "type": "string"
          }
        }
      },
      "Chart": {
        "type": "object",
        "required": [
          "value",
          "label"
        ],
        "properties": {
          "value": {
            "type": "number"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "MultiValueChart": {
        "type": "object",
        "required": [
          "value",
          "label"
        ],
        "properties": {
          "value": {
            "type": "object",
            "description": "map<string,float64>",
            "additionalProperties": {
              "type": "number"
            }
          },
          "label": {
            "type": "string"
          }
        }
      },
      "QueryResult": {
        "type": "object",
        "required": [
          "collection",
          "source",
          "volumeUSD",
          "numTokens",
          "numTxns"
        ],
        "properties": {
          "collection": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          },
          "volumeUSD": {
            "type": "number"
          },
          "numTokens": {
            "type": "number"
          },
          "numTxns": {
            "type": "number"
          }
        }
      },
      "CreditBonus": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "amount",
          "balance",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "balance": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "OpenIdProvider": {
        "type": "object",
        "required": [
          "iss",
          "aud"
        ],
        "properties": {
          "iss": {
            "type": "string"
          },
          "aud": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "WaasSettings": {
        "type": "object",
        "required": [
          "recoveryAddress",
          "authConfig",
          "tenantState",
          "emailAuth",
          "oidcProviders",
          "allowedOrigins",
          "updateCode",
          "tenantKey"
        ],
        "properties": {
          "recoveryAddress": {
            "type": "string"
          },
          "authConfig": {
            "$ref": "#/components/schemas/WaasAuthConfig"
          },
          "tenantState": {
            "$ref": "#/components/schemas/WaasTenantState"
          },
          "emailAuth": {
            "type": "boolean"
          },
          "oidcProviders": {
            "type": "array",
            "description": "[]OpenIdProvider",
            "items": {
              "$ref": "#/components/schemas/OpenIdProvider"
            }
          },
          "allowedOrigins": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "updateCode": {
            "type": "string"
          },
          "tenantKey": {
            "type": "string"
          }
        }
      },
      "WaasAuthEmailConfig": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "WaasAuthGuestConfig": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "WaasAuthPlayfabConfig": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "titleId": {
            "type": "string"
          }
        }
      },
      "WaasAuthStytchConfig": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "projectId": {
            "type": "string"
          }
        }
      },
      "WaasAuthConfig": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/WaasAuthEmailConfig"
          },
          "guest": {
            "$ref": "#/components/schemas/WaasAuthGuestConfig"
          },
          "playfab": {
            "$ref": "#/components/schemas/WaasAuthPlayfabConfig"
          },
          "stytch": {
            "$ref": "#/components/schemas/WaasAuthStytchConfig"
          }
        }
      },
      "WaasWalletStatus": {
        "type": "object",
        "required": [
          "chainId",
          "address",
          "deployed"
        ],
        "properties": {
          "chainId": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "deployed": {
            "type": "boolean"
          }
        }
      },
      "RawData": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "Audience": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "name",
          "contactCount",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "contactCount": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          }
        }
      },
      "AudienceContact": {
        "type": "object",
        "required": [
          "id",
          "audienceId",
          "address",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "audienceId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Trial": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "type",
          "startAt",
          "endAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "type": {
            "$ref": "#/components/schemas/TrialType"
          },
          "startAt": {
            "type": "string"
          },
          "endAt": {
            "type": "string"
          }
        }
      },
      "ExtendedMarketplaceConfig": {
        "type": "object",
        "required": [
          "config",
          "accessKey",
          "waasEmailEnabled",
          "waasTenantKey",
          "waasProviders"
        ],
        "properties": {
          "config": {
            "$ref": "#/components/schemas/MarketplaceSettings"
          },
          "accessKey": {
            "type": "string"
          },
          "waasEmailEnabled": {
            "type": "boolean"
          },
          "waasTenantKey": {
            "type": "string"
          },
          "waasProviders": {
            "type": "array",
            "description": "[]OpenIdProvider",
            "items": {
              "$ref": "#/components/schemas/OpenIdProvider"
            }
          }
        }
      },
      "Builder_GetContract_Request": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          }
        }
      },
      "Builder_ListContracts_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "filter": {
            "$ref": "#/components/schemas/ContractFilter"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Builder_ListContractSources_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Builder_ListAudiences_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          }
        }
      },
      "Builder_GetAudience_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "audienceId": {
            "type": "number"
          }
        }
      },
      "Builder_CreateAudience_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Builder_UpdateAudience_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "audienceId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Builder_DeleteAudience_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "audienceId": {
            "type": "number"
          }
        }
      },
      "Builder_AddAudienceContacts_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "audienceId": {
            "type": "number"
          },
          "contacts": {
            "type": "array",
            "description": "[]AudienceContact",
            "items": {
              "$ref": "#/components/schemas/AudienceContact"
            }
          }
        }
      },
      "Builder_RemoveAudienceContacts_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "audienceId": {
            "type": "number"
          },
          "contactIds": {
            "type": "array",
            "description": "[]uint64",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "Builder_GetContract_Response": {
        "type": "object",
        "properties": {
          "contract": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "Builder_ListContracts_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "contracts": {
            "type": "array",
            "description": "[]Contract",
            "items": {
              "$ref": "#/components/schemas/Contract"
            }
          }
        }
      },
      "Builder_ListContractSources_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "contractSources": {
            "type": "array",
            "description": "[]ContractSource",
            "items": {
              "$ref": "#/components/schemas/ContractSource"
            }
          }
        }
      },
      "Builder_ListAudiences_Response": {
        "type": "object",
        "properties": {
          "audiences": {
            "type": "array",
            "description": "[]Audience",
            "items": {
              "$ref": "#/components/schemas/Audience"
            }
          }
        }
      },
      "Builder_GetAudience_Response": {
        "type": "object",
        "properties": {
          "audience": {
            "$ref": "#/components/schemas/Audience"
          },
          "contacts": {
            "type": "array",
            "description": "[]AudienceContact",
            "items": {
              "$ref": "#/components/schemas/AudienceContact"
            }
          },
          "contracts": {
            "type": "array",
            "description": "[]Contract",
            "items": {
              "$ref": "#/components/schemas/Contract"
            }
          }
        }
      },
      "Builder_CreateAudience_Response": {
        "type": "object",
        "properties": {
          "audience": {
            "$ref": "#/components/schemas/Audience"
          }
        }
      },
      "Builder_UpdateAudience_Response": {
        "type": "object",
        "properties": {
          "audience": {
            "$ref": "#/components/schemas/Audience"
          }
        }
      },
      "Builder_DeleteAudience_Response": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          }
        }
      },
      "Builder_AddAudienceContacts_Response": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          }
        }
      },
      "Builder_RemoveAudienceContacts_Response": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "description": "Public project access key for authenticating requests obtained on Sequence Builder. Example Test Key: AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI",
        "name": "X-Access-Key"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Secret JWT token for authenticating requests obtained from Sequence Builder - should not be exposed publicly."
      }
    }
  },
  "info": {
    "title": "Builder Api",
    "version": ""
  },
  "openapi": "3.0.0",
  "paths": {
    "/rpc/Builder/GetContract": {
      "post": {
        "summary": "GetContract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Builder_GetContract_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Builder_GetContract_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorServiceDisabled"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorEmailTemplateExists"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSubscriptionLimit"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFeatureNotIncluded"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidNetwork"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvitationExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAlreadyCollaborator"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Builder/ListContracts": {
      "post": {
        "summary": "ListContracts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Builder_ListContracts_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Builder_ListContracts_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorServiceDisabled"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorEmailTemplateExists"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSubscriptionLimit"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFeatureNotIncluded"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidNetwork"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvitationExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAlreadyCollaborator"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Builder/ListContractSources": {
      "post": {
        "summary": "ListContractSources",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Builder_ListContractSources_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Builder_ListContractSources_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorServiceDisabled"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorEmailTemplateExists"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSubscriptionLimit"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFeatureNotIncluded"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidNetwork"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvitationExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAlreadyCollaborator"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Builder/ListAudiences": {
      "post": {
        "summary": "ListAudiences",
        "description": "Audience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Builder_ListAudiences_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Builder_ListAudiences_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorServiceDisabled"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorEmailTemplateExists"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSubscriptionLimit"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFeatureNotIncluded"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidNetwork"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvitationExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAlreadyCollaborator"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Builder/GetAudience": {
      "post": {
        "summary": "GetAudience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Builder_GetAudience_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Builder_GetAudience_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorServiceDisabled"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorEmailTemplateExists"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSubscriptionLimit"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFeatureNotIncluded"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidNetwork"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvitationExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAlreadyCollaborator"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Builder/CreateAudience": {
      "post": {
        "summary": "CreateAudience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Builder_CreateAudience_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Builder_CreateAudience_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorServiceDisabled"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorEmailTemplateExists"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSubscriptionLimit"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFeatureNotIncluded"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidNetwork"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvitationExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAlreadyCollaborator"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Builder/UpdateAudience": {
      "post": {
        "summary": "UpdateAudience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Builder_UpdateAudience_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Builder_UpdateAudience_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorServiceDisabled"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorEmailTemplateExists"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSubscriptionLimit"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFeatureNotIncluded"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidNetwork"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvitationExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAlreadyCollaborator"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Builder/DeleteAudience": {
      "post": {
        "summary": "DeleteAudience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Builder_DeleteAudience_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Builder_DeleteAudience_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorServiceDisabled"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorEmailTemplateExists"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSubscriptionLimit"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFeatureNotIncluded"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidNetwork"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvitationExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAlreadyCollaborator"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Builder/AddAudienceContacts": {
      "post": {
        "summary": "AddAudienceContacts",
        "description": "Contacts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Builder_AddAudienceContacts_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Builder_AddAudienceContacts_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorServiceDisabled"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorEmailTemplateExists"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSubscriptionLimit"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFeatureNotIncluded"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidNetwork"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvitationExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAlreadyCollaborator"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Builder/RemoveAudienceContacts": {
      "post": {
        "summary": "RemoveAudienceContacts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Builder_RemoveAudienceContacts_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Builder_RemoveAudienceContacts_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorServiceDisabled"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorEmailTemplateExists"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSubscriptionLimit"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFeatureNotIncluded"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidNetwork"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvitationExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAlreadyCollaborator"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.sequence.app",
      "description": "Builder"
    }
  ]
}
