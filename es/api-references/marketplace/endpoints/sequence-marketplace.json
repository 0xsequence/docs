{
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "es-translated apiKey",
        "in": "MOCKDATA + es-translated header",
        "description": "es-translated Public project access key for authenticating requests obtained on Sequence Builder. Example Test Key: AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI",
        "name": "MOCKDATA + es-translated X-Access-Key",
        "x-example": "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
      }
    },
    "schemas": {
      "ErrorWebrpcEndpoint": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated WebrpcEndpoint"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 0"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated endpoint error"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 400"
          }
        }
      },
      "ErrorWebrpcRequestFailed": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated WebrpcRequestFailed"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated -1"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated request failed"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 400"
          }
        }
      },
      "ErrorWebrpcBadRoute": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated WebrpcBadRoute"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated -2"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated bad route"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 404"
          }
        }
      },
      "ErrorWebrpcBadMethod": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated WebrpcBadMethod"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated -3"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated bad method"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 405"
          }
        }
      },
      "ErrorWebrpcBadRequest": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated WebrpcBadRequest"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated -4"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated bad request"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 400"
          }
        }
      },
      "ErrorWebrpcBadResponse": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated WebrpcBadResponse"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated -5"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated bad response"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 500"
          }
        }
      },
      "ErrorWebrpcServerPanic": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated WebrpcServerPanic"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated -6"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated server panic"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 500"
          }
        }
      },
      "ErrorWebrpcInternalError": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated WebrpcInternalError"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated -7"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated internal error"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 500"
          }
        }
      },
      "ErrorWebrpcClientDisconnected": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated WebrpcClientDisconnected"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated -8"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated client disconnected"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 400"
          }
        }
      },
      "ErrorWebrpcStreamLost": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated WebrpcStreamLost"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated -9"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated stream lost"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 400"
          }
        }
      },
      "ErrorWebrpcStreamFinished": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated WebrpcStreamFinished"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated -10"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated stream finished"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 200"
          }
        }
      },
      "ErrorUnauthorized": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated Unauthorized"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 1000"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated Unauthorized access"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 401"
          }
        }
      },
      "ErrorPermissionDenied": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated PermissionDenied"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 1001"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated Permission denied"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 403"
          }
        }
      },
      "ErrorSessionExpired": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated SessionExpired"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 1002"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated Session expired"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 403"
          }
        }
      },
      "ErrorMethodNotFound": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated MethodNotFound"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 1003"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated Method not found"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 404"
          }
        }
      },
      "ErrorTimeout": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated Timeout"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 2000"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated Request timed out"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 408"
          }
        }
      },
      "ErrorInvalidArgument": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated InvalidArgument"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 2001"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated Invalid argument"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 400"
          }
        }
      },
      "ErrorNotFound": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated NotFound"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 3000"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated Resource not found"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 400"
          }
        }
      },
      "ErrorUserNotFound": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated UserNotFound"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 3001"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated User not found"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 400"
          }
        }
      },
      "ErrorProjectNotFound": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated ProjectNotFound"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 3002"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated Project not found"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 400"
          }
        }
      },
      "ErrorInvalidTier": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "es-translated InvalidTier"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 3003"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated Invalid subscription tier"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 400"
          }
        }
      },
      "ErrorProjectLimitReached": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated ProjectLimitReached"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 3005"
          },
          "msg": {
            "type": "es-translated string",
            "example": "es-translated Project limit reached"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "MOCKDATA + es-translated 402"
          }
        }
      },
      "ErrorNotImplemented": {
        "type": "es-translated object",
        "required": [
          "es-translated error",
          "es-translated code",
          "MOCKDATA + es-translated msg",
          "es-translated status"
        ],
        "properties": {
          "error": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated NotImplemented"
          },
          "code": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 9999"
          },
          "msg": {
            "type": "es-translated string",
            "example": "MOCKDATA + es-translated Not Implemented"
          },
          "cause": {
            "type": "es-translated string"
          },
          "status": {
            "type": "MOCKDATA + es-translated number",
            "example": "es-translated 500"
          }
        }
      },
      "TokenMetadata": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated tokenId",
          "es-translated name",
          "es-translated attributes"
        ],
        "properties": {
          "tokenId": {
            "type": "es-translated string"
          },
          "name": {
            "type": "es-translated string"
          },
          "description": {
            "type": "es-translated string"
          },
          "image": {
            "type": "es-translated string"
          },
          "video": {
            "type": "es-translated string"
          },
          "audio": {
            "type": "es-translated string"
          },
          "properties": {
            "type": "es-translated object",
            "description": "MOCKDATA + es-translated map<string,any>",
            "additionalProperties": {
              "type": "es-translated object"
            }
          },
          "attributes": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []map<string,any>",
            "items": {
              "type": "es-translated object",
              "description": "MOCKDATA + es-translated map<string,any>",
              "additionalProperties": {
                "type": "es-translated object"
              }
            }
          },
          "imageData": {
            "type": "es-translated string"
          },
          "externalUrl": {
            "type": "es-translated string"
          },
          "backgroundColor": {
            "type": "es-translated string"
          },
          "animationUrl": {
            "type": "es-translated string"
          },
          "decimals": {
            "type": "MOCKDATA + es-translated number"
          },
          "updatedAt": {
            "type": "es-translated string"
          },
          "assets": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []Asset",
            "items": {
              "$ref": "MOCKDATA + es-translated #/components/schemas/Asset"
            }
          }
        }
      },
      "Asset": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated id",
          "es-translated collectionId",
          "MOCKDATA + es-translated tokenId",
          "MOCKDATA + es-translated metadataField"
        ],
        "properties": {
          "id": {
            "type": "MOCKDATA + es-translated number"
          },
          "collectionId": {
            "type": "MOCKDATA + es-translated number"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "url": {
            "type": "es-translated string"
          },
          "metadataField": {
            "type": "es-translated string"
          },
          "filename": {
            "type": "es-translated string"
          },
          "filesize": {
            "type": "MOCKDATA + es-translated number"
          },
          "mimeType": {
            "type": "es-translated string"
          },
          "width": {
            "type": "MOCKDATA + es-translated number"
          },
          "height": {
            "type": "MOCKDATA + es-translated number"
          },
          "updatedAt": {
            "type": "es-translated string"
          }
        }
      },
      "SortOrder": {
        "type": "es-translated string",
        "description": "es-translated Represented as uint32 on the server side",
        "enum": [
          "es-translated DESC",
          "MOCKDATA + es-translated ASC"
        ]
      },
      "PropertyType": {
        "type": "es-translated string",
        "description": "es-translated Represented as uint32 on the server side",
        "enum": [
          "es-translated INT",
          "MOCKDATA + es-translated STRING",
          "es-translated ARRAY",
          "MOCKDATA + es-translated GENERIC"
        ]
      },
      "MarketplaceKind": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated sequence_marketplace_v1",
          "es-translated sequence_marketplace_v2",
          "MOCKDATA + es-translated blur",
          "MOCKDATA + es-translated zerox",
          "MOCKDATA + es-translated opensea",
          "es-translated looks_rare",
          "MOCKDATA + es-translated x2y2",
          "es-translated alienswap",
          "MOCKDATA + es-translated payment_processor",
          "MOCKDATA + es-translated mintify",
          "es-translated magic_eden"
        ]
      },
      "OrderbookKind": {
        "type": "es-translated string",
        "description": "es-translated Represented as uint32 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated sequence_marketplace_v1",
          "es-translated sequence_marketplace_v2",
          "MOCKDATA + es-translated blur",
          "MOCKDATA + es-translated opensea",
          "es-translated looks_rare",
          "MOCKDATA + es-translated reservoir",
          "MOCKDATA + es-translated x2y2"
        ]
      },
      "SourceKind": {
        "type": "es-translated string",
        "description": "es-translated Represented as uint32 on the server side",
        "enum": [
          "es-translated unknown",
          "es-translated external",
          "MOCKDATA + es-translated sequence_marketplace_v1",
          "es-translated sequence_marketplace_v2"
        ]
      },
      "OrderSide": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated listing",
          "es-translated offer"
        ]
      },
      "OrderStatus": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "es-translated active",
          "MOCKDATA + es-translated inactive",
          "es-translated expired",
          "MOCKDATA + es-translated cancelled",
          "es-translated filled",
          "es-translated decimals_missing"
        ]
      },
      "ContractType": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint16 on the server side",
        "enum": [
          "es-translated UNKNOWN",
          "es-translated ERC20",
          "MOCKDATA + es-translated ERC721",
          "MOCKDATA + es-translated ERC1155"
        ]
      },
      "CollectionPriority": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated low",
          "es-translated normal",
          "MOCKDATA + es-translated high"
        ]
      },
      "CollectionStatus": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated created",
          "es-translated syncing_contract_metadata",
          "MOCKDATA + es-translated synced_contract_metadata",
          "es-translated syncing_metadata",
          "MOCKDATA + es-translated synced_metadata",
          "es-translated syncing_tokens",
          "MOCKDATA + es-translated synced_tokens",
          "es-translated syncing_orders",
          "es-translated active",
          "MOCKDATA + es-translated failed",
          "MOCKDATA + es-translated inactive",
          "es-translated incompatible_type"
        ]
      },
      "ProjectStatus": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "es-translated active",
          "MOCKDATA + es-translated inactive"
        ]
      },
      "CollectibleStatus": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "es-translated active",
          "MOCKDATA + es-translated inactive"
        ]
      },
      "CurrencyStatus": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated created",
          "es-translated syncing_metadata",
          "es-translated active",
          "MOCKDATA + es-translated failed"
        ]
      },
      "WalletKind": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "es-translated sequence"
        ]
      },
      "StepType": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated tokenApproval",
          "es-translated buy",
          "MOCKDATA + es-translated sell",
          "es-translated createListing",
          "MOCKDATA + es-translated createOffer",
          "es-translated signEIP712",
          "MOCKDATA + es-translated signEIP191",
          "MOCKDATA + es-translated cancel"
        ]
      },
      "TransactionCrypto": {
        "type": "es-translated string",
        "description": "es-translated Represented as uint32 on the server side",
        "enum": [
          "es-translated none",
          "MOCKDATA + es-translated partially",
          "es-translated all"
        ]
      },
      "TransactionNFTCheckoutProvider": {
        "type": "es-translated string",
        "description": "es-translated Represented as uint32 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated sardine",
          "es-translated transak"
        ]
      },
      "TransactionOnRampProvider": {
        "type": "es-translated string",
        "description": "es-translated Represented as uint32 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated sardine",
          "es-translated transak"
        ]
      },
      "TransactionSwapProvider": {
        "type": "es-translated string",
        "description": "es-translated Represented as uint32 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated zerox"
        ]
      },
      "ExecuteType": {
        "type": "es-translated string",
        "description": "es-translated Represented as uint32 on the server side",
        "enum": [
          "es-translated unknown",
          "es-translated order"
        ]
      },
      "ActivityAction": {
        "type": "es-translated string",
        "description": "MOCKDATA + es-translated Represented as uint8 on the server side",
        "enum": [
          "es-translated unknown",
          "MOCKDATA + es-translated listing",
          "es-translated offer",
          "es-translated mint",
          "MOCKDATA + es-translated sale",
          "es-translated listingCancel",
          "MOCKDATA + es-translated offerCancel",
          "es-translated transfer"
        ]
      },
      "Page": {
        "type": "es-translated object",
        "required": [
          "es-translated page",
          "MOCKDATA + es-translated pageSize"
        ],
        "properties": {
          "page": {
            "type": "MOCKDATA + es-translated number"
          },
          "pageSize": {
            "type": "MOCKDATA + es-translated number"
          },
          "more": {
            "type": "es-translated boolean"
          },
          "sort": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []SortBy",
            "items": {
              "$ref": "es-translated #/components/schemas/SortBy"
            }
          }
        }
      },
      "SortBy": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated column",
          "es-translated order"
        ],
        "properties": {
          "column": {
            "type": "es-translated string"
          },
          "order": {
            "$ref": "es-translated #/components/schemas/SortOrder"
          }
        }
      },
      "Filter": {
        "type": "es-translated object",
        "properties": {
          "text": {
            "type": "es-translated string"
          },
          "properties": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []PropertyFilter",
            "items": {
              "$ref": "MOCKDATA + es-translated #/components/schemas/PropertyFilter"
            }
          }
        }
      },
      "PropertyFilter": {
        "type": "es-translated object",
        "required": [
          "es-translated name",
          "MOCKDATA + es-translated type"
        ],
        "properties": {
          "name": {
            "type": "es-translated string"
          },
          "type": {
            "$ref": "es-translated #/components/schemas/PropertyType"
          },
          "min": {
            "type": "MOCKDATA + es-translated number"
          },
          "max": {
            "type": "MOCKDATA + es-translated number"
          },
          "values": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []any",
            "items": {
              "type": "es-translated object"
            }
          }
        }
      },
      "CollectiblesFilter": {
        "type": "es-translated object",
        "required": [
          "es-translated includeEmpty"
        ],
        "properties": {
          "includeEmpty": {
            "type": "es-translated boolean"
          },
          "searchText": {
            "type": "es-translated string"
          },
          "properties": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []PropertyFilter",
            "items": {
              "$ref": "MOCKDATA + es-translated #/components/schemas/PropertyFilter"
            }
          },
          "marketplaces": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []MarketplaceKind",
            "items": {
              "$ref": "es-translated #/components/schemas/MarketplaceKind"
            }
          },
          "inAccounts": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []string",
            "items": {
              "type": "es-translated string"
            }
          },
          "notInAccounts": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []string",
            "items": {
              "type": "es-translated string"
            }
          },
          "ordersCreatedBy": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []string",
            "items": {
              "type": "es-translated string"
            }
          },
          "ordersNotCreatedBy": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []string",
            "items": {
              "type": "es-translated string"
            }
          },
          "inCurrencyAddresses": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []string",
            "items": {
              "type": "es-translated string"
            }
          },
          "notInCurrencyAddresses": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []string",
            "items": {
              "type": "es-translated string"
            }
          }
        }
      },
      "Order": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated id",
          "es-translated collectionId",
          "es-translated orderId",
          "es-translated marketplace",
          "es-translated source",
          "MOCKDATA + es-translated side",
          "es-translated status",
          "es-translated chainId",
          "MOCKDATA + es-translated originName",
          "es-translated collectionContractAddress",
          "MOCKDATA + es-translated createdBy",
          "MOCKDATA + es-translated priceAmount",
          "es-translated priceAmountFormatted",
          "MOCKDATA + es-translated priceAmountNet",
          "es-translated priceAmountNetFormatted",
          "MOCKDATA + es-translated priceCurrencyAddress",
          "es-translated priceDecimals",
          "MOCKDATA + es-translated priceUSD",
          "es-translated priceUSDFormatted",
          "es-translated quantityInitial",
          "MOCKDATA + es-translated quantityInitialFormatted",
          "es-translated quantityRemaining",
          "es-translated quantityRemainingFormatted",
          "MOCKDATA + es-translated quantityAvailable",
          "es-translated quantityAvailableFormatted",
          "MOCKDATA + es-translated quantityDecimals",
          "es-translated feeBps",
          "MOCKDATA + es-translated feeBreakdown",
          "es-translated validFrom",
          "MOCKDATA + es-translated validUntil",
          "es-translated blockNumber",
          "es-translated createdAt",
          "MOCKDATA + es-translated updatedAt"
        ],
        "properties": {
          "id": {
            "type": "MOCKDATA + es-translated number"
          },
          "collectionId": {
            "type": "MOCKDATA + es-translated number"
          },
          "collectibleId": {
            "type": "MOCKDATA + es-translated number"
          },
          "orderId": {
            "type": "es-translated string"
          },
          "marketplace": {
            "$ref": "es-translated #/components/schemas/MarketplaceKind"
          },
          "source": {
            "$ref": "es-translated #/components/schemas/SourceKind"
          },
          "side": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/OrderSide"
          },
          "status": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/OrderStatus"
          },
          "chainId": {
            "type": "MOCKDATA + es-translated number"
          },
          "originName": {
            "type": "es-translated string"
          },
          "collectionContractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "createdBy": {
            "type": "es-translated string"
          },
          "priceAmount": {
            "type": "es-translated string"
          },
          "priceAmountFormatted": {
            "type": "es-translated string"
          },
          "priceAmountNet": {
            "type": "es-translated string"
          },
          "priceAmountNetFormatted": {
            "type": "es-translated string"
          },
          "priceCurrencyAddress": {
            "type": "es-translated string"
          },
          "priceDecimals": {
            "type": "MOCKDATA + es-translated number"
          },
          "priceUSD": {
            "type": "MOCKDATA + es-translated number"
          },
          "priceUSDFormatted": {
            "type": "es-translated string"
          },
          "quantityInitial": {
            "type": "es-translated string"
          },
          "quantityInitialFormatted": {
            "type": "es-translated string"
          },
          "quantityRemaining": {
            "type": "es-translated string"
          },
          "quantityRemainingFormatted": {
            "type": "es-translated string"
          },
          "quantityAvailable": {
            "type": "es-translated string"
          },
          "quantityAvailableFormatted": {
            "type": "es-translated string"
          },
          "quantityDecimals": {
            "type": "MOCKDATA + es-translated number"
          },
          "feeBps": {
            "type": "MOCKDATA + es-translated number"
          },
          "feeBreakdown": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []FeeBreakdown",
            "items": {
              "$ref": "MOCKDATA + es-translated #/components/schemas/FeeBreakdown"
            }
          },
          "validFrom": {
            "type": "es-translated string"
          },
          "validUntil": {
            "type": "es-translated string"
          },
          "blockNumber": {
            "type": "MOCKDATA + es-translated number"
          },
          "orderCreatedAt": {
            "type": "es-translated string"
          },
          "orderUpdatedAt": {
            "type": "es-translated string"
          },
          "createdAt": {
            "type": "es-translated string"
          },
          "updatedAt": {
            "type": "es-translated string"
          },
          "deletedAt": {
            "type": "es-translated string"
          }
        }
      },
      "FeeBreakdown": {
        "type": "es-translated object",
        "required": [
          "es-translated kind",
          "MOCKDATA + es-translated recipientAddress",
          "MOCKDATA + es-translated bps"
        ],
        "properties": {
          "kind": {
            "type": "es-translated string"
          },
          "recipientAddress": {
            "type": "es-translated string"
          },
          "bps": {
            "type": "MOCKDATA + es-translated number"
          }
        }
      },
      "CollectibleOrder": {
        "type": "es-translated object",
        "required": [
          "es-translated metadata"
        ],
        "properties": {
          "metadata": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/TokenMetadata"
          },
          "order": {
            "$ref": "es-translated #/components/schemas/Order"
          },
          "listing": {
            "$ref": "es-translated #/components/schemas/Order"
          },
          "offer": {
            "$ref": "es-translated #/components/schemas/Order"
          }
        }
      },
      "OrderFilter": {
        "type": "es-translated object",
        "properties": {
          "createdBy": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []string",
            "items": {
              "type": "es-translated string"
            }
          },
          "marketplace": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []MarketplaceKind",
            "items": {
              "$ref": "es-translated #/components/schemas/MarketplaceKind"
            }
          },
          "currencies": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []string",
            "items": {
              "type": "es-translated string"
            }
          }
        }
      },
      "Collection": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated id",
          "es-translated status",
          "es-translated chainId",
          "MOCKDATA + es-translated contractAddress",
          "es-translated contractType",
          "MOCKDATA + es-translated priority",
          "es-translated tokenQuantityDecimals",
          "MOCKDATA + es-translated config",
          "es-translated syncContractMetadataJob",
          "MOCKDATA + es-translated refreshMetadataJob",
          "es-translated refreshMetadataTimestamp",
          "es-translated createdAt",
          "MOCKDATA + es-translated updatedAt"
        ],
        "properties": {
          "id": {
            "type": "MOCKDATA + es-translated number"
          },
          "status": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/CollectionStatus"
          },
          "chainId": {
            "type": "MOCKDATA + es-translated number"
          },
          "contractAddress": {
            "type": "es-translated string"
          },
          "contractType": {
            "$ref": "es-translated #/components/schemas/ContractType"
          },
          "priority": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/CollectionPriority"
          },
          "tokenQuantityDecimals": {
            "type": "MOCKDATA + es-translated number"
          },
          "config": {
            "$ref": "es-translated #/components/schemas/CollectionConfig"
          },
          "syncContractMetadataJob": {
            "type": "MOCKDATA + es-translated number"
          },
          "refreshMetadataJob": {
            "type": "MOCKDATA + es-translated number"
          },
          "refreshMetadataTimestamp": {
            "type": "es-translated string"
          },
          "createdAt": {
            "type": "es-translated string"
          },
          "updatedAt": {
            "type": "es-translated string"
          },
          "deletedAt": {
            "type": "es-translated string"
          }
        }
      },
      "CollectionConfig": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated lastSynced",
          "es-translated collectiblesSynced",
          "es-translated activitiesSynced",
          "MOCKDATA + es-translated activitiesSyncedContinuity"
        ],
        "properties": {
          "lastSynced": {
            "type": "es-translated object",
            "description": "MOCKDATA + es-translated map<string,CollectionLastSynced>",
            "additionalProperties": {
              "$ref": "es-translated #/components/schemas/CollectionLastSynced"
            }
          },
          "collectiblesSynced": {
            "type": "es-translated string"
          },
          "activitiesSynced": {
            "type": "es-translated string"
          },
          "activitiesSyncedContinuity": {
            "type": "es-translated string"
          }
        }
      },
      "CollectionLastSynced": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated allOrders",
          "es-translated newOrders"
        ],
        "properties": {
          "allOrders": {
            "type": "es-translated string"
          },
          "newOrders": {
            "type": "es-translated string"
          }
        }
      },
      "Project": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated id",
          "MOCKDATA + es-translated projectId",
          "es-translated collectionId",
          "es-translated chainId",
          "MOCKDATA + es-translated contractAddress",
          "es-translated status",
          "es-translated createdAt",
          "MOCKDATA + es-translated updatedAt"
        ],
        "properties": {
          "id": {
            "type": "MOCKDATA + es-translated number"
          },
          "projectId": {
            "type": "MOCKDATA + es-translated number"
          },
          "collectionId": {
            "type": "MOCKDATA + es-translated number"
          },
          "chainId": {
            "type": "MOCKDATA + es-translated number"
          },
          "contractAddress": {
            "type": "es-translated string"
          },
          "status": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/ProjectStatus"
          },
          "createdAt": {
            "type": "es-translated string"
          },
          "updatedAt": {
            "type": "es-translated string"
          },
          "deletedAt": {
            "type": "es-translated string"
          }
        }
      },
      "Collectible": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated id",
          "es-translated collectionId",
          "es-translated chainId",
          "MOCKDATA + es-translated contractAddress",
          "es-translated status",
          "MOCKDATA + es-translated tokenId",
          "MOCKDATA + es-translated decimals",
          "es-translated createdAt",
          "MOCKDATA + es-translated updatedAt"
        ],
        "properties": {
          "id": {
            "type": "MOCKDATA + es-translated number"
          },
          "collectionId": {
            "type": "MOCKDATA + es-translated number"
          },
          "chainId": {
            "type": "MOCKDATA + es-translated number"
          },
          "contractAddress": {
            "type": "es-translated string"
          },
          "status": {
            "$ref": "es-translated #/components/schemas/CollectibleStatus"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "decimals": {
            "type": "MOCKDATA + es-translated number"
          },
          "createdAt": {
            "type": "es-translated string"
          },
          "updatedAt": {
            "type": "es-translated string"
          },
          "deletedAt": {
            "type": "es-translated string"
          }
        }
      },
      "Currency": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated id",
          "es-translated chainId",
          "MOCKDATA + es-translated contractAddress",
          "es-translated status",
          "es-translated name",
          "es-translated symbol",
          "MOCKDATA + es-translated decimals",
          "MOCKDATA + es-translated imageUrl",
          "es-translated exchangeRate",
          "MOCKDATA + es-translated defaultChainCurrency",
          "es-translated nativeCurrency",
          "es-translated createdAt",
          "MOCKDATA + es-translated updatedAt",
          "MOCKDATA + es-translated refreshMetadataJob"
        ],
        "properties": {
          "id": {
            "type": "MOCKDATA + es-translated number"
          },
          "chainId": {
            "type": "MOCKDATA + es-translated number"
          },
          "contractAddress": {
            "type": "es-translated string"
          },
          "status": {
            "$ref": "es-translated #/components/schemas/CurrencyStatus"
          },
          "name": {
            "type": "es-translated string"
          },
          "symbol": {
            "type": "es-translated string"
          },
          "decimals": {
            "type": "MOCKDATA + es-translated number"
          },
          "imageUrl": {
            "type": "es-translated string"
          },
          "exchangeRate": {
            "type": "MOCKDATA + es-translated number"
          },
          "defaultChainCurrency": {
            "type": "es-translated boolean"
          },
          "nativeCurrency": {
            "type": "es-translated boolean"
          },
          "createdAt": {
            "type": "es-translated string"
          },
          "updatedAt": {
            "type": "es-translated string"
          },
          "deletedAt": {
            "type": "es-translated string"
          },
          "refreshMetadataJob": {
            "type": "MOCKDATA + es-translated number"
          }
        }
      },
      "OrderData": {
        "type": "es-translated object",
        "required": [
          "es-translated orderId",
          "MOCKDATA + es-translated quantity"
        ],
        "properties": {
          "orderId": {
            "type": "es-translated string"
          },
          "quantity": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          }
        }
      },
      "AdditionalFee": {
        "type": "es-translated object",
        "required": [
          "es-translated amount",
          "MOCKDATA + es-translated receiver"
        ],
        "properties": {
          "amount": {
            "type": "es-translated string"
          },
          "receiver": {
            "type": "es-translated string"
          }
        }
      },
      "Step": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated id",
          "es-translated data",
          "MOCKDATA + es-translated to",
          "es-translated value",
          "es-translated price"
        ],
        "properties": {
          "id": {
            "$ref": "es-translated #/components/schemas/StepType"
          },
          "data": {
            "type": "es-translated string"
          },
          "to": {
            "type": "es-translated string"
          },
          "value": {
            "type": "es-translated string"
          },
          "price": {
            "type": "es-translated string"
          },
          "signature": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/Signature"
          },
          "post": {
            "$ref": "es-translated #/components/schemas/PostRequest"
          },
          "executeType": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/ExecuteType"
          }
        }
      },
      "PostRequest": {
        "type": "es-translated object",
        "required": [
          "es-translated endpoint",
          "MOCKDATA + es-translated method",
          "es-translated body"
        ],
        "properties": {
          "endpoint": {
            "type": "es-translated string"
          },
          "method": {
            "type": "es-translated string"
          },
          "body": {
            "type": "es-translated object"
          }
        }
      },
      "CreateReq": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated tokenId",
          "MOCKDATA + es-translated quantity",
          "MOCKDATA + es-translated expiry",
          "MOCKDATA + es-translated currencyAddress",
          "es-translated pricePerToken"
        ],
        "properties": {
          "tokenId": {
            "type": "es-translated string"
          },
          "quantity": {
            "type": "es-translated string"
          },
          "expiry": {
            "type": "es-translated string"
          },
          "currencyAddress": {
            "type": "es-translated string"
          },
          "pricePerToken": {
            "type": "es-translated string"
          }
        }
      },
      "GetOrdersInput": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated contractAddress",
          "es-translated orderId",
          "es-translated marketplace"
        ],
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "orderId": {
            "type": "es-translated string"
          },
          "marketplace": {
            "$ref": "es-translated #/components/schemas/MarketplaceKind"
          }
        }
      },
      "Signature": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated domain",
          "es-translated types",
          "es-translated primaryType",
          "es-translated value"
        ],
        "properties": {
          "domain": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/Domain"
          },
          "types": {
            "type": "es-translated object"
          },
          "primaryType": {
            "type": "es-translated string"
          },
          "value": {
            "type": "es-translated object"
          }
        }
      },
      "Domain": {
        "type": "es-translated object",
        "required": [
          "es-translated name",
          "es-translated version",
          "es-translated chainId",
          "es-translated verifyingContract"
        ],
        "properties": {
          "name": {
            "type": "es-translated string"
          },
          "version": {
            "type": "es-translated string"
          },
          "chainId": {
            "type": "MOCKDATA + es-translated number"
          },
          "verifyingContract": {
            "type": "es-translated string"
          }
        }
      },
      "CheckoutOptionsMarketplaceOrder": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated contractAddress",
          "es-translated orderId",
          "es-translated marketplace"
        ],
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "orderId": {
            "type": "es-translated string"
          },
          "marketplace": {
            "$ref": "es-translated #/components/schemas/MarketplaceKind"
          }
        }
      },
      "CheckoutOptionsItem": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated tokenId",
          "MOCKDATA + es-translated quantity"
        ],
        "properties": {
          "tokenId": {
            "type": "es-translated string"
          },
          "quantity": {
            "type": "es-translated string"
          }
        }
      },
      "CheckoutOptions": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated crypto",
          "es-translated swap",
          "MOCKDATA + es-translated nftCheckout",
          "es-translated onRamp"
        ],
        "properties": {
          "crypto": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/TransactionCrypto"
          },
          "swap": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []TransactionSwapProvider",
            "items": {
              "$ref": "MOCKDATA + es-translated #/components/schemas/TransactionSwapProvider"
            }
          },
          "nftCheckout": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []TransactionNFTCheckoutProvider",
            "items": {
              "$ref": "MOCKDATA + es-translated #/components/schemas/TransactionNFTCheckoutProvider"
            }
          },
          "onRamp": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []TransactionOnRampProvider",
            "items": {
              "$ref": "MOCKDATA + es-translated #/components/schemas/TransactionOnRampProvider"
            }
          }
        }
      },
      "Activity": {
        "type": "es-translated object",
        "required": [
          "MOCKDATA + es-translated id",
          "es-translated collectionId",
          "MOCKDATA + es-translated collectibleId",
          "es-translated chainId",
          "MOCKDATA + es-translated contractAddress",
          "MOCKDATA + es-translated tokenId",
          "MOCKDATA + es-translated action",
          "MOCKDATA + es-translated txHash",
          "es-translated source",
          "es-translated from",
          "MOCKDATA + es-translated quantity",
          "MOCKDATA + es-translated quantityDecimals",
          "es-translated activityCreatedAt",
          "es-translated logIndex",
          "MOCKDATA + es-translated uniqueHash",
          "es-translated createdAt",
          "MOCKDATA + es-translated updatedAt"
        ],
        "properties": {
          "id": {
            "type": "MOCKDATA + es-translated number"
          },
          "collectionId": {
            "type": "MOCKDATA + es-translated number"
          },
          "collectibleId": {
            "type": "MOCKDATA + es-translated number"
          },
          "chainId": {
            "type": "MOCKDATA + es-translated number"
          },
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "action": {
            "$ref": "es-translated #/components/schemas/ActivityAction"
          },
          "txHash": {
            "type": "es-translated string"
          },
          "source": {
            "$ref": "es-translated #/components/schemas/SourceKind"
          },
          "from": {
            "type": "es-translated string"
          },
          "to": {
            "type": "es-translated string"
          },
          "quantity": {
            "type": "es-translated string"
          },
          "quantityDecimals": {
            "type": "MOCKDATA + es-translated number"
          },
          "priceAmount": {
            "type": "es-translated string"
          },
          "priceAmountFormatted": {
            "type": "es-translated string"
          },
          "priceCurrencyAddress": {
            "type": "es-translated string"
          },
          "priceDecimals": {
            "type": "MOCKDATA + es-translated number"
          },
          "activityCreatedAt": {
            "type": "es-translated string"
          },
          "logIndex": {
            "type": "MOCKDATA + es-translated number"
          },
          "uniqueHash": {
            "type": "es-translated string"
          },
          "createdAt": {
            "type": "es-translated string"
          },
          "updatedAt": {
            "type": "es-translated string"
          },
          "deletedAt": {
            "type": "es-translated string"
          }
        }
      },
      "Marketplace_ListCurrencies_Request": {
        "type": "es-translated object"
      },
      "Marketplace_GetCollectionDetail_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          }
        }
      },
      "Marketplace_GetCollectible_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          }
        }
      },
      "Marketplace_GetLowestPriceOfferForCollectible_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          }
        }
      },
      "Marketplace_GetHighestPriceOfferForCollectible_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          }
        }
      },
      "Marketplace_GetLowestPriceListingForCollectible_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          }
        }
      },
      "Marketplace_GetHighestPriceListingForCollectible_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          }
        }
      },
      "Marketplace_ListListingsForCollectible_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_ListOffersForCollectible_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_GetCountOfListingsForCollectible_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          }
        }
      },
      "Marketplace_GetCountOfOffersForCollectible_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          }
        }
      },
      "Marketplace_GetCollectibleLowestOffer_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          }
        }
      },
      "Marketplace_GetCollectibleHighestOffer_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          }
        }
      },
      "Marketplace_GetCollectibleLowestListing_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          }
        }
      },
      "Marketplace_GetCollectibleHighestListing_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          }
        }
      },
      "Marketplace_ListCollectibleListings_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_ListCollectibleOffers_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/OrderFilter"
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_GenerateBuyTransaction_Request": {
        "type": "es-translated object",
        "properties": {
          "collectionAddress": {
            "type": "es-translated string"
          },
          "buyer": {
            "type": "es-translated string"
          },
          "marketplace": {
            "$ref": "es-translated #/components/schemas/MarketplaceKind"
          },
          "ordersData": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []OrderData",
            "items": {
              "$ref": "es-translated #/components/schemas/OrderData"
            }
          },
          "additionalFees": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []AdditionalFee",
            "items": {
              "$ref": "es-translated #/components/schemas/AdditionalFee"
            }
          },
          "walletType": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/WalletKind"
          }
        }
      },
      "Marketplace_GenerateSellTransaction_Request": {
        "type": "es-translated object",
        "properties": {
          "collectionAddress": {
            "type": "es-translated string"
          },
          "seller": {
            "type": "es-translated string"
          },
          "marketplace": {
            "$ref": "es-translated #/components/schemas/MarketplaceKind"
          },
          "ordersData": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []OrderData",
            "items": {
              "$ref": "es-translated #/components/schemas/OrderData"
            }
          },
          "additionalFees": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []AdditionalFee",
            "items": {
              "$ref": "es-translated #/components/schemas/AdditionalFee"
            }
          },
          "walletType": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/WalletKind"
          }
        }
      },
      "Marketplace_GenerateListingTransaction_Request": {
        "type": "es-translated object",
        "properties": {
          "collectionAddress": {
            "type": "es-translated string"
          },
          "owner": {
            "type": "es-translated string"
          },
          "contractType": {
            "$ref": "es-translated #/components/schemas/ContractType"
          },
          "orderbook": {
            "$ref": "es-translated #/components/schemas/OrderbookKind"
          },
          "listing": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/CreateReq"
          },
          "walletType": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/WalletKind"
          }
        }
      },
      "Marketplace_GenerateOfferTransaction_Request": {
        "type": "es-translated object",
        "properties": {
          "collectionAddress": {
            "type": "es-translated string"
          },
          "maker": {
            "type": "es-translated string"
          },
          "contractType": {
            "$ref": "es-translated #/components/schemas/ContractType"
          },
          "orderbook": {
            "$ref": "es-translated #/components/schemas/OrderbookKind"
          },
          "offer": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/CreateReq"
          },
          "walletType": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/WalletKind"
          }
        }
      },
      "Marketplace_GenerateCancelTransaction_Request": {
        "type": "es-translated object",
        "properties": {
          "collectionAddress": {
            "type": "es-translated string"
          },
          "maker": {
            "type": "es-translated string"
          },
          "marketplace": {
            "$ref": "es-translated #/components/schemas/MarketplaceKind"
          },
          "orderId": {
            "type": "es-translated string"
          }
        }
      },
      "Marketplace_Execute_Request": {
        "type": "es-translated object",
        "properties": {
          "signature": {
            "type": "es-translated string"
          },
          "method": {
            "type": "es-translated string"
          },
          "endpoint": {
            "type": "es-translated string"
          },
          "executeType": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/ExecuteType"
          },
          "body": {
            "type": "es-translated object"
          }
        }
      },
      "Marketplace_ListCollectibles_Request": {
        "type": "es-translated object",
        "properties": {
          "side": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/OrderSide"
          },
          "contractAddress": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/CollectiblesFilter"
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_GetCountOfAllCollectibles_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          }
        }
      },
      "Marketplace_GetCountOfFilteredCollectibles_Request": {
        "type": "es-translated object",
        "properties": {
          "side": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/OrderSide"
          },
          "contractAddress": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/CollectiblesFilter"
          }
        }
      },
      "Marketplace_GetFloorOrder_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/CollectiblesFilter"
          }
        }
      },
      "Marketplace_ListCollectionActivities_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_ListCollectibleActivities_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "tokenId": {
            "type": "es-translated string"
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_ListCollectiblesWithLowestListing_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/CollectiblesFilter"
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_ListCollectiblesWithHighestOffer_Request": {
        "type": "es-translated object",
        "properties": {
          "contractAddress": {
            "type": "es-translated string"
          },
          "filter": {
            "$ref": "es-translated #/components/schemas/CollectiblesFilter"
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_GetOrders_Request": {
        "type": "es-translated object",
        "properties": {
          "input": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []GetOrdersInput",
            "items": {
              "$ref": "es-translated #/components/schemas/GetOrdersInput"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_CheckoutOptionsMarketplace_Request": {
        "type": "es-translated object",
        "properties": {
          "wallet": {
            "type": "es-translated string"
          },
          "orders": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []CheckoutOptionsMarketplaceOrder",
            "items": {
              "$ref": "es-translated #/components/schemas/CheckoutOptionsMarketplaceOrder"
            }
          },
          "additionalFee": {
            "type": "MOCKDATA + es-translated number"
          }
        }
      },
      "Marketplace_CheckoutOptionsSalesContract_Request": {
        "type": "es-translated object",
        "properties": {
          "wallet": {
            "type": "es-translated string"
          },
          "contractAddress": {
            "type": "es-translated string"
          },
          "collectionAddress": {
            "type": "es-translated string"
          },
          "items": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []CheckoutOptionsItem",
            "items": {
              "$ref": "es-translated #/components/schemas/CheckoutOptionsItem"
            }
          }
        }
      },
      "Marketplace_SupportedMarketplaces_Request": {
        "type": "es-translated object"
      },
      "Marketplace_ListCurrencies_Response": {
        "type": "es-translated object",
        "properties": {
          "currencies": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []Currency",
            "items": {
              "$ref": "MOCKDATA + es-translated #/components/schemas/Currency"
            }
          }
        }
      },
      "Marketplace_GetCollectionDetail_Response": {
        "type": "es-translated object",
        "properties": {
          "collection": {
            "$ref": "es-translated #/components/schemas/Collection"
          }
        }
      },
      "Marketplace_GetCollectible_Response": {
        "type": "es-translated object",
        "properties": {
          "metadata": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/TokenMetadata"
          }
        }
      },
      "Marketplace_GetLowestPriceOfferForCollectible_Response": {
        "type": "es-translated object",
        "properties": {
          "order": {
            "$ref": "es-translated #/components/schemas/Order"
          }
        }
      },
      "Marketplace_GetHighestPriceOfferForCollectible_Response": {
        "type": "es-translated object",
        "properties": {
          "order": {
            "$ref": "es-translated #/components/schemas/Order"
          }
        }
      },
      "Marketplace_GetLowestPriceListingForCollectible_Response": {
        "type": "es-translated object",
        "properties": {
          "order": {
            "$ref": "es-translated #/components/schemas/Order"
          }
        }
      },
      "Marketplace_GetHighestPriceListingForCollectible_Response": {
        "type": "es-translated object",
        "properties": {
          "order": {
            "$ref": "es-translated #/components/schemas/Order"
          }
        }
      },
      "Marketplace_ListListingsForCollectible_Response": {
        "type": "es-translated object",
        "properties": {
          "listings": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []Order",
            "items": {
              "$ref": "es-translated #/components/schemas/Order"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_ListOffersForCollectible_Response": {
        "type": "es-translated object",
        "properties": {
          "offers": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []Order",
            "items": {
              "$ref": "es-translated #/components/schemas/Order"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_GetCountOfListingsForCollectible_Response": {
        "type": "es-translated object",
        "properties": {
          "count": {
            "type": "MOCKDATA + es-translated number"
          }
        }
      },
      "Marketplace_GetCountOfOffersForCollectible_Response": {
        "type": "es-translated object",
        "properties": {
          "count": {
            "type": "MOCKDATA + es-translated number"
          }
        }
      },
      "Marketplace_GetCollectibleLowestOffer_Response": {
        "type": "es-translated object",
        "properties": {
          "order": {
            "$ref": "es-translated #/components/schemas/Order"
          }
        }
      },
      "Marketplace_GetCollectibleHighestOffer_Response": {
        "type": "es-translated object",
        "properties": {
          "order": {
            "$ref": "es-translated #/components/schemas/Order"
          }
        }
      },
      "Marketplace_GetCollectibleLowestListing_Response": {
        "type": "es-translated object",
        "properties": {
          "order": {
            "$ref": "es-translated #/components/schemas/Order"
          }
        }
      },
      "Marketplace_GetCollectibleHighestListing_Response": {
        "type": "es-translated object",
        "properties": {
          "order": {
            "$ref": "es-translated #/components/schemas/Order"
          }
        }
      },
      "Marketplace_ListCollectibleListings_Response": {
        "type": "es-translated object",
        "properties": {
          "listings": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []Order",
            "items": {
              "$ref": "es-translated #/components/schemas/Order"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_ListCollectibleOffers_Response": {
        "type": "es-translated object",
        "properties": {
          "offers": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []Order",
            "items": {
              "$ref": "es-translated #/components/schemas/Order"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_GenerateBuyTransaction_Response": {
        "type": "es-translated object",
        "properties": {
          "steps": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []Step",
            "items": {
              "$ref": "es-translated #/components/schemas/Step"
            }
          }
        }
      },
      "Marketplace_GenerateSellTransaction_Response": {
        "type": "es-translated object",
        "properties": {
          "steps": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []Step",
            "items": {
              "$ref": "es-translated #/components/schemas/Step"
            }
          }
        }
      },
      "Marketplace_GenerateListingTransaction_Response": {
        "type": "es-translated object",
        "properties": {
          "steps": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []Step",
            "items": {
              "$ref": "es-translated #/components/schemas/Step"
            }
          }
        }
      },
      "Marketplace_GenerateOfferTransaction_Response": {
        "type": "es-translated object",
        "properties": {
          "steps": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []Step",
            "items": {
              "$ref": "es-translated #/components/schemas/Step"
            }
          }
        }
      },
      "Marketplace_GenerateCancelTransaction_Response": {
        "type": "es-translated object",
        "properties": {
          "steps": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []Step",
            "items": {
              "$ref": "es-translated #/components/schemas/Step"
            }
          }
        }
      },
      "Marketplace_Execute_Response": {
        "type": "es-translated object",
        "properties": {
          "orderId": {
            "type": "es-translated string"
          }
        }
      },
      "Marketplace_ListCollectibles_Response": {
        "type": "es-translated object",
        "properties": {
          "collectibles": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []CollectibleOrder",
            "items": {
              "$ref": "es-translated #/components/schemas/CollectibleOrder"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_GetCountOfAllCollectibles_Response": {
        "type": "es-translated object",
        "properties": {
          "count": {
            "type": "MOCKDATA + es-translated number"
          }
        }
      },
      "Marketplace_GetCountOfFilteredCollectibles_Response": {
        "type": "es-translated object",
        "properties": {
          "count": {
            "type": "MOCKDATA + es-translated number"
          }
        }
      },
      "Marketplace_GetFloorOrder_Response": {
        "type": "es-translated object",
        "properties": {
          "collectible": {
            "$ref": "es-translated #/components/schemas/CollectibleOrder"
          }
        }
      },
      "Marketplace_ListCollectionActivities_Response": {
        "type": "es-translated object",
        "properties": {
          "activities": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []Activity",
            "items": {
              "$ref": "es-translated #/components/schemas/Activity"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_ListCollectibleActivities_Response": {
        "type": "es-translated object",
        "properties": {
          "activities": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []Activity",
            "items": {
              "$ref": "es-translated #/components/schemas/Activity"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_ListCollectiblesWithLowestListing_Response": {
        "type": "es-translated object",
        "properties": {
          "collectibles": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []CollectibleOrder",
            "items": {
              "$ref": "es-translated #/components/schemas/CollectibleOrder"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_ListCollectiblesWithHighestOffer_Response": {
        "type": "es-translated object",
        "properties": {
          "collectibles": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []CollectibleOrder",
            "items": {
              "$ref": "es-translated #/components/schemas/CollectibleOrder"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_GetOrders_Response": {
        "type": "es-translated object",
        "properties": {
          "orders": {
            "type": "MOCKDATA + es-translated array",
            "description": "es-translated []Order",
            "items": {
              "$ref": "es-translated #/components/schemas/Order"
            }
          },
          "page": {
            "$ref": "es-translated #/components/schemas/Page"
          }
        }
      },
      "Marketplace_CheckoutOptionsMarketplace_Response": {
        "type": "es-translated object",
        "properties": {
          "options": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/CheckoutOptions"
          }
        }
      },
      "Marketplace_CheckoutOptionsSalesContract_Response": {
        "type": "es-translated object",
        "properties": {
          "options": {
            "$ref": "MOCKDATA + es-translated #/components/schemas/CheckoutOptions"
          }
        }
      },
      "Marketplace_SupportedMarketplaces_Response": {
        "type": "es-translated object",
        "properties": {
          "marketplaces": {
            "type": "MOCKDATA + es-translated array",
            "description": "MOCKDATA + es-translated []MarketplaceKind",
            "items": {
              "$ref": "es-translated #/components/schemas/MarketplaceKind"
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "es-translated Marketplace Api",
    "version": "MOCKDATA + es-translated "
  },
  "openapi": "MOCKDATA + es-translated 3.0.0",
  "paths": {
    "/rpc/Marketplace/ListCurrencies": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_ListCurrencies_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_ListCurrencies_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetCollectionDetail": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GetCollectionDetail_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetCollectionDetail_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetCollectible": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GetCollectible_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetCollectible_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetLowestPriceOfferForCollectible": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetLowestPriceOfferForCollectible_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_GetLowestPriceOfferForCollectible_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetHighestPriceOfferForCollectible": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GetHighestPriceOfferForCollectible_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetHighestPriceOfferForCollectible_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetLowestPriceListingForCollectible": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetLowestPriceListingForCollectible_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_GetLowestPriceListingForCollectible_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetHighestPriceListingForCollectible": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GetHighestPriceListingForCollectible_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetHighestPriceListingForCollectible_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/ListListingsForCollectible": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_ListListingsForCollectible_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_ListListingsForCollectible_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/ListOffersForCollectible": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_ListOffersForCollectible_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_ListOffersForCollectible_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetCountOfListingsForCollectible": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GetCountOfListingsForCollectible_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetCountOfListingsForCollectible_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetCountOfOffersForCollectible": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GetCountOfOffersForCollectible_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetCountOfOffersForCollectible_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetCollectibleLowestOffer": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "es-translated Deprecated: Please use GetLowestPriceOfferForCollectible instead.",
        "deprecated": "es-translated true",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetCollectibleLowestOffer_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_GetCollectibleLowestOffer_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetCollectibleHighestOffer": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated Deprecated: Please use GetHighestPriceOfferForCollectible instead.",
        "deprecated": "es-translated true",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetCollectibleHighestOffer_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_GetCollectibleHighestOffer_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetCollectibleLowestListing": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "es-translated Deprecated: Please use GetLowestPriceListingForCollectible instead.",
        "deprecated": "es-translated true",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetCollectibleLowestListing_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_GetCollectibleLowestListing_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetCollectibleHighestListing": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated Deprecated: Please use GetHighestPriceListingForCollectible instead.",
        "deprecated": "es-translated true",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetCollectibleHighestListing_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_GetCollectibleHighestListing_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/ListCollectibleListings": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "es-translated Deprecated: Please use ListListingsForCollectible instead.",
        "deprecated": "es-translated true",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_ListCollectibleListings_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_ListCollectibleListings_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/ListCollectibleOffers": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated Deprecated: Please use ListOffersForCollectible instead.",
        "deprecated": "es-translated true",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_ListCollectibleOffers_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_ListCollectibleOffers_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GenerateBuyTransaction": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "es-translated checkout process",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GenerateBuyTransaction_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_GenerateBuyTransaction_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GenerateSellTransaction": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GenerateSellTransaction_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GenerateSellTransaction_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GenerateListingTransaction": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GenerateListingTransaction_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_GenerateListingTransaction_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GenerateOfferTransaction": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GenerateOfferTransaction_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GenerateOfferTransaction_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GenerateCancelTransaction": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GenerateCancelTransaction_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GenerateCancelTransaction_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/ListCollectibles": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "es-translated list of collectibles with best order for each collectible, by default this only returns collectibles with an order",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_ListCollectibles_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_ListCollectibles_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetCountOfAllCollectibles": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GetCountOfAllCollectibles_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetCountOfAllCollectibles_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetCountOfFilteredCollectibles": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetCountOfFilteredCollectibles_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_GetCountOfFilteredCollectibles_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetFloorOrder": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_GetFloorOrder_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetFloorOrder_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/ListCollectionActivities": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_ListCollectionActivities_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_ListCollectionActivities_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/ListCollectibleActivities": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_ListCollectibleActivities_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_ListCollectibleActivities_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/ListCollectiblesWithLowestListing": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_ListCollectiblesWithLowestListing_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_ListCollectiblesWithLowestListing_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/ListCollectiblesWithHighestOffer": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_ListCollectiblesWithHighestOffer_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_ListCollectiblesWithHighestOffer_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/GetOrders": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_GetOrders_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_GetOrders_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/CheckoutOptionsMarketplace": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "es-translated #/components/schemas/Marketplace_CheckoutOptionsMarketplace_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_CheckoutOptionsMarketplace_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/CheckoutOptionsSalesContract": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_CheckoutOptionsSalesContract_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_CheckoutOptionsSalesContract_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rpc/Marketplace/SupportedMarketplaces": {
      "post": {
        "tags": [
          "MOCKDATA + es-translated Marketplace"
        ],
        "summary": "MOCKDATA + es-translated ",
        "security": [
          {
            "ApiKeyAuth": [
              "es-translated AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "MOCKDATA + es-translated #/components/schemas/Marketplace_SupportedMarketplaces_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "es-translated OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "es-translated #/components/schemas/Marketplace_SupportedMarketplaces_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "MOCKDATA + es-translated Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorUserNotFound"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorInvalidTier"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorProjectLimitReached"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "MOCKDATA + es-translated Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "MOCKDATA + es-translated #/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "es-translated #/components/schemas/ErrorNotImplemented"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "servers": [
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/amoy/",
      "description": "es-translated Amoy"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/apechain-mainnet/",
      "description": "es-translated Apechain Mainnet"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/apechain-testnet/",
      "description": "es-translated Apechain Testnet"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/arbitrum/",
      "description": "es-translated Arbitrum"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/arbitrum-nova/",
      "description": "MOCKDATA + es-translated Arbitrum Nova"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/arbitrum-sepolia/",
      "description": "MOCKDATA + es-translated Arbitrum Sepolia"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/astar-zkevm/",
      "description": "MOCKDATA + es-translated Astar zkEVM"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/astar-zkyoto/",
      "description": "MOCKDATA + es-translated Astar zKyoto"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/avalanche/",
      "description": "MOCKDATA + es-translated Avalanche"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/avalanche-testnet/",
      "description": "es-translated Avalanche Testnet"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/b3/",
      "description": "es-translated B3"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/b3-sepolia/",
      "description": "es-translated B3 Sepolia"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/base/",
      "description": "es-translated Base"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/base-sepolia/",
      "description": "MOCKDATA + es-translated Base Sepolia"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/blast/",
      "description": "MOCKDATA + es-translated Blast"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/blast-sepolia/",
      "description": "es-translated Blast Sepolia"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/borne-testnet/",
      "description": "es-translated Borne Testnet"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/bsc/",
      "description": "MOCKDATA + es-translated BSC"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/bsc-testnet/",
      "description": "MOCKDATA + es-translated BSC Testnet"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/gnosis/",
      "description": "MOCKDATA + es-translated Gnosis"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/homeverse/",
      "description": "MOCKDATA + es-translated Homeverse"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/homeverse-testnet/",
      "description": "MOCKDATA + es-translated Homeverse Testnet"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/immutable-zkevm/",
      "description": "MOCKDATA + es-translated Immutable zkEVM"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/immutable-zkevm-testnet/",
      "description": "MOCKDATA + es-translated Immutable zkEVM Testnet"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/imx/",
      "description": "MOCKDATA + es-translated IMX"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/imx-testnet/",
      "description": "MOCKDATA + es-translated IMX Testnet"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/mainnet/",
      "description": "MOCKDATA + es-translated Mainnet"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/optimism/",
      "description": "es-translated Optimism"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/optimism-sepolia/",
      "description": "es-translated Optimism Sepolia"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/polygon/",
      "description": "MOCKDATA + es-translated Polygon"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/polygon-zkevm/",
      "description": "MOCKDATA + es-translated Polygon zkEVM"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/rootnet/",
      "description": "MOCKDATA + es-translated Rootnet"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/rootnet-porcini/",
      "description": "MOCKDATA + es-translated Rootnet Porcini"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/sepolia/",
      "description": "MOCKDATA + es-translated Sepolia"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/skale-nebula-testnet/",
      "description": "MOCKDATA + es-translated SKALE Nebula Testnet"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/soneium-minato/",
      "description": "MOCKDATA + es-translated Soneium Minato"
    },
    {
      "url": "es-translated https://marketplace-api.sequence.app/toy-testnet/",
      "description": "MOCKDATA + es-translated Toy Testnet"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/xai/",
      "description": "es-translated Xai"
    },
    {
      "url": "MOCKDATA + es-translated https://marketplace-api.sequence.app/xai-sepolia/",
      "description": "es-translated Xai Sepolia"
    }
  ]
}
