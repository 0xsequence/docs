{
  "components": {
    "schemas": {
      "ErrorWebrpcEndpoint": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcEndpoint"
          },
          "code": {
            "type": "number",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": "endpoint error"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcRequestFailed": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcRequestFailed"
          },
          "code": {
            "type": "number",
            "example": -1
          },
          "msg": {
            "type": "string",
            "example": "request failed"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcBadRoute": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadRoute"
          },
          "code": {
            "type": "number",
            "example": -2
          },
          "msg": {
            "type": "string",
            "example": "bad route"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 404
          }
        }
      },
      "ErrorWebrpcBadMethod": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadMethod"
          },
          "code": {
            "type": "number",
            "example": -3
          },
          "msg": {
            "type": "string",
            "example": "bad method"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 405
          }
        }
      },
      "ErrorWebrpcBadRequest": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadRequest"
          },
          "code": {
            "type": "number",
            "example": -4
          },
          "msg": {
            "type": "string",
            "example": "bad request"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcBadResponse": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadResponse"
          },
          "code": {
            "type": "number",
            "example": -5
          },
          "msg": {
            "type": "string",
            "example": "bad response"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcServerPanic": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcServerPanic"
          },
          "code": {
            "type": "number",
            "example": -6
          },
          "msg": {
            "type": "string",
            "example": "server panic"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcInternalError": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcInternalError"
          },
          "code": {
            "type": "number",
            "example": -7
          },
          "msg": {
            "type": "string",
            "example": "internal error"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcClientDisconnected": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcClientDisconnected"
          },
          "code": {
            "type": "number",
            "example": -8
          },
          "msg": {
            "type": "string",
            "example": "client disconnected"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcStreamLost": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcStreamLost"
          },
          "code": {
            "type": "number",
            "example": -9
          },
          "msg": {
            "type": "string",
            "example": "stream lost"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcStreamFinished": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcStreamFinished"
          },
          "code": {
            "type": "number",
            "example": -10
          },
          "msg": {
            "type": "string",
            "example": "stream finished"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 200
          }
        }
      },
      "ErrorUnauthorized": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Unauthorized"
          },
          "code": {
            "type": "number",
            "example": 1000
          },
          "msg": {
            "type": "string",
            "example": "Unauthorized access"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 401
          }
        }
      },
      "ErrorPermissionDenied": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "PermissionDenied"
          },
          "code": {
            "type": "number",
            "example": 1001
          },
          "msg": {
            "type": "string",
            "example": "Permission denied"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 403
          }
        }
      },
      "ErrorSessionExpired": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "SessionExpired"
          },
          "code": {
            "type": "number",
            "example": 1002
          },
          "msg": {
            "type": "string",
            "example": "Session expired"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 403
          }
        }
      },
      "ErrorMethodNotFound": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "MethodNotFound"
          },
          "code": {
            "type": "number",
            "example": 1003
          },
          "msg": {
            "type": "string",
            "example": "Method not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 404
          }
        }
      },
      "ErrorRequestConflict": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "RequestConflict"
          },
          "code": {
            "type": "number",
            "example": 1004
          },
          "msg": {
            "type": "string",
            "example": "Conflict with target resource"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 409
          }
        }
      },
      "ErrorAborted": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Aborted"
          },
          "code": {
            "type": "number",
            "example": 1005
          },
          "msg": {
            "type": "string",
            "example": "Request aborted"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorTimeout": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Timeout"
          },
          "code": {
            "type": "number",
            "example": 2000
          },
          "msg": {
            "type": "string",
            "example": "Request timed out"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 408
          }
        }
      },
      "ErrorInvalidArgument": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "InvalidArgument"
          },
          "code": {
            "type": "number",
            "example": 2001
          },
          "msg": {
            "type": "string",
            "example": "Invalid argument"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorUnavailable": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Unavailable"
          },
          "code": {
            "type": "number",
            "example": 2002
          },
          "msg": {
            "type": "string",
            "example": "Unavailable resource"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorQueryFailed": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "QueryFailed"
          },
          "code": {
            "type": "number",
            "example": 2003
          },
          "msg": {
            "type": "string",
            "example": "Query failed"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorResourceExhausted": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "ResourceExhausted"
          },
          "code": {
            "type": "number",
            "example": 2004
          },
          "msg": {
            "type": "string",
            "example": "Resource exhausted"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorNotFound": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "NotFound"
          },
          "code": {
            "type": "number",
            "example": 3000
          },
          "msg": {
            "type": "string",
            "example": "Resource not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorProjectNotFound": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "ProjectNotFound"
          },
          "code": {
            "type": "number",
            "example": 3002
          },
          "msg": {
            "type": "string",
            "example": "Project not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorMetadataCallFailed": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "MetadataCallFailed"
          },
          "code": {
            "type": "number",
            "example": 3003
          },
          "msg": {
            "type": "string",
            "example": "Metadata service call failed"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ContractInfo": {
        "type": "object",
        "required": [
          "chainId",
          "address",
          "name",
          "type",
          "symbol",
          "logoURI",
          "deployed",
          "bytecodeHash",
          "extensions",
          "contentHash",
          "updatedAt"
        ],
        "properties": {
          "chainId": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "decimals": {
            "type": "number"
          },
          "logoURI": {
            "type": "string"
          },
          "deployed": {
            "type": "boolean"
          },
          "bytecodeHash": {
            "type": "string"
          },
          "extensions": {
            "$ref": "#/components/schemas/ContractInfoExtensions"
          },
          "contentHash": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ContractInfoExtensions": {
        "type": "object",
        "required": [
          "link",
          "description",
          "ogImage",
          "originChainId",
          "originAddress",
          "blacklist",
          "verified",
          "verifiedBy",
          "featured"
        ],
        "properties": {
          "link": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "ogImage": {
            "type": "string"
          },
          "originChainId": {
            "type": "number"
          },
          "originAddress": {
            "type": "string"
          },
          "blacklist": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          },
          "verifiedBy": {
            "type": "string"
          },
          "featured": {
            "type": "boolean"
          }
        }
      },
      "TokenMetadata": {
        "type": "object",
        "required": [
          "tokenId",
          "name",
          "attributes"
        ],
        "properties": {
          "tokenId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "video": {
            "type": "string"
          },
          "audio": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "attributes": {
            "type": "array",
            "description": "[]map<string,any>",
            "items": {
              "type": "object",
              "description": "map<string,any>",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "imageData": {
            "type": "string"
          },
          "externalUrl": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "animationUrl": {
            "type": "string"
          },
          "decimals": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "description": "[]Asset",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          }
        }
      },
      "Asset": {
        "type": "object",
        "required": [
          "id",
          "collectionId",
          "metadataField"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          },
          "tokenId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "metadataField": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "filesize": {
            "type": "number"
          },
          "mimeType": {
            "type": "string"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ContractType": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "UNKNOWN",
          "NATIVE",
          "ERC20",
          "ERC721",
          "ERC1155",
          "SEQUENCE_WALLET",
          "ERC20_BRIDGE",
          "ERC721_BRIDGE",
          "ERC1155_BRIDGE",
          "SEQ_MARKETPLACE"
        ]
      },
      "EventLogType": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "UNKNOWN",
          "BLOCK_ADDED",
          "BLOCK_REMOVED"
        ]
      },
      "EventLogDataType": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "EVENT",
          "TOKEN_TRANSFER",
          "NATIVE_TOKEN_TRANSFER",
          "SEQUENCE_TXN"
        ]
      },
      "OrderStatus": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "OPEN",
          "CLOSED",
          "CANCELLED"
        ]
      },
      "TxnTransferType": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "UNKNOWN",
          "SEND",
          "RECEIVE"
        ]
      },
      "TransactionStatus": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "FAILED",
          "SUCCESSFUL"
        ]
      },
      "TransactionType": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "LegacyTxnType",
          "AccessListTxnType",
          "DynamicFeeTxnType"
        ]
      },
      "SortOrder": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "DESC",
          "ASC"
        ]
      },
      "ContractVerificationStatus": {
        "type": "string",
        "description": "Represented as string on the server side",
        "enum": [
          "VERIFIED",
          "UNVERIFIED",
          "ALL"
        ]
      },
      "Version": {
        "type": "object",
        "required": [
          "webrpcVersion",
          "schemaVersion",
          "schemaHash",
          "appVersion"
        ],
        "properties": {
          "webrpcVersion": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "string"
          },
          "schemaHash": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          }
        }
      },
      "RuntimeStatus": {
        "type": "object",
        "required": [
          "healthOK",
          "indexerEnabled",
          "startTime",
          "uptime",
          "ver",
          "branch",
          "commitHash",
          "chainID",
          "checks"
        ],
        "properties": {
          "healthOK": {
            "type": "boolean"
          },
          "indexerEnabled": {
            "type": "boolean"
          },
          "startTime": {
            "type": "string"
          },
          "uptime": {
            "type": "number"
          },
          "ver": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "commitHash": {
            "type": "string"
          },
          "chainID": {
            "type": "number"
          },
          "checks": {
            "$ref": "#/components/schemas/RuntimeChecks"
          }
        }
      },
      "WALWriterRuntimeStatus": {
        "type": "object",
        "required": [
          "healthOK",
          "startTime",
          "uptime",
          "ver",
          "branch",
          "commitHash",
          "chainID",
          "percentWALWritten"
        ],
        "properties": {
          "healthOK": {
            "type": "boolean"
          },
          "startTime": {
            "type": "string"
          },
          "uptime": {
            "type": "number"
          },
          "ver": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "commitHash": {
            "type": "string"
          },
          "chainID": {
            "type": "number"
          },
          "percentWALWritten": {
            "type": "number"
          }
        }
      },
      "RuntimeChecks": {
        "type": "object",
        "required": [
          "running",
          "runnables",
          "cgoEnabled",
          "quotaControlEnabled",
          "syncMode",
          "percentIndexed",
          "lastBlockNum",
          "lastBlockNumWithState",
          "bloomStatus",
          "bond",
          "diskUsage"
        ],
        "properties": {
          "running": {
            "type": "boolean"
          },
          "runnables": {
            "type": "object"
          },
          "cgoEnabled": {
            "type": "boolean"
          },
          "quotaControlEnabled": {
            "type": "boolean"
          },
          "syncMode": {
            "type": "string"
          },
          "percentIndexed": {
            "type": "number"
          },
          "lastBlockNum": {
            "type": "number"
          },
          "lastBlockNumWithState": {
            "type": "number"
          },
          "bloomStatus": {
            "$ref": "#/components/schemas/BloomStatus"
          },
          "bond": {
            "$ref": "#/components/schemas/Bond"
          },
          "diskUsage": {
            "$ref": "#/components/schemas/DiskUsage"
          }
        }
      },
      "DiskUsage": {
        "type": "object",
        "required": [
          "humanReadable",
          "used",
          "size",
          "percent",
          "dirs"
        ],
        "properties": {
          "humanReadable": {
            "type": "string"
          },
          "used": {
            "type": "number"
          },
          "size": {
            "type": "number"
          },
          "percent": {
            "type": "number"
          },
          "dirs": {
            "type": "object",
            "description": "map<string,string>",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Bond": {
        "type": "object",
        "required": [
          "pebble",
          "estimatedDiskUsagePerTable",
          "estimatedDiskUsageTotal"
        ],
        "properties": {
          "pebble": {
            "$ref": "#/components/schemas/PebbleMetrics"
          },
          "estimatedDiskUsagePerTable": {
            "type": "object"
          },
          "estimatedDiskUsageTotal": {
            "type": "string"
          }
        }
      },
      "PebbleMetrics": {
        "type": "object",
        "required": [
          "compactionCount",
          "compactionEstimatedDebt",
          "compactionInProgressBytes",
          "compactionNumInProgress",
          "compactionMarkedFiles"
        ],
        "properties": {
          "compactionCount": {
            "type": "number"
          },
          "compactionEstimatedDebt": {
            "type": "number"
          },
          "compactionInProgressBytes": {
            "type": "number"
          },
          "compactionNumInProgress": {
            "type": "number"
          },
          "compactionMarkedFiles": {
            "type": "number"
          }
        }
      },
      "BloomStatus": {
        "type": "object",
        "required": [
          "enabled",
          "initialized",
          "bloomInitElapsedTime"
        ],
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "initialized": {
            "type": "boolean"
          },
          "bloomInitElapsedTime": {
            "type": "string"
          }
        }
      },
      "EtherBalance": {
        "type": "object",
        "required": [
          "accountAddress",
          "balanceWei"
        ],
        "properties": {
          "accountAddress": {
            "type": "string"
          },
          "balanceWei": {
            "type": "string"
          }
        }
      },
      "NativeTokenBalance": {
        "type": "object",
        "required": [
          "accountAddress",
          "balance"
        ],
        "properties": {
          "accountAddress": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          }
        }
      },
      "IndexState": {
        "type": "object",
        "required": [
          "chainId",
          "lastBlockNum",
          "lastBlockHash"
        ],
        "properties": {
          "chainId": {
            "type": "string"
          },
          "lastBlockNum": {
            "type": "number"
          },
          "lastBlockHash": {
            "type": "string"
          }
        }
      },
      "IndexedBlock": {
        "type": "object",
        "required": [
          "blockNumber",
          "blockShortHash"
        ],
        "properties": {
          "blockNumber": {
            "type": "number"
          },
          "blockShortHash": {
            "type": "string"
          }
        }
      },
      "TxnInfo": {
        "type": "object",
        "required": [
          "from",
          "to",
          "value"
        ],
        "properties": {
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "EventLog": {
        "type": "object",
        "required": [
          "id",
          "uid",
          "type",
          "blockNumber",
          "blockHash",
          "parentBlockHash",
          "contractAddress",
          "contractType",
          "txnHash",
          "txnIndex",
          "txnLogIndex",
          "logDataType",
          "ts"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "uid": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EventLogType"
          },
          "blockNumber": {
            "type": "number"
          },
          "blockHash": {
            "type": "string"
          },
          "parentBlockHash": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "contractType": {
            "$ref": "#/components/schemas/ContractType"
          },
          "txnHash": {
            "type": "string"
          },
          "txnIndex": {
            "type": "number"
          },
          "txnLogIndex": {
            "type": "number"
          },
          "logDataType": {
            "$ref": "#/components/schemas/EventLogDataType"
          },
          "ts": {
            "type": "string"
          },
          "txnInfo": {
            "$ref": "#/components/schemas/TxnInfo"
          },
          "rawLog": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "event": {
            "$ref": "#/components/schemas/EventDecoded"
          }
        }
      },
      "EventDecoded": {
        "type": "object",
        "required": [
          "topicHash",
          "eventSig",
          "types",
          "names",
          "values"
        ],
        "properties": {
          "topicHash": {
            "type": "string"
          },
          "eventSig": {
            "type": "string"
          },
          "types": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "names": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "values": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TokenBalance": {
        "type": "object",
        "required": [
          "contractType",
          "contractAddress",
          "accountAddress",
          "balance",
          "blockHash",
          "blockNumber",
          "chainId",
          "uniqueCollectibles",
          "isSummary"
        ],
        "properties": {
          "contractType": {
            "$ref": "#/components/schemas/ContractType"
          },
          "contractAddress": {
            "type": "string"
          },
          "accountAddress": {
            "type": "string"
          },
          "tokenID": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          },
          "blockHash": {
            "type": "string"
          },
          "blockNumber": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "uniqueCollectibles": {
            "type": "string"
          },
          "isSummary": {
            "type": "boolean"
          },
          "contractInfo": {
            "$ref": "#/components/schemas/ContractInfo"
          },
          "tokenMetadata": {
            "$ref": "#/components/schemas/TokenMetadata"
          }
        }
      },
      "OrderbookOrder": {
        "type": "object",
        "required": [
          "orderId",
          "tokenContract",
          "tokenId",
          "isListing",
          "quantity",
          "quantityRemaining",
          "currencyAddress",
          "pricePerToken",
          "expiry",
          "orderStatus",
          "createdBy",
          "blockNumber",
          "orderbookContractAddress",
          "createdAt"
        ],
        "properties": {
          "orderId": {
            "type": "string"
          },
          "tokenContract": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          },
          "isListing": {
            "type": "boolean"
          },
          "quantity": {
            "type": "string"
          },
          "quantityRemaining": {
            "type": "string"
          },
          "currencyAddress": {
            "type": "string"
          },
          "pricePerToken": {
            "type": "string"
          },
          "expiry": {
            "type": "string"
          },
          "orderStatus": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "createdBy": {
            "type": "string"
          },
          "blockNumber": {
            "type": "number"
          },
          "orderbookContractAddress": {
            "type": "string"
          },
          "createdAt": {
            "type": "number"
          }
        }
      },
      "OrderbookOrderFilter": {
        "type": "object",
        "required": [
          "tokenIds",
          "afterBlockNumber",
          "afterCreatedAt",
          "beforeExpiry"
        ],
        "properties": {
          "isListing": {
            "type": "boolean"
          },
          "userAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "tokenIds": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "excludeUserAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "afterBlockNumber": {
            "type": "number"
          },
          "afterCreatedAt": {
            "type": "number"
          },
          "beforeExpiry": {
            "type": "number"
          },
          "userAddress": {
            "type": "string"
          },
          "excludeUserAddress": {
            "type": "string"
          }
        }
      },
      "TokenHistory": {
        "type": "object",
        "required": [
          "blockNumber",
          "blockHash",
          "accountAddress",
          "contractAddress",
          "contractType",
          "fromAddress",
          "toAddress",
          "txnHash",
          "txnIndex",
          "txnLogIndex",
          "logData",
          "tokenIDs",
          "Amounts",
          "ts"
        ],
        "properties": {
          "blockNumber": {
            "type": "number"
          },
          "blockHash": {
            "type": "string"
          },
          "accountAddress": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "contractType": {
            "$ref": "#/components/schemas/ContractType"
          },
          "fromAddress": {
            "type": "string"
          },
          "toAddress": {
            "type": "string"
          },
          "txnHash": {
            "type": "string"
          },
          "txnIndex": {
            "type": "number"
          },
          "txnLogIndex": {
            "type": "number"
          },
          "logData": {
            "type": "string"
          },
          "tokenIDs": {
            "type": "string"
          },
          "Amounts": {
            "type": "string"
          },
          "ts": {
            "type": "string"
          }
        }
      },
      "TokenSupply": {
        "type": "object",
        "required": [
          "tokenID",
          "supply",
          "chainId"
        ],
        "properties": {
          "tokenID": {
            "type": "string"
          },
          "supply": {
            "type": "string"
          },
          "chainId": {
            "type": "number"
          },
          "contractInfo": {
            "$ref": "#/components/schemas/ContractInfo"
          },
          "tokenMetadata": {
            "$ref": "#/components/schemas/TokenMetadata"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "required": [
          "txnHash",
          "blockNumber",
          "blockHash",
          "chainId",
          "timestamp"
        ],
        "properties": {
          "txnHash": {
            "type": "string"
          },
          "blockNumber": {
            "type": "number"
          },
          "blockHash": {
            "type": "string"
          },
          "chainId": {
            "type": "number"
          },
          "metaTxnID": {
            "type": "string"
          },
          "transfers": {
            "type": "array",
            "description": "[]TxnTransfer",
            "items": {
              "$ref": "#/components/schemas/TxnTransfer"
            }
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "TxnTransfer": {
        "type": "object",
        "required": [
          "transferType",
          "contractAddress",
          "contractType",
          "from",
          "to",
          "amounts",
          "logIndex"
        ],
        "properties": {
          "transferType": {
            "$ref": "#/components/schemas/TxnTransferType"
          },
          "contractAddress": {
            "type": "string"
          },
          "contractType": {
            "$ref": "#/components/schemas/ContractType"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "tokenIds": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "amounts": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "logIndex": {
            "type": "number"
          },
          "contractInfo": {
            "$ref": "#/components/schemas/ContractInfo"
          },
          "tokenMetadata": {
            "type": "object",
            "description": "map<string,TokenMetadata>",
            "additionalProperties": {
              "$ref": "#/components/schemas/TokenMetadata"
            }
          }
        }
      },
      "TransactionHistoryFilter": {
        "type": "object",
        "properties": {
          "accountAddress": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "accountAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "contractAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "transactionHashes": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "metaTransactionIDs": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "fromBlock": {
            "type": "number"
          },
          "toBlock": {
            "type": "number"
          },
          "tokenID": {
            "type": "string"
          }
        }
      },
      "TransactionFilter": {
        "type": "object",
        "properties": {
          "txnHash": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "event": {
            "type": "string"
          }
        }
      },
      "TransactionReceipt": {
        "type": "object",
        "required": [
          "txnHash",
          "txnStatus",
          "txnIndex",
          "txnType",
          "blockHash",
          "blockNumber",
          "gasUsed",
          "effectiveGasPrice",
          "from",
          "to",
          "logs",
          "final",
          "reorged"
        ],
        "properties": {
          "txnHash": {
            "type": "string"
          },
          "txnStatus": {
            "$ref": "#/components/schemas/TransactionStatus"
          },
          "txnIndex": {
            "type": "number"
          },
          "txnType": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "blockHash": {
            "type": "string"
          },
          "blockNumber": {
            "type": "number"
          },
          "gasUsed": {
            "type": "number"
          },
          "effectiveGasPrice": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "logs": {
            "type": "array",
            "description": "[]TransactionLog",
            "items": {
              "$ref": "#/components/schemas/TransactionLog"
            }
          },
          "final": {
            "type": "boolean"
          },
          "reorged": {
            "type": "boolean"
          }
        }
      },
      "TransactionLog": {
        "type": "object",
        "required": [
          "contractAddress",
          "topics",
          "data",
          "index"
        ],
        "properties": {
          "contractAddress": {
            "type": "string"
          },
          "topics": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "string"
          },
          "index": {
            "type": "number"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "column": {
            "type": "string"
          },
          "before": {
            "type": "object"
          },
          "after": {
            "type": "object"
          },
          "sort": {
            "type": "array",
            "description": "[]SortBy",
            "items": {
              "$ref": "#/components/schemas/SortBy"
            }
          },
          "pageSize": {
            "type": "number"
          },
          "more": {
            "type": "boolean"
          }
        }
      },
      "SortBy": {
        "type": "object",
        "required": [
          "column",
          "order"
        ],
        "properties": {
          "column": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "WebhookListener": {
        "type": "object",
        "required": [
          "id",
          "projectID",
          "url",
          "filters",
          "name",
          "updatedAt",
          "active"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectID": {
            "type": "number"
          },
          "url": {
            "type": "string"
          },
          "filters": {
            "$ref": "#/components/schemas/EventFilter"
          },
          "name": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "EventFilter": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "contractAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "accounts": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "tokenIDs": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TokenBalanceFilter": {
        "type": "object",
        "required": [
          "contractAddress",
          "sinceBlockNumber"
        ],
        "properties": {
          "contractAddress": {
            "type": "string"
          },
          "sinceBlockNumber": {
            "type": "number"
          }
        }
      },
      "MetadataOptions": {
        "type": "object",
        "properties": {
          "verifiedOnly": {
            "type": "boolean"
          },
          "unverifiedOnly": {
            "type": "boolean"
          },
          "includeContracts": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TokenBalancesFilter": {
        "type": "object",
        "required": [
          "accountAddresses",
          "contractStatus",
          "contractWhitelist",
          "contractBlacklist"
        ],
        "properties": {
          "accountAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "contractStatus": {
            "$ref": "#/components/schemas/ContractVerificationStatus"
          },
          "contractWhitelist": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "contractBlacklist": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TokenBalancesByContractFilter": {
        "type": "object",
        "required": [
          "contractAddresses",
          "accountAddresses",
          "contractStatus"
        ],
        "properties": {
          "contractAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "accountAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "contractStatus": {
            "$ref": "#/components/schemas/ContractVerificationStatus"
          }
        }
      },
      "Indexer_GetEtherBalance_Request": {
        "type": "object",
        "properties": {
          "accountAddress": {
            "type": "string"
          }
        }
      },
      "Indexer_GetNativeTokenBalance_Request": {
        "type": "object",
        "properties": {
          "accountAddress": {
            "type": "string"
          }
        }
      },
      "Indexer_GetTokenBalancesSummary_Request": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TokenBalancesFilter"
          },
          "omitMetadata": {
            "type": "boolean"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Indexer_GetTokenBalancesDetails_Request": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TokenBalancesFilter"
          },
          "omitMetadata": {
            "type": "boolean"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Indexer_GetTokenBalancesByContract_Request": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TokenBalancesByContractFilter"
          },
          "omitMetadata": {
            "type": "boolean"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Indexer_GetTokenBalances_Request": {
        "type": "object",
        "properties": {
          "accountAddress": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "tokenID": {
            "type": "string"
          },
          "includeMetadata": {
            "type": "boolean"
          },
          "metadataOptions": {
            "$ref": "#/components/schemas/MetadataOptions"
          },
          "includeCollectionTokens": {
            "type": "boolean"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Indexer_GetTokenSupplies_Request": {
        "type": "object",
        "properties": {
          "contractAddress": {
            "type": "string"
          },
          "includeMetadata": {
            "type": "boolean"
          },
          "metadataOptions": {
            "$ref": "#/components/schemas/MetadataOptions"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Indexer_GetTokenSuppliesMap_Request": {
        "type": "object",
        "properties": {
          "tokenMap": {
            "type": "object",
            "description": "map<string,[]string>",
            "additionalProperties": {
              "type": "array",
              "description": "[]string",
              "items": {
                "type": "string"
              }
            }
          },
          "includeMetadata": {
            "type": "boolean"
          },
          "metadataOptions": {
            "$ref": "#/components/schemas/MetadataOptions"
          }
        }
      },
      "Indexer_GetBalanceUpdates_Request": {
        "type": "object",
        "properties": {
          "contractAddress": {
            "type": "string"
          },
          "lastBlockNumber": {
            "type": "number"
          },
          "lastBlockHash": {
            "type": "string"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Indexer_GetTransactionHistory_Request": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TransactionHistoryFilter"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "includeMetadata": {
            "type": "boolean"
          },
          "metadataOptions": {
            "$ref": "#/components/schemas/MetadataOptions"
          }
        }
      },
      "Indexer_SyncBalance_Request": {
        "type": "object",
        "properties": {
          "accountAddress": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "tokenID": {
            "type": "string"
          }
        }
      },
      "Indexer_FetchTransactionReceipt_Request": {
        "type": "object",
        "properties": {
          "txnHash": {
            "type": "string"
          },
          "maxBlockWait": {
            "type": "number"
          }
        }
      },
      "Indexer_GetOrderbookOrders_Request": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "orderbookContractAddress": {
            "type": "string"
          },
          "collectionAddress": {
            "type": "string"
          },
          "currencyAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "filter": {
            "$ref": "#/components/schemas/OrderbookOrderFilter"
          },
          "orderStatuses": {
            "type": "array",
            "description": "[]OrderStatus",
            "items": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          },
          "filters": {
            "type": "array",
            "description": "[]OrderbookOrderFilter",
            "items": {
              "$ref": "#/components/schemas/OrderbookOrderFilter"
            }
          },
          "beforeExpiryTimestamp": {
            "type": "number"
          },
          "blockNumberAfter": {
            "type": "number"
          },
          "createdAtAfter": {
            "type": "number"
          }
        }
      },
      "Indexer_GetTopOrders_Request": {
        "type": "object",
        "properties": {
          "orderbookContractAddress": {
            "type": "string"
          },
          "collectionAddress": {
            "type": "string"
          },
          "currencyAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "tokenIDs": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "isListing": {
            "type": "boolean"
          },
          "priceSort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "excludeUser": {
            "type": "string"
          }
        }
      },
      "Indexer_FetchTransactionReceiptWithFilter_Request": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TransactionFilter"
          },
          "maxBlockWait": {
            "type": "number"
          }
        }
      },
      "Indexer_GetAllWebhookListeners_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          }
        }
      },
      "Indexer_GetWebhookListener_Request": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          }
        }
      },
      "Indexer_AddWebhookListener_Request": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "filters": {
            "$ref": "#/components/schemas/EventFilter"
          },
          "projectId": {
            "type": "number"
          }
        }
      },
      "Indexer_UpdateWebhookListener_Request": {
        "type": "object",
        "properties": {
          "listener": {
            "$ref": "#/components/schemas/WebhookListener"
          },
          "projectId": {
            "type": "number"
          }
        }
      },
      "Indexer_RemoveWebhookListener_Request": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          }
        }
      },
      "Indexer_ToggleWebhookListener_Request": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          }
        }
      },
      "Indexer_PauseAllWebhookListeners_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          }
        }
      },
      "Indexer_ResumeAllWebhookListeners_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          }
        }
      },
      "Indexer_SubscribeReceipts_Request": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TransactionFilter"
          }
        }
      },
      "Indexer_SubscribeEvents_Request": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EventFilter"
          }
        }
      },
      "Indexer_SubscribeBalanceUpdates_Request": {
        "type": "object",
        "properties": {
          "contractAddress": {
            "type": "string"
          }
        }
      },
      "Indexer_GetEtherBalance_Response": {
        "type": "object",
        "properties": {
          "balance": {
            "$ref": "#/components/schemas/EtherBalance"
          }
        }
      },
      "Indexer_GetNativeTokenBalance_Response": {
        "type": "object",
        "properties": {
          "balance": {
            "$ref": "#/components/schemas/NativeTokenBalance"
          }
        }
      },
      "Indexer_GetTokenBalancesSummary_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "balances": {
            "type": "array",
            "description": "[]TokenBalance",
            "items": {
              "$ref": "#/components/schemas/TokenBalance"
            }
          }
        }
      },
      "Indexer_GetTokenBalancesDetails_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "balances": {
            "type": "array",
            "description": "[]TokenBalance",
            "items": {
              "$ref": "#/components/schemas/TokenBalance"
            }
          }
        }
      },
      "Indexer_GetTokenBalancesByContract_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "balances": {
            "type": "array",
            "description": "[]TokenBalance",
            "items": {
              "$ref": "#/components/schemas/TokenBalance"
            }
          }
        }
      },
      "Indexer_GetTokenBalances_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "balances": {
            "type": "array",
            "description": "[]TokenBalance",
            "items": {
              "$ref": "#/components/schemas/TokenBalance"
            }
          }
        }
      },
      "Indexer_GetTokenSupplies_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "contractType": {
            "$ref": "#/components/schemas/ContractType"
          },
          "tokenIDs": {
            "type": "array",
            "description": "[]TokenSupply",
            "items": {
              "$ref": "#/components/schemas/TokenSupply"
            }
          }
        }
      },
      "Indexer_GetTokenSuppliesMap_Response": {
        "type": "object",
        "properties": {
          "supplies": {
            "type": "object",
            "description": "map<string,[]TokenSupply>",
            "additionalProperties": {
              "type": "array",
              "description": "[]TokenSupply",
              "items": {
                "$ref": "#/components/schemas/TokenSupply"
              }
            }
          }
        }
      },
      "Indexer_GetBalanceUpdates_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "balances": {
            "type": "array",
            "description": "[]TokenBalance",
            "items": {
              "$ref": "#/components/schemas/TokenBalance"
            }
          }
        }
      },
      "Indexer_GetTransactionHistory_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "transactions": {
            "type": "array",
            "description": "[]Transaction",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "Indexer_SyncBalance_Response": {
        "type": "object"
      },
      "Indexer_FetchTransactionReceipt_Response": {
        "type": "object",
        "properties": {
          "receipt": {
            "$ref": "#/components/schemas/TransactionReceipt"
          }
        }
      },
      "Indexer_GetOrderbookOrders_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "orders": {
            "type": "array",
            "description": "[]OrderbookOrder",
            "items": {
              "$ref": "#/components/schemas/OrderbookOrder"
            }
          }
        }
      },
      "Indexer_GetTopOrders_Response": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "description": "[]OrderbookOrder",
            "items": {
              "$ref": "#/components/schemas/OrderbookOrder"
            }
          }
        }
      },
      "Indexer_FetchTransactionReceiptWithFilter_Response": {
        "type": "object",
        "properties": {
          "receipt": {
            "$ref": "#/components/schemas/TransactionReceipt"
          }
        }
      },
      "Indexer_GetAllWebhookListeners_Response": {
        "type": "object",
        "properties": {
          "listeners": {
            "type": "array",
            "description": "[]WebhookListener",
            "items": {
              "$ref": "#/components/schemas/WebhookListener"
            }
          }
        }
      },
      "Indexer_GetWebhookListener_Response": {
        "type": "object",
        "properties": {
          "listener": {
            "$ref": "#/components/schemas/WebhookListener"
          }
        }
      },
      "Indexer_AddWebhookListener_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "listener": {
            "$ref": "#/components/schemas/WebhookListener"
          }
        }
      },
      "Indexer_UpdateWebhookListener_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      },
      "Indexer_RemoveWebhookListener_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      },
      "Indexer_ToggleWebhookListener_Response": {
        "type": "object",
        "properties": {
          "webhookListener": {
            "$ref": "#/components/schemas/WebhookListener"
          }
        }
      },
      "Indexer_PauseAllWebhookListeners_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      },
      "Indexer_ResumeAllWebhookListeners_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      },
      "Indexer_SubscribeReceipts_Response": {
        "type": "object",
        "properties": {
          "receipt": {
            "$ref": "#/components/schemas/TransactionReceipt"
          }
        }
      },
      "Indexer_SubscribeEvents_Response": {
        "type": "object",
        "properties": {
          "log": {
            "$ref": "#/components/schemas/EventLog"
          }
        }
      },
      "Indexer_SubscribeBalanceUpdates_Response": {
        "type": "object",
        "properties": {
          "balance": {
            "$ref": "#/components/schemas/TokenBalance"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "description": "Public project access key for authenticating requests obtained on Sequence Builder. Example Test Key: AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI",
        "name": "X-Access-Key",
        "x-example": "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Secret JWT token for authenticating requests obtained from Sequence Builder - should not be exposed publicly."
      }
    }
  },
  "info": {
    "title": "Sequence インデクサー",
    "version": ""
  },
  "openapi": "3.0.0",
  "paths": {
    "/rpc/Indexer/GetEtherBalance": {
      "post": {
        "summary": "GetEtherBalance",
        "deprecated": true,
        "description": "Queries an ethereum node for the latest and confirm ETH balances DEPRECATED: use GetNativeTokenBalance instead",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetEtherBalance_Request"
              },
              "example": {
                "accountAddress": "0x8e3e38fe7367dd3b52d1e281e4e8400447c8d8b9"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetEtherBalance_Response"
                },
                "example": {
                  "balance": {
                    "accountAddress": "0x8e3e38fe7367dd3b52d1e281e4e8400447c8d8b9",
                    "balanceWei": "9429929734634710350"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ],
            "BearerAuth": []
          }
        ]
      }
    },
    "/rpc/Indexer/GetNativeTokenBalance": {
      "post": {
        "summary": "GetNativeTokenBalance",
        "description": "GetNativeTokenBalance queries an ethereum node for the latest native token account balance. The native token is the token of the chain the indexer is connected to, for example, ETH on Ethereum and POL on Polygon.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetNativeTokenBalance_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetNativeTokenBalance_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetTokenBalancesSummary": {
      "post": {
        "summary": "GetTokenBalancesSummary",
        "description": "On Sepolia Mainnet, get the token balance summaries for an account address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetTokenBalancesSummary_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetTokenBalancesSummary_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetTokenBalancesDetails": {
      "post": {
        "summary": "GetTokenBalancesDetails",
        "description": "On Sepolia Mainnet, get the token balance details for tokens owned by an account address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetTokenBalancesDetails_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetTokenBalancesDetails_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetTokenBalancesByContract": {
      "post": {
        "summary": "GetTokenBalancesByContract",
        "description": "On Sepolia Mainnet, get the token balances by a specific contract address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetTokenBalancesByContract_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetTokenBalancesByContract_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetTokenBalances": {
      "post": {
        "summary": "GetTokenBalances",
        "description": "Get the token balances for the included account address and contract address. Example on Ethereum Sepolia",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetTokenBalances_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetTokenBalances_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetTokenSupplies": {
      "post": {
        "summary": "GetTokenSupplies",
        "description": "GetTokenSupplies returns the set of tokenIDs used by a contract address, supporting ERC-20, ERC-721, and ERC-1155 contracts, and their respective supply as well.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetTokenSupplies_Request"
              },
              "example": {
                "contractAddress": "0x369db37255c76aec060d070eabeb0661e51a42a9"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetTokenSupplies_Response"
                },
                "example": {
                  "page": {
                    "pageSize": 200,
                    "more": false
                  },
                  "contractType": "ERC1155",
                  "tokenIDs": [
                    {
                      "tokenID": 0,
                      "supply": "9",
                      "chainId": 1
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetTokenSuppliesMap": {
      "post": {
        "summary": "GetTokenSuppliesMap",
        "description": "On Sepolia Mainnet, get the token supplies of the minted tokens for a contract address and token ID mapping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetTokenSuppliesMap_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetTokenSuppliesMap_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetBalanceUpdates": {
      "post": {
        "summary": "GetBalanceUpdates",
        "description": "Get balance update aggregate values -- useful for syncing balance details of a contract, ie. from Skyweaver",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetBalanceUpdates_Request"
              },
              "example": {
                "contractAddress": "0x369db37255c76aec060d070eabeb0661e51a42a9",
                "lastBlockNumber": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetBalanceUpdates_Response"
                },
                "example": {
                  "page": {
                    "pageSize": 200,
                    "more": false
                  },
                  "balances": [
                    {
                      "contractType": "ERC1155",
                      "contractAddress": "0x369db37255c76aec060d070eabeb0661e51a42a9",
                      "accountAddress": "0xc48835421ce2651bc5f78ee59d1e10244753c7fc",
                      "tokenID": 0,
                      "balance": "8",
                      "blockHash": "0x4db688b03de5804dd6e916ebafbc687aa3196c99288fbc63698e92c855400ff3",
                      "blockNumber": 20126805,
                      "chainId": 1
                    },
                    {
                      "contractType": "ERC1155",
                      "contractAddress": "0x369db37255c76aec060d070eabeb0661e51a42a9",
                      "accountAddress": "",
                      "tokenID": 0,
                      "balance": "9",
                      "blockHash": "0xd5e2e041f9d292b25076a512e198d183a55d21440be15e9869c0b1b7d9b179f5",
                      "blockNumber": 20363254,
                      "chainId": 1
                    },
                    {
                      "contractType": "ERC1155",
                      "contractAddress": "0x369db37255c76aec060d070eabeb0661e51a42a9",
                      "accountAddress": "0x0000000000000000000000000000000000000000",
                      "tokenID": 0,
                      "balance": -9,
                      "blockHash": "0xd5e2e041f9d292b25076a512e198d183a55d21440be15e9869c0b1b7d9b179f5",
                      "blockNumber": 20363254,
                      "chainId": 1
                    },
                    {
                      "contractType": "ERC1155",
                      "contractAddress": "0x369db37255c76aec060d070eabeb0661e51a42a9",
                      "accountAddress": "0xbabebe9fe973a5735d486bf6d31e9a027248024e",
                      "tokenID": 0,
                      "balance": 1,
                      "blockHash": "0x080ea6171f82705555cd1248f73ce1d61dbcbd68f5eefab44b64dec2293a695f",
                      "blockNumber": 20692108,
                      "chainId": 1
                    },
                    {
                      "contractType": "ERC1155",
                      "contractAddress": "0x369db37255c76aec060d070eabeb0661e51a42a9",
                      "accountAddress": "0xe6eb28398ccbe46aa505b62b96822c2ce8daabf4",
                      "tokenID": 0,
                      "balance": 0,
                      "blockHash": "0x080ea6171f82705555cd1248f73ce1d61dbcbd68f5eefab44b64dec2293a695f",
                      "blockNumber": 20692108,
                      "chainId": 1
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetTransactionHistory": {
      "post": {
        "summary": "GetTransactionHistory",
        "description": "History of mined transactions for the account which includes a list of token transfers (sent/recieved) and sent transactions from a Sequence wallet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetTransactionHistory_Request"
              },
              "example": {
                "accountAddress": "0xe6eb28398ccbe46aa505b62b96822c2ce8daabf4"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetTransactionHistory_Response"
                },
                "example": {
                  "page": {
                    "after": "rmExGgC37OVhMnhCMHhiMjMzM2NlNDliNzlmMzcyOGUwYWFjNzNlNGMwNzYzYmVjODBlYmVmZGViZWZlOWU1ZDVmZGNiNWVmNzMyZWE2YTN4KjB4ZTZlYjI4Mzk4Y2NiZTQ2YWE1MDViNjJiOTY4MjJjMmNlOGRhYWJmNGE0eCoweGRkOTAxMjY4NTY5NTdhYTFlOWM1Y2MzMzk1ZTg2NmI2ZWI4MzBhNDRhNQJhNngqMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYTd4KjB4ZTZlYjI4Mzk4Y2NiZTQ2YWE1MDViNjJiOTY4MjJjMmNlOGRhYWJmNGE4eEIweDJkNmFiZmE1MTI2NDRmYzVjMjY2Nzk2ZTg4MzMxYmY0MWNhZDc1YWFlMjE4ZDQxODk0ODU1MzU4ZDhjODlhMGRhOQBhYQFhYmBhZIFDIjAiYWWBRCI2MiJhYxpm6I0N",
                    "pageSize": 10,
                    "more": true
                  },
                  "transactions": [
                    {
                      "txnHash": "0x64628263b93ccad7dfd6fb1a81f1bcdadd0eb89649e0a43bdf65f639fddcd319",
                      "blockNumber": 12215569,
                      "blockHash": "0x05a4b055603a0b0cdb9e0d1bc28088bb4fca79a83d32bdc4a98d665e06ae7564",
                      "chainId": 80002,
                      "metaTxnID": null,
                      "transfers": [
                        {
                          "transferType": "RECEIVE",
                          "contractAddress": "0xdd90126856957aa1e9c5cc3395e866b6eb830a44",
                          "contractType": "ERC20",
                          "from": "0x0000000000000000000000000000000000000000",
                          "to": "0xe6eb28398ccbe46aa505b62b96822c2ce8daabf4",
                          "tokenIds": [
                            0
                          ],
                          "amounts": [
                            "33"
                          ],
                          "logIndex": "9",
                          "contractInfo": {
                            "chainId": 80002,
                            "address": "0xdd90126856957aa1e9c5cc3395e866b6eb830a44",
                            "name": "Oracle Token",
                            "type": "ERC20",
                            "symbol": "",
                            "deployed": true,
                            "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                            "extensions": {
                              "link": "",
                              "description": "",
                              "ogImage": "",
                              "originChainId": 0,
                              "originAddress": "0xdd90126856957aa1e9c5cc3395e866b6eb830a44",
                              "verified": true,
                              "verifiedBy": "Sequence Builder"
                            },
                            "updatedAt": "0001-01-01T00:00:00Z"
                          }
                        }
                      ],
                      "timestamp": "2024-09-20T20:36:45Z"
                    },
                    {
                      "txnHash": "0x5aae198a65b993a767bd495ea77b7825e0e884d9dcc446a1515097eb962814d6",
                      "blockNumber": 12213913,
                      "blockHash": "0x726ccdee4ef384493f96c666e959258ba70689bd6553c098a51542b2627a8b22",
                      "chainId": 80002,
                      "metaTxnID": null,
                      "transfers": [
                        {
                          "transferType": "RECEIVE",
                          "contractAddress": "0xdd90126856957aa1e9c5cc3395e866b6eb830a44",
                          "contractType": "ERC20",
                          "from": "0x0000000000000000000000000000000000000000",
                          "to": "0xe6eb28398ccbe46aa505b62b96822c2ce8daabf4",
                          "tokenIds": [
                            0
                          ],
                          "amounts": [
                            1000
                          ],
                          "logIndex": 1,
                          "contractInfo": {
                            "chainId": 80002,
                            "address": "0xdd90126856957aa1e9c5cc3395e866b6eb830a44",
                            "name": "Oracle Token",
                            "type": "ERC20",
                            "symbol": "",
                            "deployed": true,
                            "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                            "extensions": {
                              "link": "",
                              "description": "",
                              "ogImage": "",
                              "originChainId": 0,
                              "originAddress": "0xdd90126856957aa1e9c5cc3395e866b6eb830a44",
                              "verified": true,
                              "verifiedBy": "Sequence Builder"
                            },
                            "updatedAt": "0001-01-01T00:00:00Z"
                          }
                        }
                      ],
                      "timestamp": "2024-09-20T19:37:18Z"
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/SyncBalance": {
      "post": {
        "summary": "SyncBalance",
        "description": "Re-sync an incorrect token balance with the correct on-chain balance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_SyncBalance_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_SyncBalance_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/FetchTransactionReceipt": {
      "post": {
        "summary": "FetchTransactionReceipt",
        "description": "On Sepolia Mainnet, get the transaction receipt for a specific hash after a certain number of blocks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_FetchTransactionReceipt_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_FetchTransactionReceipt_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetOrderbookOrders": {
      "post": {
        "summary": "GetOrderbookOrders",
        "description": "These parameters are depracated, please don't use them: - filters - beforeExpiryTimestamp - blockNumberAfter - createdAtAfter and in OrderbookOrderFilter these fields are depracated: - userAddress - excludeUserAddress\nUse 'filter' and these fields instead - userAddresses - excludeUserAddress'",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetOrderbookOrders_Request"
              },
              "example": {
                "page": {
                  "page": 1,
                  "pageSize": 100
                },
                "orderbookContractAddress": "0xfdb42A198a932C8D3B506Ffa5e855bC4b348a712",
                "collectionAddress": "0x602d5dc17490794267c7fa5f58a453eb9159a86d",
                "currencyAddresses": [
                  "0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",
                  "0x0000000000000000000000000000000000000000",
                  "0x3c499c542cef5e3811e1192ce70d8cc03d5c3359"
                ],
                "filter": {
                  "isListing": null,
                  "userAddresses": null,
                  "tokenIds": null,
                  "excludeUserAddresses": null,
                  "afterBlockNumber": 0,
                  "afterCreatedAt": 0,
                  "beforeExpiry": 0,
                  "userAddress": null,
                  "excludeUserAddress": null
                },
                "orderStatuses": [
                  "OPEN"
                ],
                "filters": null,
                "beforeExpiryTimestamp": 0,
                "blockNumberAfter": 0,
                "createdAtAfter": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetOrderbookOrders_Response"
                },
                "example": {
                  "page": {
                    "page": 2,
                    "pageSize": 100,
                    "more": false
                  },
                  "orders": [
                    {
                      "orderId": "1198",
                      "tokenContract": "0x602d5dc17490794267c7fa5f58a453eb9159a86d",
                      "tokenId": "3",
                      "isListing": true,
                      "quantity": 1,
                      "quantityRemaining": 1,
                      "currencyAddress": "0x3c499c542cef5e3811e1192ce70d8cc03d5c3359",
                      "pricePerToken": "1000000",
                      "expiry": "1729168819",
                      "orderStatus": "OPEN",
                      "createdBy": "0xf43a1defbd32243fd83fe702f7817dde3319246e",
                      "blockNumber": 63027844,
                      "orderbookContractAddress": "0xfdb42A198a932C8D3B506Ffa5e855bC4b348a712",
                      "createdAt": 1728909642
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetTopOrders": {
      "post": {
        "summary": "GetTopOrders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetTopOrders_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetTopOrders_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/FetchTransactionReceiptWithFilter": {
      "post": {
        "summary": "FetchTransactionReceiptWithFilter",
        "description": "On Sepolia Mainnet, get the transaction receipt for a specific hash after a certain number of blocks for a certain filter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_FetchTransactionReceiptWithFilter_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_FetchTransactionReceiptWithFilter_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetAllWebhookListeners": {
      "post": {
        "summary": "GetAllWebhookListeners",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetAllWebhookListeners_Request"
              },
              "example": {
                "projectId": 31396
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetAllWebhookListeners_Response"
                },
                "example": {
                  "listeners": [
                    {
                      "id": 160497579,
                      "projectID": 31396,
                      "url": "https://webhook.site/#!/view/a2859143-0a52-4b69-98f2-a58733e4dcf0",
                      "filters": {
                        "events": [
                          "Transfer(address indexed from,address indexed to,uint256 indexed tokenId)"
                        ],
                        "contractAddresses": [
                          "0x9bec34c1f7098e278afd48fedcf13355b854364a"
                        ],
                        "accounts": [
                          "0xe6eb28398ccbe46aa505b62b96822c2ce8daabf4"
                        ],
                        "tokenIDs": null
                      },
                      "name": "webhook.site #a84730",
                      "updatedAt": "2024-10-10T20:37:01.685037Z",
                      "active": true
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/GetWebhookListener": {
      "post": {
        "summary": "GetWebhookListener",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_GetWebhookListener_Request"
              },
              "example": {
                "id": 160497579,
                "projectId": 31396
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_GetWebhookListener_Response"
                },
                "example": {
                  "listener": {
                    "id": 160497579,
                    "projectID": 31396,
                    "url": "https://webhook.site/#!/view/a2859143-0a52-4b69-98f2-a58733e4dcf0",
                    "filters": {
                      "events": [
                        "Transfer(address indexed from,address indexed to,uint256 indexed tokenId)"
                      ],
                      "contractAddresses": [
                        "0x9bec34c1f7098e278afd48fedcf13355b854364a"
                      ],
                      "accounts": [
                        "0xe6eb28398ccbe46aa505b62b96822c2ce8daabf4"
                      ],
                      "tokenIDs": null
                    },
                    "name": "webhook.site #a84730",
                    "updatedAt": "2024-10-10T20:37:01.685037632Z",
                    "active": true
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/AddWebhookListener": {
      "post": {
        "summary": "AddWebhookListener",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_AddWebhookListener_Request"
              },
              "example": {
                "filters": {
                  "accounts": [
                    "0xe6eB28398CCBe46aA505b62b96822c2Ce8DAABf4"
                  ],
                  "contractAddresses": [
                    "0x9bec34c1f7098e278afd48fedcf13355b854364a"
                  ],
                  "events": [
                    "Transfer(address indexed from, address indexed to, uint256 indexed tokenId)"
                  ]
                },
                "projectId": 31396,
                "url": "https://webhook.site/#!/view/a2859143-0a52-4b69-98f2-a58733e4dcf0"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_AddWebhookListener_Response"
                },
                "example": {
                  "status": true,
                  "listener": {
                    "id": 160497579,
                    "projectID": 31396,
                    "url": "https://webhook.site/#!/view/a2859143-0a52-4b69-98f2-a58733e4dcf0",
                    "filters": {
                      "events": [
                        "Transfer(address indexed from,address indexed to,uint256 indexed tokenId)"
                      ],
                      "contractAddresses": [
                        "0x9bec34c1f7098e278afd48fedcf13355b854364a"
                      ],
                      "accounts": [
                        "0xe6eb28398ccbe46aa505b62b96822c2ce8daabf4"
                      ],
                      "tokenIDs": null
                    },
                    "name": "webhook.site #a84730",
                    "updatedAt": "2024-10-10T20:37:01.685037632Z",
                    "active": true
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/UpdateWebhookListener": {
      "post": {
        "summary": "UpdateWebhookListener",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_UpdateWebhookListener_Request"
              },
              "example": {
                "filters": {
                  "accounts": [
                    "0xe6eB28398CCBe46aA505b62b96822c2Ce8DAABf4"
                  ],
                  "contractAddresses": [
                    "0x9bec34c1f7098e278afd48fedcf13355b854364a"
                  ],
                  "tokenIDs": [
                    100
                  ],
                  "events": [
                    "Transfer(address indexed from, address indexed to, uint256 indexed tokenId)"
                  ]
                },
                "projectId": 31396,
                "url": "https://webhook.site/#!/view/a2859143-0a52-4b69-98f2-a58733e4dcf0"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_UpdateWebhookListener_Response"
                },
                "example": {
                  "status": true,
                  "listener": {
                    "id": 2435835685,
                    "projectID": 31396,
                    "url": "https://webhook.site/#!/view/a2859143-0a52-4b69-98f2-a58733e4dcf0",
                    "filters": {
                      "events": [
                        "Transfer(address indexed from,address indexed to,uint256 indexed tokenId)"
                      ],
                      "contractAddresses": [
                        "0x9bec34c1f7098e278afd48fedcf13355b854364a"
                      ],
                      "accounts": [
                        "0xe6eb28398ccbe46aa505b62b96822c2ce8daabf4"
                      ],
                      "tokenIDs": [
                        100
                      ]
                    },
                    "name": "webhook.site #b5cf2f",
                    "updatedAt": "2024-10-10T20:52:58.924369913Z",
                    "active": true
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/RemoveWebhookListener": {
      "post": {
        "summary": "RemoveWebhookListener",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_RemoveWebhookListener_Request"
              },
              "example": {
                "id": 160497579,
                "projectId": 31396
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_RemoveWebhookListener_Response"
                },
                "example": {
                  "status": true
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/ToggleWebhookListener": {
      "post": {
        "summary": "ToggleWebhookListener",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_ToggleWebhookListener_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_ToggleWebhookListener_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/PauseAllWebhookListeners": {
      "post": {
        "summary": "PauseAllWebhookListeners",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_PauseAllWebhookListeners_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_PauseAllWebhookListeners_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/ResumeAllWebhookListeners": {
      "post": {
        "summary": "ResumeAllWebhookListeners",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_ResumeAllWebhookListeners_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_ResumeAllWebhookListeners_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/SubscribeReceipts": {
      "post": {
        "summary": "SubscribeReceipts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_SubscribeReceipts_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_SubscribeReceipts_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "On Sepolia Mainnet, subscribe and receive receipts based on a filter of transaction hash and transaction details",
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/SubscribeEvents": {
      "post": {
        "summary": "SubscribeEvents",
        "description": "On Sepolia Mainnet, subscribe and receive receipts based on a filter of transaction mints",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_SubscribeEvents_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_SubscribeEvents_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Indexer/SubscribeBalanceUpdates": {
      "post": {
        "summary": "SubscribeBalanceUpdates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Indexer_SubscribeBalanceUpdates_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indexer_SubscribeBalanceUpdates_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResourceExhausted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMetadataCallFailed"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "On Sepolia Mainnet, subscribe and receive balance updates based on the affected address, like wallet and contract address, with specific details",
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://amoy-indexer.sequence.app",
      "description": "Amoy Mainnet"
    },
    {
      "url": "https://apechain-mainnet-indexer.sequence.app",
      "description": "Apechain-Mainnet Mainnet"
    },
    {
      "url": "https://apechain-testnet-indexer.sequence.app",
      "description": "Apechain-Testnet Mainnet"
    },
    {
      "url": "https://arbitrum-indexer.sequence.app",
      "description": "Arbitrum Mainnet"
    },
    {
      "url": "https://arbitrum-nova-indexer.sequence.app",
      "description": "Arbitrum-Nova Mainnet"
    },
    {
      "url": "https://arbitrum-sepolia-indexer.sequence.app",
      "description": "Arbitrum-Sepolia Mainnet"
    },
    {
      "url": "https://astar-zkevm-indexer.sequence.app",
      "description": "Astar-Zkevm Mainnet"
    },
    {
      "url": "https://astar-zkyoto-indexer.sequence.app",
      "description": "Astar-Zkyoto Mainnet"
    },
    {
      "url": "https://avalanche-indexer.sequence.app",
      "description": "Avalanche Mainnet"
    },
    {
      "url": "https://avalanche-testnet-indexer.sequence.app",
      "description": "Avalanche-Testnet Mainnet"
    },
    {
      "url": "https://b3-indexer.sequence.app",
      "description": "B3 Mainnet"
    },
    {
      "url": "https://b3-sepolia-indexer.sequence.app",
      "description": "B3-Sepolia Mainnet"
    },
    {
      "url": "https://base-indexer.sequence.app",
      "description": "Base Mainnet"
    },
    {
      "url": "https://base-sepolia-indexer.sequence.app",
      "description": "Base-Sepolia Mainnet"
    },
    {
      "url": "https://blast-indexer.sequence.app",
      "description": "Blast Mainnet"
    },
    {
      "url": "https://blast-sepolia-indexer.sequence.app",
      "description": "Blast-Sepolia Mainnet"
    },
    {
      "url": "https://borne-testnet-indexer.sequence.app",
      "description": "Borne-Testnet Mainnet"
    },
    {
      "url": "https://bsc-indexer.sequence.app",
      "description": "Bsc Mainnet"
    },
    {
      "url": "https://bsc-testnet-indexer.sequence.app",
      "description": "Bsc-Testnet Mainnet"
    },
    {
      "url": "https://gnosis-indexer.sequence.app",
      "description": "Gnosis Mainnet"
    },
    {
      "url": "https://homeverse-indexer.sequence.app",
      "description": "Homeverse Mainnet"
    },
    {
      "url": "https://homeverse-testnet-indexer.sequence.app",
      "description": "Homeverse-Testnet Mainnet"
    },
    {
      "url": "https://immutable-zkevm-indexer.sequence.app",
      "description": "Immutable-Zkevm Mainnet"
    },
    {
      "url": "https://immutable-zkevm-testnet-indexer.sequence.app",
      "description": "Immutable-Zkevm-Testnet Mainnet"
    },
    {
      "url": "https://imx-indexer.sequence.app",
      "description": "Imx Mainnet"
    },
    {
      "url": "https://imx-testnet-indexer.sequence.app",
      "description": "Imx-Testnet Mainnet"
    },
    {
      "url": "https://mainnet-indexer.sequence.app",
      "description": "Mainnet Mainnet"
    },
    {
      "url": "https://optimism-indexer.sequence.app",
      "description": "Optimism Mainnet"
    },
    {
      "url": "https://optimism-sepolia-indexer.sequence.app",
      "description": "Optimism-Sepolia Mainnet"
    },
    {
      "url": "https://polygon-indexer.sequence.app",
      "description": "Polygon Mainnet"
    },
    {
      "url": "https://polygon-zkevm-indexer.sequence.app",
      "description": "Polygon-Zkevm Mainnet"
    },
    {
      "url": "https://rootnet-indexer.sequence.app",
      "description": "Rootnet Mainnet"
    },
    {
      "url": "https://rootnet-porcini-indexer.sequence.app",
      "description": "Rootnet-Porcini Mainnet"
    },
    {
      "url": "https://sepolia-indexer.sequence.app",
      "description": "Sepolia Mainnet"
    },
    {
      "url": "https://skale-nebula-testnet-indexer.sequence.app",
      "description": "Skale-Nebula-Testnet Mainnet"
    },
    {
      "url": "https://soneium-minato-indexer.sequence.app",
      "description": "Soneium-Minato Mainnet"
    },
    {
      "url": "https://toy-testnet-indexer.sequence.app",
      "description": "Toy-Testnet Mainnet"
    },
    {
      "url": "https://xai-indexer.sequence.app",
      "description": "Xai Mainnet"
    },
    {
      "url": "https://xai-sepolia-indexer.sequence.app",
      "description": "Xai-Sepolia Mainnet"
    },
    {
      "url": "https://xr-sepolia-indexer.sequence.app",
      "description": "Xr-Sepolia Mainnet"
    }
  ],
  "tags": [
    {
      "name": "public",
      "description": "Endpoints accessible by passing your project-access-key in the header. This is injected whenever you login automatically."
    },
    {
      "name": "secret",
      "description": "Endpoints that require a Sequence service token intended to be secret. You can manually generate one on Sequence Builder and pass it as a Bearer Token."
    }
  ]
}
