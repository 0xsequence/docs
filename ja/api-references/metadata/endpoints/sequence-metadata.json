{
  "components": {
    "schemas": {
      "ErrorWebrpcEndpoint": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcEndpoint"
          },
          "code": {
            "type": "number",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": "endpoint error"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcRequestFailed": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcRequestFailed"
          },
          "code": {
            "type": "number",
            "example": -1
          },
          "msg": {
            "type": "string",
            "example": "request failed"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcBadRoute": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadRoute"
          },
          "code": {
            "type": "number",
            "example": -2
          },
          "msg": {
            "type": "string",
            "example": "bad route"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 404
          }
        }
      },
      "ErrorWebrpcBadMethod": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadMethod"
          },
          "code": {
            "type": "number",
            "example": -3
          },
          "msg": {
            "type": "string",
            "example": "bad method"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 405
          }
        }
      },
      "ErrorWebrpcBadRequest": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadRequest"
          },
          "code": {
            "type": "number",
            "example": -4
          },
          "msg": {
            "type": "string",
            "example": "bad request"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcBadResponse": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadResponse"
          },
          "code": {
            "type": "number",
            "example": -5
          },
          "msg": {
            "type": "string",
            "example": "bad response"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcServerPanic": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcServerPanic"
          },
          "code": {
            "type": "number",
            "example": -6
          },
          "msg": {
            "type": "string",
            "example": "server panic"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcInternalError": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcInternalError"
          },
          "code": {
            "type": "number",
            "example": -7
          },
          "msg": {
            "type": "string",
            "example": "internal error"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcClientDisconnected": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcClientDisconnected"
          },
          "code": {
            "type": "number",
            "example": -8
          },
          "msg": {
            "type": "string",
            "example": "client disconnected"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcStreamLost": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcStreamLost"
          },
          "code": {
            "type": "number",
            "example": -9
          },
          "msg": {
            "type": "string",
            "example": "stream lost"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcStreamFinished": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcStreamFinished"
          },
          "code": {
            "type": "number",
            "example": -10
          },
          "msg": {
            "type": "string",
            "example": "stream finished"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 200
          }
        }
      },
      "ErrorUnauthorized": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Unauthorized"
          },
          "code": {
            "type": "number",
            "example": 1000
          },
          "msg": {
            "type": "string",
            "example": "Unauthorized access"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 401
          }
        }
      },
      "ErrorPermissionDenied": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "PermissionDenied"
          },
          "code": {
            "type": "number",
            "example": 1001
          },
          "msg": {
            "type": "string",
            "example": "Permission denied"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 403
          }
        }
      },
      "ErrorSessionExpired": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "SessionExpired"
          },
          "code": {
            "type": "number",
            "example": 1002
          },
          "msg": {
            "type": "string",
            "example": "Session expired"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 403
          }
        }
      },
      "ErrorMethodNotFound": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "MethodNotFound"
          },
          "code": {
            "type": "number",
            "example": 1003
          },
          "msg": {
            "type": "string",
            "example": "Method not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 404
          }
        }
      },
      "ErrorRequestConflict": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "RequestConflict"
          },
          "code": {
            "type": "number",
            "example": 1004
          },
          "msg": {
            "type": "string",
            "example": "Conflict with target resource"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 409
          }
        }
      },
      "ErrorFail": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Fail"
          },
          "code": {
            "type": "number",
            "example": 1005
          },
          "msg": {
            "type": "string",
            "example": "Request Failed"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorGeoblocked": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Geoblocked"
          },
          "code": {
            "type": "number",
            "example": 1006
          },
          "msg": {
            "type": "string",
            "example": "Geoblocked region"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 451
          }
        }
      },
      "ErrorTimeout": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Timeout"
          },
          "code": {
            "type": "number",
            "example": 2000
          },
          "msg": {
            "type": "string",
            "example": "Request timed out"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 408
          }
        }
      },
      "ErrorInvalidArgument": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "InvalidArgument"
          },
          "code": {
            "type": "number",
            "example": 2001
          },
          "msg": {
            "type": "string",
            "example": "Invalid argument"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorRequiredArgument": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "RequiredArgument"
          },
          "code": {
            "type": "number",
            "example": 2002
          },
          "msg": {
            "type": "string",
            "example": "Required argument missing"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorQueryFailed": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "QueryFailed"
          },
          "code": {
            "type": "number",
            "example": 2003
          },
          "msg": {
            "type": "string",
            "example": "Query failed"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorValidationFailed": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "ValidationFailed"
          },
          "code": {
            "type": "number",
            "example": 2004
          },
          "msg": {
            "type": "string",
            "example": "Validation failed"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorRateLimited": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "RateLimited"
          },
          "code": {
            "type": "number",
            "example": 2005
          },
          "msg": {
            "type": "string",
            "example": "Rate limited"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 429
          }
        }
      },
      "ErrorNotFound": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "NotFound"
          },
          "code": {
            "type": "number",
            "example": 3000
          },
          "msg": {
            "type": "string",
            "example": "Resource not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorProjectNotFound": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "ProjectNotFound"
          },
          "code": {
            "type": "number",
            "example": 3002
          },
          "msg": {
            "type": "string",
            "example": "Project not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorChainNotFound": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "ChainNotFound"
          },
          "code": {
            "type": "number",
            "example": 3003
          },
          "msg": {
            "type": "string",
            "example": "Chain not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorTokenDirectoryDisabled": {
        "type": "object",
        "required": [
          "エラー",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "TokenDirectoryDisabled"
          },
          "code": {
            "type": "number",
            "example": 4001
          },
          "msg": {
            "type": "string",
            "example": "Token Directory is disabled"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ContractType": {
        "type": "string",
        "description": "Represented as uint16 on the server side",
        "enum": [
          "UNKNOWN",
          "ERC20",
          "ERC721",
          "ERC1155"
        ]
      },
      "ResourceStatus": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "NOT_AVAILABLE",
          "STALE",
          "AVAILABLE"
        ]
      },
      "PropertyType": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "INT",
          "STRING",
          "ARRAY",
          "GENERIC"
        ]
      },
      "SwapType": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "UNKNOWN",
          "BUY",
          "SELL"
        ]
      },
      "TaskStatus": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "QUEUED",
          "PAUSED",
          "FAILED",
          "COMPLETED"
        ]
      },
      "Version": {
        "type": "object",
        "required": [
          "webrpcVersion",
          "schemaVersion",
          "schemaHash",
          "appVersion"
        ],
        "properties": {
          "webrpcVersion": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "string"
          },
          "schemaHash": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          }
        }
      },
      "RuntimeStatus": {
        "type": "object",
        "required": [
          "healthOK",
          "startTime",
          "uptime",
          "uptimeString",
          "ver",
          "branch",
          "commitHash",
          "checks",
          "runnable"
        ],
        "properties": {
          "healthOK": {
            "type": "boolean"
          },
          "startTime": {
            "type": "string"
          },
          "uptime": {
            "type": "number"
          },
          "uptimeString": {
            "type": "string"
          },
          "ver": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "commitHash": {
            "type": "string"
          },
          "checks": {
            "$ref": "#/components/schemas/RuntimeChecks"
          },
          "runnable": {
            "type": "object",
            "description": "map<string,RunnableStatus>",
            "additionalProperties": {
              "$ref": "#/components/schemas/RunnableStatus"
            }
          }
        }
      },
      "RunnableStatus": {
        "type": "object",
        "required": [
          "running",
          "restarts",
          "startTime",
          "lastError"
        ],
        "properties": {
          "running": {
            "type": "boolean"
          },
          "restarts": {
            "type": "number"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "lastError": {
            "type": "object"
          }
        }
      },
      "RuntimeChecks": {
        "type": "object"
      },
      "ContractIndex": {
        "type": "object",
        "required": [
          "chainId",
          "address",
          "type",
          "metadata",
          "contentHash",
          "deployed",
          "bytecodeHash",
          "notFound",
          "updatedAt",
          "status"
        ],
        "properties": {
          "chainId": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ContractType"
          },
          "metadata": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "contentHash": {
            "type": "number"
          },
          "deployed": {
            "type": "boolean"
          },
          "bytecodeHash": {
            "type": "string"
          },
          "notFound": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "string"
          },
          "queuedAt": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ResourceStatus"
          }
        }
      },
      "TokenIndex": {
        "type": "object",
        "required": [
          "key",
          "chainId",
          "contractAddress",
          "tokenId",
          "metadata",
          "updatedAt"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "chainId": {
            "type": "number"
          },
          "contractAddress": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "notFound": {
            "type": "boolean"
          },
          "lastFetched": {
            "type": "string"
          },
          "fetchCount": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string"
          },
          "queuedAt": {
            "type": "string"
          }
        }
      },
      "ContractInfo": {
        "type": "object",
        "required": [
          "chainId",
          "address",
          "name",
          "type",
          "symbol",
          "logoURI",
          "deployed",
          "bytecodeHash",
          "extensions",
          "contentHash",
          "updatedAt",
          "notFound",
          "status"
        ],
        "properties": {
          "chainId": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "decimals": {
            "type": "number"
          },
          "logoURI": {
            "type": "string"
          },
          "deployed": {
            "type": "boolean"
          },
          "bytecodeHash": {
            "type": "string"
          },
          "extensions": {
            "$ref": "#/components/schemas/ContractInfoExtensions"
          },
          "contentHash": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string"
          },
          "notFound": {
            "type": "boolean"
          },
          "queuedAt": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ResourceStatus"
          }
        }
      },
      "ContractInfoExtensions": {
        "type": "object",
        "required": [
          "link",
          "description",
          "categories",
          "ogImage",
          "ogName",
          "originChainId",
          "originAddress",
          "blacklist",
          "verified",
          "verifiedBy",
          "featured"
        ],
        "properties": {
          "link": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "ogImage": {
            "type": "string"
          },
          "ogName": {
            "type": "string"
          },
          "originChainId": {
            "type": "number"
          },
          "originAddress": {
            "type": "string"
          },
          "blacklist": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          },
          "verifiedBy": {
            "type": "string"
          },
          "featured": {
            "type": "boolean"
          }
        }
      },
      "TokenMetadata": {
        "type": "object",
        "required": [
          "tokenId",
          "name",
          "attributes",
          "status"
        ],
        "properties": {
          "tokenId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "video": {
            "type": "string"
          },
          "audio": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "attributes": {
            "type": "array",
            "description": "[]map<string,any>",
            "items": {
              "type": "object",
              "description": "map<string,any>",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "imageData": {
            "type": "string"
          },
          "externalUrl": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "animationUrl": {
            "type": "string"
          },
          "decimals": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "description": "[]Asset",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          },
          "status": {
            "$ref": "#/components/schemas/ResourceStatus"
          },
          "queuedAt": {
            "type": "string"
          },
          "lastFetched": {
            "type": "string"
          }
        }
      },
      "PropertyFilter": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PropertyType"
          },
          "min": {
            "type": "number"
          },
          "max": {
            "type": "number"
          },
          "values": {
            "type": "array",
            "description": "[]any",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Filter": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "description": "[]PropertyFilter",
            "items": {
              "$ref": "#/components/schemas/PropertyFilter"
            }
          }
        }
      },
      "Collection": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "metadata",
          "private"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "metadata": {
            "$ref": "#/components/schemas/CollectionMetadata"
          },
          "private": {
            "type": "boolean"
          },
          "revealKey": {
            "type": "string"
          },
          "tokenCount": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          },
          "baseURIs": {
            "$ref": "#/components/schemas/CollectionBaseURIs"
          },
          "assets": {
            "type": "array",
            "description": "[]Asset",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          }
        }
      },
      "CollectionMetadata": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "externalLink": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "description": "map<string,any>",
            "additionalProperties": {
              "type": "object"
            }
          },
          "attributes": {
            "type": "array",
            "description": "[]map<string,any>",
            "items": {
              "type": "object",
              "description": "map<string,any>",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "CollectionBaseURIs": {
        "type": "object",
        "required": [
          "contractMetadataURI",
          "tokenMetadataURI"
        ],
        "properties": {
          "contractMetadataURI": {
            "type": "string"
          },
          "tokenMetadataURI": {
            "type": "string"
          }
        }
      },
      "ContractCollection": {
        "type": "object",
        "required": [
          "id",
          "chainId",
          "contractAddress",
          "collectionId"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "contractAddress": {
            "type": "string"
          },
          "collectionId": {
            "type": "number"
          }
        }
      },
      "Asset": {
        "type": "object",
        "required": [
          "id",
          "collectionId",
          "metadataField"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          },
          "tokenId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "metadataField": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "filesize": {
            "type": "number"
          },
          "mimeType": {
            "type": "string"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "object",
        "required": [
          "collectionId",
          "tokenId",
          "metadata",
          "private",
          "searchColumn"
        ],
        "properties": {
          "collectionId": {
            "type": "number"
          },
          "tokenId": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/TokenMetadata"
          },
          "private": {
            "type": "boolean"
          },
          "searchColumn": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "GetNiftyswapUnitPricesRequest": {
        "type": "object",
        "required": [
          "swapType",
          "ids",
          "amounts"
        ],
        "properties": {
          "swapType": {
            "$ref": "#/components/schemas/SwapType"
          },
          "ids": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "amounts": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetNiftyswapUnitPricesResponse": {
        "type": "object",
        "required": [
          "unitPrice",
          "unitAmount",
          "availableAmount"
        ],
        "properties": {
          "unitPrice": {
            "type": "string"
          },
          "unitAmount": {
            "type": "string"
          },
          "availableAmount": {
            "type": "string"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "column": {
            "type": "string"
          },
          "before": {
            "type": "object"
          },
          "after": {
            "type": "object"
          },
          "pageSize": {
            "type": "number"
          },
          "more": {
            "type": "boolean"
          }
        }
      },
      "TaskRunner": {
        "type": "object",
        "required": [
          "id",
          "workGroup",
          "runAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "workGroup": {
            "type": "string"
          },
          "runAt": {
            "type": "string"
          }
        }
      },
      "Task": {
        "type": "object",
        "required": [
          "id",
          "queue",
          "try",
          "payload"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "queue": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "try": {
            "type": "number"
          },
          "runAt": {
            "type": "string"
          },
          "lastRanAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "description": "[]byte",
            "items": {
              "type": "string"
            }
          },
          "hash": {
            "type": "string"
          }
        }
      },
      "Metadata_RefreshTokenMetadata_Request": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "tokenIDs": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "refreshAll": {
            "type": "boolean"
          }
        }
      },
      "Metadata_EnqueueTokensForRefresh_Request": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "tokenIDs": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "refreshAll": {
            "type": "boolean"
          }
        }
      },
      "Metadata_RefreshContractInfo_Request": {
        "type": "object",
        "properties": {
          "chainHandle": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          }
        }
      },
      "Metadata_RefreshContractTokens_Request": {
        "type": "object",
        "properties": {
          "chainHandle": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "tokenIDs": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Metadata_RefreshAllContractTokens_Request": {
        "type": "object",
        "properties": {
          "chainHandle": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          }
        }
      },
      "Metadata_GetTokenMetadata_Request": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "tokenIDs": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Metadata_GetTokenMetadataBatch_Request": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "string"
          },
          "contractTokenMap": {
            "type": "object",
            "description": "map<string,[]string>",
            "additionalProperties": {
              "type": "array",
              "description": "[]string",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "Metadata_SearchTokenMetadata_Request": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "filter": {
            "$ref": "#/components/schemas/Filter"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Metadata_SearchTokenIDs_Request": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "filter": {
            "$ref": "#/components/schemas/Filter"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Metadata_TokenCollectionFilters_Request": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          }
        }
      },
      "Metadata_GetContractInfo_Request": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          }
        }
      },
      "Metadata_GetContractInfoBatch_Request": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "string"
          },
          "contractAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Metadata_SearchContractInfo_Request": {
        "type": "object",
        "properties": {
          "contractAddress": {
            "type": "string"
          }
        }
      },
      "Metadata_SearchContractInfoBatch_Request": {
        "type": "object",
        "properties": {
          "contractAddresses": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Metadata_SearchMetadata_Request": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string"
          },
          "chainID": {
            "type": "string"
          },
          "types": {
            "type": "array",
            "description": "[]ContractType",
            "items": {
              "$ref": "#/components/schemas/ContractType"
            }
          },
          "excludeTokenMetadata": {
            "type": "boolean"
          }
        }
      },
      "Metadata_SearchTokens_Request": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "chainID": {
            "type": "string"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Metadata_SearchContracts_Request": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "chainID": {
            "type": "string"
          },
          "chainIDs": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "types": {
            "type": "array",
            "description": "[]ContractType",
            "items": {
              "$ref": "#/components/schemas/ContractType"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Metadata_DirectoryGetNetworks_Request": {
        "type": "object",
        "properties": {
          "includeTestnets": {
            "type": "boolean"
          },
          "onlyFeatured": {
            "type": "boolean"
          }
        }
      },
      "Metadata_DirectoryGetCollections_Request": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "number"
          },
          "includeTestnets": {
            "type": "boolean"
          },
          "onlyFeatured": {
            "type": "boolean"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Metadata_RefreshTokenMetadata_Response": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "number"
          }
        }
      },
      "Metadata_EnqueueTokensForRefresh_Response": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "number"
          }
        }
      },
      "Metadata_RefreshContractInfo_Response": {
        "type": "object"
      },
      "Metadata_RefreshContractTokens_Response": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          }
        }
      },
      "Metadata_RefreshAllContractTokens_Response": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "retryAfter": {
            "type": "number"
          }
        }
      },
      "Metadata_GetTokenMetadata_Response": {
        "type": "object",
        "properties": {
          "tokenMetadata": {
            "type": "array",
            "description": "[]TokenMetadata",
            "items": {
              "$ref": "#/components/schemas/TokenMetadata"
            }
          },
          "task": {
            "$ref": "#/components/schemas/Task"
          }
        }
      },
      "Metadata_GetTokenMetadataBatch_Response": {
        "type": "object",
        "properties": {
          "contractTokenMetadata": {
            "type": "object",
            "description": "map<string,[]TokenMetadata>",
            "additionalProperties": {
              "type": "array",
              "description": "[]TokenMetadata",
              "items": {
                "$ref": "#/components/schemas/TokenMetadata"
              }
            }
          },
          "task": {
            "$ref": "#/components/schemas/Task"
          }
        }
      },
      "Metadata_SearchTokenMetadata_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "tokenMetadata": {
            "type": "array",
            "description": "[]TokenMetadata",
            "items": {
              "$ref": "#/components/schemas/TokenMetadata"
            }
          }
        }
      },
      "Metadata_SearchTokenIDs_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "tokenIds": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Metadata_TokenCollectionFilters_Response": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "[]PropertyFilter",
            "items": {
              "$ref": "#/components/schemas/PropertyFilter"
            }
          }
        }
      },
      "Metadata_GetContractInfo_Response": {
        "type": "object",
        "properties": {
          "contractInfo": {
            "$ref": "#/components/schemas/ContractInfo"
          },
          "task": {
            "$ref": "#/components/schemas/Task"
          }
        }
      },
      "Metadata_GetContractInfoBatch_Response": {
        "type": "object",
        "properties": {
          "contractInfoMap": {
            "type": "object",
            "description": "map<string,ContractInfo>",
            "additionalProperties": {
              "$ref": "#/components/schemas/ContractInfo"
            }
          },
          "task": {
            "$ref": "#/components/schemas/Task"
          }
        }
      },
      "Metadata_SearchContractInfo_Response": {
        "type": "object",
        "properties": {
          "contractInfoList": {
            "type": "array",
            "description": "[]ContractInfo",
            "items": {
              "$ref": "#/components/schemas/ContractInfo"
            }
          }
        }
      },
      "Metadata_SearchContractInfoBatch_Response": {
        "type": "object",
        "properties": {
          "contractInfoByChain": {
            "type": "object",
            "description": "map<string,[]ContractInfo>",
            "additionalProperties": {
              "type": "array",
              "description": "[]ContractInfo",
              "items": {
                "$ref": "#/components/schemas/ContractInfo"
              }
            }
          }
        }
      },
      "Metadata_SearchMetadata_Response": {
        "type": "object",
        "properties": {
          "tokenMetadata": {
            "type": "array",
            "description": "[]TokenMetadata",
            "items": {
              "$ref": "#/components/schemas/TokenMetadata"
            }
          },
          "contractInfo": {
            "type": "array",
            "description": "[]ContractInfo",
            "items": {
              "$ref": "#/components/schemas/ContractInfo"
            }
          }
        }
      },
      "Metadata_SearchTokens_Response": {
        "type": "object",
        "properties": {
          "tokenMetadata": {
            "type": "array",
            "description": "[]TokenMetadata",
            "items": {
              "$ref": "#/components/schemas/TokenMetadata"
            }
          },
          "nextPage": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Metadata_SearchContracts_Response": {
        "type": "object",
        "properties": {
          "contractInfo": {
            "type": "array",
            "description": "[]ContractInfo",
            "items": {
              "$ref": "#/components/schemas/ContractInfo"
            }
          },
          "nextPage": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Metadata_DirectoryGetNetworks_Response": {
        "type": "object",
        "properties": {
          "networks": {
            "type": "array",
            "description": "[]uint64",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "Metadata_DirectoryGetCollections_Response": {
        "type": "object",
        "properties": {
          "collections": {
            "type": "array",
            "description": "[]ContractInfo",
            "items": {
              "$ref": "#/components/schemas/ContractInfo"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Collections_CreateCollection_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collection": {
            "$ref": "#/components/schemas/Collection"
          }
        }
      },
      "Collections_GetCollection_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          }
        }
      },
      "Collections_ListCollections_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Collections_UpdateCollection_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collection": {
            "$ref": "#/components/schemas/Collection"
          }
        }
      },
      "Collections_DeleteCollection_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          }
        }
      },
      "Collections_PublishCollection_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          },
          "recursive": {
            "type": "boolean"
          }
        }
      },
      "Collections_UnpublishCollection_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          }
        }
      },
      "Collections_CreateContractCollection_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "contractCollection": {
            "$ref": "#/components/schemas/ContractCollection"
          }
        }
      },
      "Collections_GetContractCollection_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "contractAddress": {
            "type": "string"
          }
        }
      },
      "Collections_ListContractCollections_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Collections_UpdateContractCollection_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "contractCollection": {
            "$ref": "#/components/schemas/ContractCollection"
          }
        }
      },
      "Collections_DeleteContractCollection_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "contractAddress": {
            "type": "string"
          }
        }
      },
      "Collections_CreateToken_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          },
          "token": {
            "$ref": "#/components/schemas/TokenMetadata"
          },
          "private": {
            "type": "boolean"
          }
        }
      },
      "Collections_GetToken_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          },
          "tokenId": {
            "type": "string"
          }
        }
      },
      "Collections_ListTokens_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Collections_UpdateToken_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          },
          "tokenId": {
            "type": "string"
          },
          "token": {
            "$ref": "#/components/schemas/TokenMetadata"
          },
          "private": {
            "type": "boolean"
          }
        }
      },
      "Collections_DeleteToken_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "collectionId": {
            "type": "number"
          },
          "tokenId": {
            "type": "string"
          }
        }
      },
      "Collections_CreateAsset_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "Collections_GetAsset_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "assetId": {
            "type": "number"
          }
        }
      },
      "Collections_UpdateAsset_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "Collections_DeleteAsset_Request": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "assetId": {
            "type": "number"
          }
        }
      },
      "Collections_CreateCollection_Response": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/Collection"
          }
        }
      },
      "Collections_GetCollection_Response": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/Collection"
          }
        }
      },
      "Collections_ListCollections_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "collections": {
            "type": "array",
            "description": "[]Collection",
            "items": {
              "$ref": "#/components/schemas/Collection"
            }
          }
        }
      },
      "Collections_UpdateCollection_Response": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/Collection"
          }
        }
      },
      "Collections_DeleteCollection_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      },
      "Collections_PublishCollection_Response": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/Collection"
          }
        }
      },
      "Collections_UnpublishCollection_Response": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/Collection"
          }
        }
      },
      "Collections_CreateContractCollection_Response": {
        "type": "object",
        "properties": {
          "contractCollection": {
            "$ref": "#/components/schemas/ContractCollection"
          }
        }
      },
      "Collections_GetContractCollection_Response": {
        "type": "object",
        "properties": {
          "contractCollection": {
            "$ref": "#/components/schemas/ContractCollection"
          }
        }
      },
      "Collections_ListContractCollections_Response": {
        "type": "object",
        "properties": {
          "contractCollections": {
            "type": "array",
            "description": "[]ContractCollection",
            "items": {
              "$ref": "#/components/schemas/ContractCollection"
            }
          },
          "collections": {
            "type": "array",
            "description": "[]Collection",
            "items": {
              "$ref": "#/components/schemas/Collection"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "Collections_UpdateContractCollection_Response": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          }
        }
      },
      "Collections_DeleteContractCollection_Response": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          }
        }
      },
      "Collections_CreateToken_Response": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/TokenMetadata"
          },
          "assets": {
            "type": "array",
            "description": "[]Asset",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          }
        }
      },
      "Collections_GetToken_Response": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/TokenMetadata"
          },
          "assets": {
            "type": "array",
            "description": "[]Asset",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          }
        }
      },
      "Collections_ListTokens_Response": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "tokens": {
            "type": "array",
            "description": "[]TokenMetadata",
            "items": {
              "$ref": "#/components/schemas/TokenMetadata"
            }
          }
        }
      },
      "Collections_UpdateToken_Response": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/TokenMetadata"
          }
        }
      },
      "Collections_DeleteToken_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      },
      "Collections_CreateAsset_Response": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "Collections_GetAsset_Response": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "Collections_UpdateAsset_Response": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "Collections_DeleteAsset_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "description": "Public project access key for authenticating requests obtained on Sequence Builder. Example Test Key: AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI",
        "name": "X-Access-Key"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Secret JWT token for authenticating requests obtained from Sequence Builder - should not be exposed publicly."
      }
    }
  },
  "info": {
    "title": "Sequence Metadata",
    "version": ""
  },
  "openapi": "3.0.0",
  "paths": {
    "/rpc/Metadata/RefreshTokenMetadata": {
      "post": {
        "summary": "RefreshTokenMetadata",
        "deprecated": true,
        "description": "Deprecated -> Use RefreshContractInfo, RefreshContractTokens or RefreshAllContractTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_RefreshTokenMetadata_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainID": "80002",
                    "contractAddress": "0x70a2177079877e4aae639d1abb29ffa537b99279",
                    "tokenIDs": [
                      0,
                      "1"
                    ],
                    "refreshAll": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_RefreshTokenMetadata_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "taskId": 64137
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/EnqueueTokensForRefresh": {
      "post": {
        "summary": "EnqueueTokensForRefresh",
        "deprecated": true,
        "description": "Deprecated -> RefreshContractTokens or RefreshAllContractTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_EnqueueTokensForRefresh_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainId": "80002",
                    "contractAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                    "tokenIds": [
                      0,
                      "1",
                      2
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_EnqueueTokensForRefresh_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "taskId": 64352
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/RefreshContractInfo": {
      "post": {
        "summary": "RefreshContractInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_RefreshContractInfo_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_RefreshContractInfo_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/RefreshContractTokens": {
      "post": {
        "summary": "RefreshContractTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_RefreshContractTokens_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_RefreshContractTokens_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/RefreshAllContractTokens": {
      "post": {
        "summary": "RefreshAllContractTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_RefreshAllContractTokens_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_RefreshAllContractTokens_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/GetTokenMetadata": {
      "post": {
        "summary": "GetTokenMetadata",
        "description": "GetTokenMetadata - fetch token metadata for a particular contract and respective tokenIDs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_GetTokenMetadata_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainID": "80002",
                    "contractAddress": "0xaf8a08bf8b2945c2779ae507dade15985ea11fbc",
                    "tokenIDs": [
                      "19371963813488842961773981353605630758075094402"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_GetTokenMetadata_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "tokenMetadata": [
                        {
                          "tokenId": "19371963813488842961773981353605630758075094402",
                          "name": "Dragon Shield Shield",
                          "description": "A free AI treasure chest mini-game",
                          "image": "https://metadata.sequence.app/projects/1229/collections/40/tokens/19371963813488842961773981353605630758075094402/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "display_type": "category",
                              "trait_type": "Category",
                              "value": "defensive"
                            },
                            {
                              "display_type": "defense_min",
                              "trait_type": "Defense Minimum",
                              "value": "59"
                            },
                            {
                              "display_type": "defense_max",
                              "trait_type": "Defense Maximum",
                              "value": "67"
                            },
                            {
                              "display_type": "tier",
                              "trait_type": "tier",
                              "value": "共通"
                            },
                            {
                              "display_type": "type",
                              "trait_type": "type",
                              "value": "Shield"
                            }
                          ],
                          "decimals": 0,
                          "updatedAt": "2024-10-10T18:08:04.22766865Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/GetTokenMetadataBatch": {
      "post": {
        "summary": "GetTokenMetadataBatch",
        "description": "GetTokenMetadataBatch allows you to query the token metadata of a batch of contracts and respective tokenIDs where map is contractAddress::[]tokenID => contractAddress::[]TokenMetadata\nNote, we limit each request to 50 contracts max and 50 tokens max per contract.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_GetTokenMetadataBatch_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainID": "80002",
                    "contractTokenMap": {
                      "0x8070c5b48b1ce7b3219660c79b23e8679bfd5041": [
                        0,
                        "1"
                      ],
                      "0x70a2177079877e4aae639d1abb29ffa537b94970": [
                        0,
                        "1",
                        2,
                        "3",
                        "4",
                        "5"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_GetTokenMetadataBatch_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "contractTokenMetadata": {
                        "0x70a2177079877e4aae639d1abb29ffa537b94970": [
                          {
                            "tokenId": 0,
                            "name": "Divine Axe #160",
                            "description": "This legendary axe, blessed by ancient gods, capable of shattering mountains.",
                            "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/0/image.png",
                            "properties": null,
                            "attributes": [
                              {
                                "sharpness": 1120
                              },
                              {
                                "attackPower": 463
                              },
                              {
                                "weight": 700
                              },
                              {
                                "criticalHitChance": 1218
                              }
                            ],
                            "updatedAt": "2024-11-01T08:29:29.848063928Z"
                          },
                          {
                            "tokenId": "1",
                            "name": "Divine Axe #724",
                            "description": "This powerful axe, blessed by ancient gods, with the power to summon storms.",
                            "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/1/image.png",
                            "properties": null,
                            "attributes": [
                              {
                                "speed": 1491
                              },
                              {
                                "edgeRetention": 1198
                              },
                              {
                                "criticalHitChance": 370
                              },
                              {
                                "attackPower": 396
                              }
                            ],
                            "updatedAt": "2024-11-01T08:29:29.848063928Z"
                          },
                          {
                            "tokenId": 2,
                            "name": "Divine Axe #819",
                            "description": "This ancient axe, blessed by ancient gods, capable of shattering mountains.",
                            "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/2/image.png",
                            "properties": null,
                            "attributes": [
                              {
                                "balance": 81
                              },
                              {
                                "edgeRetention": 283
                              },
                              {
                                "sharpness": 105
                              },
                              {
                                "durability": 338
                              }
                            ],
                            "updatedAt": "2024-11-01T08:29:29.848063928Z"
                          },
                          {
                            "tokenId": "3",
                            "name": "Divine Axe #948",
                            "description": "This enchanted axe, crafted by the hands of giants, which never dulls.",
                            "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/3/image.png",
                            "properties": null,
                            "attributes": [
                              {
                                "speed": 1314
                              },
                              {
                                "balance": 1235
                              },
                              {
                                "weight": 48
                              },
                              {
                                "magic": 826
                              }
                            ],
                            "updatedAt": "2024-11-01T08:29:29.848063928Z"
                          },
                          {
                            "tokenId": "4",
                            "name": "Divine Axe #031",
                            "description": "This powerful axe, forged in the fires of a dying star, which never dulls.",
                            "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/4/image.png",
                            "properties": null,
                            "attributes": [
                              {
                                "speed": 1144
                              },
                              {
                                "elementalAffinity": 1315
                              },
                              {
                                "edgeRetention": 1128
                              },
                              {
                                "sharpness": 1232
                              }
                            ],
                            "updatedAt": "2024-11-01T08:29:29.848063928Z"
                          },
                          {
                            "tokenId": "5",
                            "name": "Divine Axe #452",
                            "description": "This enchanted axe, crafted by the hands of giants, with the power to summon storms.",
                            "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/5/image.png",
                            "properties": null,
                            "attributes": [
                              {
                                "elementalAffinity": 803
                              },
                              {
                                "durability": 83
                              },
                              {
                                "criticalHitChance": 268
                              },
                              {
                                "balance": 1039
                              }
                            ],
                            "updatedAt": "2024-11-01T08:29:29.848063928Z"
                          }
                        ],
                        "0x8070c5b48b1ce7b3219660c79b23e8679bfd5041": [
                          {
                            "tokenId": 0,
                            "name": "Test nft erc721",
                            "description": "説明",
                            "image": "https://metadata.sequence.app/projects/30957/collections/273/tokens/0/image.jpg",
                            "properties": {
                              "armor": "100"
                            },
                            "attributes": null,
                            "updatedAt": "2024-11-01T08:18:33.514523974Z"
                          },
                          {
                            "tokenId": "1",
                            "name": "NFT 2 Amoy",
                            "description": "説明",
                            "image": "https://metadata.sequence.app/projects/30957/collections/273/tokens/1/image.jpg",
                            "properties": null,
                            "attributes": null,
                            "updatedAt": "2024-11-01T08:18:33.514523974Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/SearchTokenMetadata": {
      "post": {
        "summary": "SearchTokenMetadata",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_SearchTokenMetadata_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainID": "80002",
                    "contractAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                    "filter": {
                      "text": "Divine"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_SearchTokenMetadata_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "page": {
                        "pageSize": 10,
                        "more": false
                      },
                      "tokenMetadata": [
                        {
                          "tokenId": 0,
                          "name": "Divine Axe #160",
                          "description": "This legendary axe, blessed by ancient gods, capable of shattering mountains.",
                          "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/0/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "sharpness": 1120
                            },
                            {
                              "attackPower": 463
                            },
                            {
                              "weight": 700
                            },
                            {
                              "criticalHitChance": 1218
                            }
                          ],
                          "updatedAt": "0001-01-01T00:00:00Z"
                        },
                        {
                          "tokenId": "1",
                          "name": "Divine Axe #724",
                          "description": "This powerful axe, blessed by ancient gods, with the power to summon storms.",
                          "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/1/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "speed": 1491
                            },
                            {
                              "edgeRetention": 1198
                            },
                            {
                              "criticalHitChance": 370
                            },
                            {
                              "attackPower": 396
                            }
                          ],
                          "updatedAt": "0001-01-01T00:00:00Z"
                        },
                        {
                          "tokenId": 2,
                          "name": "Divine Axe #819",
                          "description": "This ancient axe, blessed by ancient gods, capable of shattering mountains.",
                          "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/2/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "balance": 81
                            },
                            {
                              "edgeRetention": 283
                            },
                            {
                              "sharpness": 105
                            },
                            {
                              "durability": 338
                            }
                          ],
                          "updatedAt": "0001-01-01T00:00:00Z"
                        },
                        {
                          "tokenId": "3",
                          "name": "Divine Axe #948",
                          "description": "This enchanted axe, crafted by the hands of giants, which never dulls.",
                          "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/3/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "speed": 1314
                            },
                            {
                              "balance": 1235
                            },
                            {
                              "weight": 48
                            },
                            {
                              "magic": 826
                            }
                          ],
                          "updatedAt": "0001-01-01T00:00:00Z"
                        },
                        {
                          "tokenId": "4",
                          "name": "Divine Axe #031",
                          "description": "This powerful axe, forged in the fires of a dying star, which never dulls.",
                          "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/4/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "speed": 1144
                            },
                            {
                              "elementalAffinity": 1315
                            },
                            {
                              "edgeRetention": 1128
                            },
                            {
                              "sharpness": 1232
                            }
                          ],
                          "updatedAt": "0001-01-01T00:00:00Z"
                        },
                        {
                          "tokenId": "5",
                          "name": "Divine Axe #452",
                          "description": "This enchanted axe, crafted by the hands of giants, with the power to summon storms.",
                          "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/5/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "elementalAffinity": 803
                            },
                            {
                              "durability": 83
                            },
                            {
                              "criticalHitChance": 268
                            },
                            {
                              "balance": 1039
                            }
                          ],
                          "updatedAt": "0001-01-01T00:00:00Z"
                        },
                        {
                          "tokenId": "6",
                          "name": "Divine Axe #689",
                          "description": "This cursed axe, forged in the fires of a dying star, which never dulls.",
                          "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/6/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "speed": 1088
                            },
                            {
                              "elementalAffinity": 1195
                            },
                            {
                              "magic": 1398
                            },
                            {
                              "sharpness": 1069
                            }
                          ],
                          "updatedAt": "0001-01-01T00:00:00Z"
                        },
                        {
                          "tokenId": "7",
                          "name": "Divine Axe #759",
                          "description": "This ancient axe, blessed by ancient gods, with the power to summon storms.",
                          "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/7/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "balance": 670
                            },
                            {
                              "elementalAffinity": 514
                            },
                            {
                              "weight": 146
                            },
                            {
                              "edgeRetention": 747
                            }
                          ],
                          "updatedAt": "0001-01-01T00:00:00Z"
                        },
                        {
                          "tokenId": "8",
                          "name": "Divine Axe #599",
                          "description": "This enchanted axe, crafted by the hands of giants, capable of shattering mountains.",
                          "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/8/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "criticalHitChance": 375
                            },
                            {
                              "weight": 531
                            },
                            {
                              "speed": 1300
                            },
                            {
                              "edgeRetention": 368
                            }
                          ],
                          "updatedAt": "0001-01-01T00:00:00Z"
                        },
                        {
                          "tokenId": "9",
                          "name": "Divine Axe #364",
                          "description": "This cursed axe, imbued with the souls of fallen warriors, which never dulls.",
                          "image": "https://metadata.sequence.app/projects/30957/collections/819/tokens/9/image.png",
                          "properties": null,
                          "attributes": [
                            {
                              "weight": 109
                            },
                            {
                              "balance": 395
                            },
                            {
                              "durability": 863
                            },
                            {
                              "speed": 484
                            }
                          ],
                          "updatedAt": "0001-01-01T00:00:00Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/SearchTokenIDs": {
      "post": {
        "summary": "SearchTokenIDs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_SearchTokenIDs_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainID": "80002",
                    "contractAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                    "filter": {
                      "text": "Divine"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_SearchTokenIDs_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "page": null,
                      "tokenIds": [
                        0,
                        "1",
                        2,
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/TokenCollectionFilters": {
      "post": {
        "summary": "TokenCollectionFilters",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_TokenCollectionFilters_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainId": "80002",
                    "contractAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_TokenCollectionFilters_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "filters": [
                        {
                          "name": "Rarity",
                          "type": "STRING",
                          "min": null,
                          "max": null,
                          "values": [
                            "Rare"
                          ]
                        },
                        {
                          "name": "型",
                          "type": "STRING",
                          "min": null,
                          "max": null,
                          "values": [
                            "Knife"
                          ]
                        },
                        {
                          "name": "Model",
                          "type": "STRING",
                          "min": null,
                          "max": null,
                          "values": [
                            "Butterfly"
                          ]
                        },
                        {
                          "name": "Condition",
                          "type": "STRING",
                          "min": null,
                          "max": null,
                          "values": [
                            "Slightly Used (SU)"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/GetContractInfo": {
      "post": {
        "summary": "GetContractInfo",
        "description": "Contract Info -- returns contract meta-info for contracts found in registered chain's token-lists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_GetContractInfo_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainID": "80002",
                    "contractAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_GetContractInfo_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "contractInfo": {
                        "chainId": "80002",
                        "address": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                        "name": "Placeholders",
                        "type": "ERC721",
                        "symbol": "",
                        "logoURI": "https://metadata.sequence.app/projects/30957/collections/819/image.png",
                        "deployed": true,
                        "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                        "extensions": {
                          "link": "",
                          "description": "Placeholders collection",
                          "ogImage": "https://metadata.sequence.app/projects/30957/collections/819/image.png",
                          "ogName": "Vault for Sales",
                          "originChainId": 0,
                          "originAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                          "verified": true,
                          "verifiedBy": "token-directory"
                        },
                        "updatedAt": "2024-10-22T21:10:39.267327075Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/GetContractInfoBatch": {
      "post": {
        "summary": "GetContractInfoBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_GetContractInfoBatch_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainID": "80002",
                    "contractAddresses": [
                      "0x33c7848db3d37103718736d233f0db65cc222b1e",
                      "0x70a2177071177e4aae639d1abb23ffa537b94970"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_GetContractInfoBatch_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "contractInfoMap": {
                        "0x33c7848db3d37103718736d233f0db65cc222b1e": {
                          "chainId": "80002",
                          "address": "0x33c7848db3d37103718736d233f0db65cc222b1e",
                          "name": "Knives",
                          "type": "ERC1155",
                          "symbol": "",
                          "logoURI": "https://metadata.sequence.app/projects/35598/collections/827/image.png",
                          "deployed": true,
                          "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                          "extensions": {
                            "link": "https://baseurl/collections/collectioname",
                            "description": "All knives from Alternates can be found in this category.",
                            "ogImage": "https://metadata.sequence.app/projects/35598/collections/827/image.png",
                            "ogName": "Knives",
                            "originChainId": 0,
                            "originAddress": "0x33c7848db3d37103718736d233f0db65cc222b1e",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-10-23T06:12:24.243404151Z"
                        },
                        "0x70a2177071177e4aae639d1abb23ffa537b94970": {
                          "chainId": "80002",
                          "address": "0x70a2177071177e4aae639d1abb23ffa537b94970",
                          "name": "Placeholders",
                          "type": "ERC721",
                          "symbol": "",
                          "logoURI": "https://metadata.sequence.app/projects/30957/collections/819/image.png",
                          "deployed": true,
                          "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                          "extensions": {
                            "link": "",
                            "description": "Placeholders collection",
                            "ogImage": "https://metadata.sequence.app/projects/30957/collections/819/image.png",
                            "ogName": "Vault for Sales",
                            "originChainId": 0,
                            "originAddress": "0x70a2177071177e4aae639d1abb23ffa537b94970",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-10-23T05:53:19.171080211Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/SearchContractInfo": {
      "post": {
        "summary": "SearchContractInfo",
        "description": "Search Contract Info across all chains token-lists. Similar to GetContractInfo above, but it will traverse all chains and results from all.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_SearchContractInfo_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "contractAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_SearchContractInfo_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "contractInfoList": [
                        {
                          "chainId": "80002",
                          "address": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                          "name": "Placeholders",
                          "type": "ERC721",
                          "symbol": "",
                          "logoURI": "https://metadata.sequence.app/projects/30957/collections/819/image.png",
                          "deployed": true,
                          "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                          "extensions": {
                            "link": "",
                            "description": "Placeholders collection",
                            "ogImage": "https://metadata.sequence.app/projects/30957/collections/819/image.png",
                            "ogName": "Vault for Sales",
                            "originChainId": 0,
                            "originAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-10-23T05:53:19.171080211Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/SearchContractInfoBatch": {
      "post": {
        "summary": "SearchContractInfoBatch",
        "description": "map of contractAddress :: []ContractInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_SearchContractInfoBatch_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "contractAddresses": [
                      "0x70a2177079877e4aae639d1abb29ffa537b94970"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_SearchContractInfoBatch_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "contractInfoByChain": {
                        "0x70a2177079877e4aae639d1abb29ffa537b94970": [
                          {
                            "chainId": "80002",
                            "address": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                            "name": "Placeholders",
                            "type": "ERC721",
                            "symbol": "",
                            "logoURI": "https://metadata.sequence.app/projects/30957/collections/819/image.png",
                            "deployed": true,
                            "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                            "extensions": {
                              "link": "",
                              "description": "Placeholders collection",
                              "ogImage": "https://metadata.sequence.app/projects/30957/collections/819/image.png",
                              "ogName": "Vault for Sales",
                              "originChainId": 0,
                              "originAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                              "verified": true,
                              "verifiedBy": "token-directory"
                            },
                            "updatedAt": "2024-10-23T05:53:19.171080211Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/SearchMetadata": {
      "post": {
        "summary": "SearchMetadata",
        "deprecated": true,
        "description": "Deprecated: Use SearchTokens() and SearchContracts() instead.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_SearchMetadata_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_SearchMetadata_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/SearchTokens": {
      "post": {
        "summary": "SearchTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_SearchTokens_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainID": "80002",
                    "q": "skyweaver"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_SearchTokens_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "tokenMetadata": [
                        {
                          "tokenId": "107",
                          "name": "Season 0 Floof 107",
                          "description": "",
                          "image": "https://nft.flooftopia.org/images/Floof_80001_107.png",
                          "properties": {
                            "000_season": {
                              "name": "season",
                              "value": "Season 0"
                            },
                            "005_floofId": {
                              "name": "Floof ID",
                              "value": "107"
                            },
                            "010_head_indices_shape": {
                              "name": "Head Shape",
                              "value": "Egg"
                            },
                            "015_head_indices_nose": {
                              "name": "Nose",
                              "value": "Dog Nose"
                            },
                            "020_head_indices_mouth": {
                              "name": "Mouth",
                              "value": "Smiley"
                            },
                            "025_head_indices_ears": {
                              "name": "Ears",
                              "value": "Curly Loppy"
                            },
                            "030_head_shape": {
                              "name": "Head Shape Options",
                              "value": [
                                "4",
                                2,
                                -8
                              ]
                            },
                            "035_head_eye": {
                              "name": "Eye Options",
                              "value": [
                                2,
                                21,
                                -38
                              ]
                            },
                            "040_head_eyeColor": {
                              "name": "Eye Color",
                              "value": "(R=0.018500,G=0.001214,B=0.009721,A=1.000000)"
                            },
                            "045_head_nose": {
                              "name": "Nose Options",
                              "value": [
                                -22,
                                -6
                              ]
                            },
                            "050_head_mouth": {
                              "name": "Mouth Options",
                              "value": [
                                -61,
                                61
                              ]
                            },
                            "055_head_ears": {
                              "name": "Ears Options",
                              "value": [
                                19,
                                14,
                                "4"
                              ]
                            },
                            "060_fur_indices_length": {
                              "name": "Fur Length",
                              "value": "Short"
                            },
                            "065_fur_indices_pattern": {
                              "name": "Fur Pattern",
                              "value": "Patches"
                            },
                            "070_fur_color": {
                              "name": "Fur Color",
                              "value": "(R=0.361307,G=0.155926,B=0.012286,A=1.000000)"
                            },
                            "075_fur_color_pattern": {
                              "name": "Pattern Color",
                              "value": "(R=0.016807,G=0.001214,B=0.005182,A=1.000000)"
                            },
                            "080_fur_pattern": {
                              "name": "Fur Pattern Options",
                              "value": [
                                -45,
                                50
                              ]
                            },
                            "085_extras_indices_attachments": {
                              "name": "Attachment",
                              "value": "Deer Antlers"
                            },
                            "090_extras_indices_tail": {
                              "name": "Tail",
                              "value": "Fox Tail"
                            },
                            "095_extras_attachments": {
                              "name": "Attachment Options",
                              "value": [
                                -4,
                                -18,
                                -16
                              ]
                            },
                            "100_extras_tail": {
                              "name": "Tail Options",
                              "value": [
                                -61,
                                14
                              ]
                            },
                            "200_background_sky": {
                              "name": "Background Sky",
                              "value": "Blue Sky"
                            },
                            "205_background_middle": {
                              "name": "Background Middle",
                              "value": "Mountains"
                            },
                            "210_background_ground": {
                              "name": "Background Ground",
                              "value": "Grassy Field"
                            },
                            "215_background_item_l": {
                              "name": "Background Left Item",
                              "value": "Present"
                            },
                            "220_background_item_r": {
                              "name": "Background Right Item",
                              "value": "Skyweaver"
                            }
                          },
                          "attributes": null,
                          "external_url": "https://www.flooftopia.org",
                          "decimals": 0,
                          "updatedAt": "2023-11-16T19:48:51.110477Z"
                        }
                      ],
                      "nextPage": {
                        "page": 2,
                        "pageSize": 30,
                        "more": true
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/SearchContracts": {
      "post": {
        "summary": "SearchContracts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_SearchContracts_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "chainID": "137",
                    "q": "skyweaver"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_SearchContracts_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "contractInfo": [
                        {
                          "chainId": "137",
                          "address": "0x6310c8c6190d99e60422307e75d7770fd1f519d4",
                          "name": "Skyweaver Payment Proxy",
                          "type": "UNKNOWN",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x8a5479c4349518592d41456e7e6983cab19fc4b71f9fce257d3bb5eaec6001bf",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": false
                          },
                          "updatedAt": "2024-02-28T19:52:03.42984Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x9b609bf3a3977ee7254210e0a0d835251540c4d5",
                          "name": "Skyweaver Niftyswap",
                          "type": "UNKNOWN",
                          "symbol": "SWAP",
                          "logoURI": "https://assets.skyweaver.net/latest/sw-swap.png",
                          "deployed": true,
                          "bytecodeHash": "0xa04f6e37cbe77c331383504e172081eb95e8ef7aea51ad38c3f313c49422ecad",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.348913Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0xb5c3023dbece7a6bb78014000cd1c8ce940b50a0",
                          "name": "Skyweaver Market Fee",
                          "type": "UNKNOWN",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.348925Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x2f88096676ea7491305c82752f87a4df73e77a5c",
                          "name": "Skyweaver Niftyswap",
                          "type": "UNKNOWN",
                          "symbol": "SWAP",
                          "logoURI": "https://assets.skyweaver.net/latest/sw-swap.png",
                          "deployed": true,
                          "bytecodeHash": "0xb29d8f6581dc0b517b09690a2d320e8b491b843058853b1d02becd97d0a0364d",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "blacklist": true,
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.348965Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x86815cd8a85414a032e631f375f966a6cc366f9f",
                          "name": "Skyweaver Conquest",
                          "type": "UNKNOWN",
                          "symbol": "CONQUEST",
                          "logoURI": "https://assets.skyweaver.net/iYyh8-Op/webapp/icons/conquest-ticket-splash.png",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.348953Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x58d82d9fb669aec50832f3703698479ff7567559",
                          "name": "Skyweaver Niftyswap (local)",
                          "type": "UNKNOWN",
                          "symbol": "SWAP",
                          "logoURI": "https://assets.skyweaver.net/latest/sw-swap.png",
                          "deployed": true,
                          "bytecodeHash": "0x81fdabb11cb9f9ff9b95fa3af750edbb2f3ca4f85e16ee2ee0144ce31e0ab973",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.348997Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0xa841aa6805957486cc2e30bb30b737e3f5b14e17",
                          "name": "Skyweaver Conquest Tickets Factory",
                          "type": "UNKNOWN",
                          "symbol": "GET-CONQUEST",
                          "logoURI": "https://assets.skyweaver.net/iYyh8-Op/webapp/icons/conquest-ticket-splash.png",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "blacklist": true,
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.349016Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x742ac8f575563f090abc70e5ca19932472ec76ef",
                          "name": "Skyweaver Conquest Tickets Factory (stg)",
                          "type": "UNKNOWN",
                          "symbol": "GET-CONQUEST",
                          "logoURI": "https://assets.skyweaver.net/iYyh8-Op/webapp/icons/conquest-ticket-splash.png",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.349041Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x85117852a3dea4fa50afff171b9b09a4d83c8e4f",
                          "name": "Skyweaver Conquest",
                          "type": "UNKNOWN",
                          "symbol": "CONQUEST",
                          "logoURI": "https://assets.skyweaver.net/iYyh8-Op/webapp/icons/conquest-ticket-splash.png",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "blacklist": true,
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.349047Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0xedbdeb151e1cd111df8ec4a6d88719f415c5fdd7",
                          "name": "Skyweaver Conquest (dev)",
                          "type": "UNKNOWN",
                          "symbol": "CONQUEST",
                          "logoURI": "https://assets.skyweaver.net/iYyh8-Op/webapp/icons/conquest-ticket-splash.png",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.349053Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x9bc4bd99b0eac905dcc7a9f52d0b1fa1d72cd532",
                          "name": "Skyweaver Conquest (local)",
                          "type": "UNKNOWN",
                          "symbol": "CONQUEST",
                          "logoURI": "https://assets.skyweaver.net/iYyh8-Op/webapp/icons/conquest-ticket-splash.png",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.349059Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0xdc9df33d9bad1ca9a9220b5f3d65865a84a8d528",
                          "name": "Skyweaver Conquest (stg)",
                          "type": "UNKNOWN",
                          "symbol": "CONQUEST",
                          "logoURI": "https://assets.skyweaver.net/iYyh8-Op/webapp/icons/conquest-ticket-splash.png",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.349065Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x12faf77beab96a21593fc32734be1178346f17e6",
                          "name": "Skyweaver Payment Proxy",
                          "type": "UNKNOWN",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x8a5479c4349518592d41456e7e6983cab19fc4b71f9fce257d3bb5eaec6001bf",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": false
                          },
                          "updatedAt": "2024-03-11T20:20:38.740017Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x8e0079a2452f71558f13f0facb65d43e376d4f20",
                          "name": "Skyweaver Payment Proxy",
                          "type": "UNKNOWN",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x2b4204c124e194df7080ef85312509b7161980e9da5d565fcb18a2770e457289",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": false
                          },
                          "updatedAt": "2024-03-11T20:26:53.048209Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x96897146606c7d16b208891e74bc5db9d0faa3af",
                          "name": "Skyweaver Payment Proxy",
                          "type": "UNKNOWN",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x2b4204c124e194df7080ef85312509b7161980e9da5d565fcb18a2770e457289",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": false
                          },
                          "updatedAt": "2024-03-01T00:03:03.436606Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0xa3db84c3d8003f93b6890bb5a291237a408c61cf",
                          "name": "Skyweaver Sam's Avatars",
                          "type": "ERC20",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0xcf86b412cad75b8679f7f2810e4865a977de8fb4a657d83d144d740edd4a0e2e",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": false
                          },
                          "updatedAt": "2023-11-24T16:58:29.125983Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x86442a7180ed2bb304d5304ed5ac66e041eeb623",
                          "name": "Skyweaver Payment Proxy",
                          "type": "UNKNOWN",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x2b4204c124e194df7080ef85312509b7161980e9da5d565fcb18a2770e457289",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": false
                          },
                          "updatedAt": "2024-03-12T18:39:34.447134Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x787efdb84e94abc631e5a1983c937d220529b94c",
                          "name": "Skyweaver Treasury",
                          "type": "UNKNOWN",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.348938Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x059d3242ded5bad6008ed0899f5e0e22cab0586a",
                          "name": "Skyweaver Conquest Tickets Factory",
                          "type": "UNKNOWN",
                          "symbol": "GET-CONQUEST",
                          "logoURI": "https://assets.skyweaver.net/iYyh8-Op/webapp/icons/conquest-ticket-splash.png",
                          "deployed": true,
                          "bytecodeHash": "0x61d1bd5e3a4d5c9c380d3b6cf970f96d63ae1376d55a2c1205869d1f5ef770f7",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.348946Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x00a33f640f8b4efd6a154270fcdbf288d17d4385",
                          "name": "Skyweaver Niftyswap (dev old)",
                          "type": "UNKNOWN",
                          "symbol": "SWAP",
                          "logoURI": "https://assets.skyweaver.net/latest/sw-swap.png",
                          "deployed": true,
                          "bytecodeHash": "0x24cd2c7fa8e95fd37d27f97497f08d207895c52b9c318973cfa43121dbbd8da7",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.348973Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x7f6b2bb2217f2cdccd304cb04c4bf98704d30d54",
                          "name": "Skyweaver Niftyswap (dev)",
                          "type": "UNKNOWN",
                          "symbol": "SWAP",
                          "logoURI": "https://assets.skyweaver.net/latest/sw-swap.png",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.348981Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x95584e36255681f5335702057e150a02cc9a3032",
                          "name": "Skyweaver Niftyswap (stg)",
                          "type": "UNKNOWN",
                          "symbol": "SWAP",
                          "logoURI": "https://assets.skyweaver.net/latest/sw-swap.png",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.349007Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x241c42c409c4ba4f449ec9cf3b5b853a4a5e8d4c",
                          "name": "Skyweaver Conquest Tickets Factory (dev)",
                          "type": "UNKNOWN",
                          "symbol": "GET-CONQUEST",
                          "logoURI": "https://assets.skyweaver.net/iYyh8-Op/webapp/icons/conquest-ticket-splash.png",
                          "deployed": true,
                          "bytecodeHash": "0x448b201ec52b593a425f3f002309c52830dd1928aac61b4826264613f8ac81b0",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.349026Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x2e7dd4b107e7449700df4eb74df910443b0a8acf",
                          "name": "Skyweaver Conquest Tickets Factory (local)",
                          "type": "UNKNOWN",
                          "symbol": "GET-CONQUEST",
                          "logoURI": "https://assets.skyweaver.net/iYyh8-Op/webapp/icons/conquest-ticket-splash.png",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-06-24T14:56:10.349034Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0xaf23b2199fd8a4f0d47a587c6403db534f131f8e",
                          "name": "Big Skyweaver",
                          "type": "ERC1155",
                          "symbol": "Big Skyweaver",
                          "deployed": true,
                          "bytecodeHash": "0xa2a2f71551a15ee9e88d5be5f3a0d1716fb9a758d7f525b73d25368d1bca60e5",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": false
                          },
                          "updatedAt": "2024-09-19T08:30:23.53885Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x6dba7e0065d43e61412c55fddc3214e371101ad4",
                          "name": "Skyweaver Payment Proxy",
                          "type": "UNKNOWN",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0xa1275962bd7967e5e8ce1d31a731aa230605cebbf841d8967a910023d1b38ef1",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": false
                          },
                          "updatedAt": "2024-03-01T00:03:03.436612Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0xd6e5ad42107196628229bda2e4ddf83a740b0891",
                          "name": "Light Skyweaver",
                          "type": "ERC1155",
                          "symbol": "Light Skyweaver",
                          "deployed": true,
                          "bytecodeHash": "0xa2a2f71551a15ee9e88d5be5f3a0d1716fb9a758d7f525b73d25368d1bca60e5",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": false
                          },
                          "updatedAt": "2024-07-26T10:30:37.613067Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x7fb40ba8fbff2b115f72ebd12648488619924f4d",
                          "name": "Tiny Skyweaver",
                          "type": "ERC1155",
                          "symbol": "Tiny Skyweaver",
                          "deployed": true,
                          "bytecodeHash": "0xa2a2f71551a15ee9e88d5be5f3a0d1716fb9a758d7f525b73d25368d1bca60e5",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": false
                          },
                          "updatedAt": "2024-09-29T06:52:52.198645Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x631998e91476da5b870d741192fc5cbc55f5a52e",
                          "name": "Skyweaver",
                          "type": "ERC1155",
                          "symbol": "SKYWVR",
                          "logoURI": "https://assets.skyweaver.net/_tX5dRVi/webapp/icons/skyweaver-token.png",
                          "deployed": true,
                          "bytecodeHash": "0x0b3a422ea307987db0bc40c75566bf4ad0d4fcd617916032e73757f2a4017539",
                          "extensions": {
                            "link": "https://www.skyweaver.net/",
                            "description": "Skyweaver is a Free-to-Play, trading card game powered by Polygon and Ethereum.",
                            "ogImage": "https://skyweaver.net/images/skyweavercover.jpg",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "0x631998e91476da5b870d741192fc5cbc55f5a52e",
                            "verified": true,
                            "verifiedBy": "token-directory",
                            "featured": true
                          },
                          "updatedAt": "2024-08-13T15:44:12.355679Z"
                        },
                        {
                          "chainId": "137",
                          "address": "0x5151bfa48249c57695336c66d51054c9367f6d33",
                          "name": "Skyweaver",
                          "type": "ERC1155",
                          "symbol": "SKYWVR",
                          "logoURI": "https://assets.skyweaver.net/wiu-vYUH/webapp/icons/skyweaver-token.png",
                          "deployed": true,
                          "bytecodeHash": "0xacf498e88ebcfaa0f9074db9d49486392a93b507149a0163c506eacb12864739",
                          "extensions": {
                            "link": "https://www.skyweaver.net/",
                            "description": "Skyweaver is a Free-to-Play, trading card game powered by Ethereum.",
                            "ogImage": "https://skyweaver.net/images/skyweavercover.jpg",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "0x5151bfa48249c57695336c66d51054c9367f6d33",
                            "blacklist": true,
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-08-13T15:44:12.355679Z"
                        }
                      ],
                      "nextPage": {
                        "page": 2,
                        "pageSize": 30,
                        "more": true
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/DirectoryGetNetworks": {
      "post": {
        "summary": "DirectoryGetNetworks",
        "description": "Token Directory. NOTE: this only searches the 'token-directory' items. Use 'SearchContracts' or 'SearchTokens' for everything else.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_DirectoryGetNetworks_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "includeTestnets": true,
                    "onlyFeatured": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_DirectoryGetNetworks_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "networks": [
                        84532,
                        19011,
                        42161,
                        168587773,
                        43114,
                        42170,
                        10,
                        37714555429,
                        21000000,
                        "100",
                        11155111,
                        8453,
                        "137",
                        1946,
                        1993,
                        "80002",
                        97,
                        40875,
                        43113,
                        "1",
                        37084624,
                        "5",
                        80001,
                        3776,
                        6038361,
                        660279,
                        421614,
                        33111,
                        1101,
                        33139,
                        56
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Metadata/DirectoryGetCollections": {
      "post": {
        "summary": "DirectoryGetCollections",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metadata_DirectoryGetCollections_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "includeTestnets": true,
                    "onlyFeatured": false,
                    "chainId": "80002"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata_DirectoryGetCollections_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "collections": [
                        {
                          "chainId": "80002",
                          "address": "0xecfda15b60f2090b9c2c678910889e49e7edaab8",
                          "name": "colecction 3 de las uan",
                          "type": "ERC721",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                          "extensions": {
                            "link": "",
                            "description": "test en poligon",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-08-20T15:53:43.971994Z"
                        },
                        {
                          "chainId": "80002",
                          "address": "0xd67dd82a97b21dafc1c62671e6909d22741c8235",
                          "name": "Tester Contract For Indexer Subscriptions",
                          "type": "UNKNOWN",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-08-01T14:30:37.100518Z"
                        },
                        {
                          "chainId": "80002",
                          "address": "0xa1b52a27a68f77db09e57defc912eab802500278",
                          "name": "Toys",
                          "type": "ERC1155",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                          "extensions": {
                            "link": "",
                            "description": "",
                            "ogImage": "",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-08-20T15:53:45.705423Z"
                        },
                        {
                          "chainId": "80002",
                          "address": "0x4442e4878d60b13c0bca9ceb6b0bab82eaa03d56",
                          "name": "demo collection",
                          "type": "ERC1155",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                          "extensions": {
                            "link": "",
                            "description": "demo collection description",
                            "ogImage": "https://metadata.sequence.app/projects/38573/collections/713/image.jpg",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-09-09T08:49:47.852638Z"
                        },
                        {
                          "chainId": "80002",
                          "address": "0x9559e7958d4729cf7ed4d9ff58a3ae1704800500",
                          "name": "Prueba-0",
                          "type": "ERC721",
                          "symbol": "",
                          "deployed": true,
                          "bytecodeHash": "0x77d12b9637a99b3ba23920eea929a68cc89b49a0e1ff4d2a71b798550cc0060e",
                          "extensions": {
                            "link": "https://www.google.com",
                            "description": "Collection description",
                            "ogImage": "https://metadata.sequence.app/projects/30957/collections/552/image.png",
                            "ogName": "",
                            "originChainId": 0,
                            "originAddress": "",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-08-20T15:53:47.072029Z"
                        },
                        {
                          "chainId": "80002",
                          "address": "0x2b1e643324b3c479aa0803664637586493c3c204",
                          "name": "Weapons",
                          "type": "ERC1155",
                          "symbol": "",
                          "logoURI": "https://metadata.sequence.app/projects/35598/collections/620/image.png",
                          "deployed": true,
                          "bytecodeHash": "0xed47946e266a404fc37371df08eefdebb2fccba9ebe60c6ca8b467e1dd554ae0",
                          "extensions": {
                            "link": "https://baseurl/collections/collectioname",
                            "description": "All weapons from Alternates can be found in this category.",
                            "ogImage": "https://metadata.sequence.app/projects/35598/collections/620/image.png",
                            "ogName": "Weapons 1155",
                            "originChainId": 0,
                            "originAddress": "0x2b1e643324b3c479aa0803664637586493c3c204",
                            "verified": true,
                            "verifiedBy": "token-directory"
                          },
                          "updatedAt": "2024-10-03T09:49:56.459325Z"
                        }
                      ],
                      "page": {
                        "page": 2,
                        "pageSize": 30,
                        "more": true
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "public"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/CreateCollection": {
      "post": {
        "summary": "CreateCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_CreateCollection_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "collection": {
                      "projectId": 30957,
                      "private": true,
                      "metadata": {
                        "name": "Sandbox Chronicles",
                        "description": "A collection of test cases designed to push the boundaries of your API. Whether you’re validating edge cases, simulating real-world scenarios, or just experimenting with wild inputs, this suite ensures your endpoints are battle-tested and ready for anything. Perfect for developers who embrace the unexpected and thrive on precision.",
                        "externalLink": "https://sequence.xyz/",
                        "properties": {
                          "maxNfts": 22,
                          "minNfts": "4",
                          "funCollection": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_CreateCollection_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "collection": {
                        "id": 887,
                        "projectId": 30957,
                        "metadata": {
                          "name": "Sandbox Chronicles",
                          "description": "A collection of test cases designed to push the boundaries of your API. Whether you’re validating edge cases, simulating real-world scenarios, or just experimenting with wild inputs, this suite ensures your endpoints are battle-tested and ready for anything. Perfect for developers who embrace the unexpected and thrive on precision.",
                          "properties": {
                            "funCollection": true,
                            "maxNfts": 22,
                            "minNfts": "4"
                          }
                        },
                        "private": true,
                        "createdAt": "2024-10-23T06:56:39.027843Z",
                        "updatedAt": "2024-10-23T06:56:39.027843Z",
                        "baseURIs": {
                          "contractMetadataURI": "https://metadata.sequence.app/projects/30957/collections/887.json",
                          "tokenMetadataURI": "https://metadata.sequence.app/projects/30957/collections/887/tokens/"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/GetCollection": {
      "post": {
        "summary": "GetCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_GetCollection_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "collectionId": 887
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_GetCollection_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "collection": {
                        "id": 887,
                        "projectId": 30957,
                        "metadata": {
                          "name": "Sandbox Chronicles",
                          "description": "A collection of test cases designed to push the boundaries of your API. Whether you’re validating edge cases, simulating real-world scenarios, or just experimenting with wild inputs, this suite ensures your endpoints are battle-tested and ready for anything. Perfect for developers who embrace the unexpected and thrive on precision.",
                          "properties": {
                            "funCollection": true,
                            "maxNfts": 22,
                            "minNfts": "4"
                          }
                        },
                        "private": true,
                        "tokenCount": 0,
                        "createdAt": "2024-10-23T06:56:39.027843Z",
                        "updatedAt": "2024-10-23T06:56:39.027843Z",
                        "baseURIs": {
                          "contractMetadataURI": "https://metadata.sequence.app/projects/30957/collections/887.json",
                          "tokenMetadataURI": "https://metadata.sequence.app/projects/30957/collections/887/tokens/"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/ListCollections": {
      "post": {
        "summary": "ListCollections",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_ListCollections_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_ListCollections_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "page": {
                        "pageSize": 30,
                        "more": false
                      },
                      "collections": [
                        {
                          "id": 265,
                          "projectId": 30957,
                          "metadata": {
                            "name": "Mystic Horizons",
                            "description": ""
                          },
                          "private": false,
                          "tokenCount": "3",
                          "createdAt": "2024-05-31T04:17:14.093787Z",
                          "updatedAt": "2024-10-22T15:16:05.25969Z",
                          "baseURIs": {
                            "contractMetadataURI": "https://metadata.sequence.app/projects/30957/collections/265.json",
                            "tokenMetadataURI": "https://metadata.sequence.app/projects/30957/collections/265/tokens/"
                          }
                        },
                        {
                          "id": 690,
                          "projectId": 30957,
                          "metadata": {
                            "name": "Primary Sales NFTS - Divine Weapons",
                            "description": "Primary Sales NFTS - Divine Weapons Collection",
                            "image": "https://metadata.sequence.app/projects/30957/collections/690/image.png",
                            "external_link": "https://www.google.com"
                          },
                          "private": false,
                          "tokenCount": 2,
                          "createdAt": "2024-08-29T19:44:00.236269Z",
                          "updatedAt": "2024-08-29T19:52:13.722495Z",
                          "baseURIs": {
                            "contractMetadataURI": "https://metadata.sequence.app/projects/30957/collections/690.json",
                            "tokenMetadataURI": "https://metadata.sequence.app/projects/30957/collections/690/tokens/"
                          }
                        },
                        {
                          "id": 819,
                          "projectId": 30957,
                          "metadata": {
                            "name": "Placeholders",
                            "description": "Placeholders collection",
                            "image": "https://metadata.sequence.app/projects/30957/collections/819/image.png"
                          },
                          "private": false,
                          "tokenCount": 10,
                          "createdAt": "2024-10-03T18:46:15.987375Z",
                          "updatedAt": "2024-10-03T18:46:18.25727Z",
                          "baseURIs": {
                            "contractMetadataURI": "https://metadata.sequence.app/projects/30957/collections/819.json",
                            "tokenMetadataURI": "https://metadata.sequence.app/projects/30957/collections/819/tokens/"
                          }
                        },
                        {
                          "id": 887,
                          "projectId": 30957,
                          "metadata": {
                            "name": "Sandbox Chronicles",
                            "description": "A collection of test cases designed to push the boundaries of your API. Whether you’re validating edge cases, simulating real-world scenarios, or just experimenting with wild inputs, this suite ensures your endpoints are battle-tested and ready for anything. Perfect for developers who embrace the unexpected and thrive on precision.",
                            "properties": {
                              "funCollection": true,
                              "maxNfts": 22,
                              "minNfts": "4"
                            }
                          },
                          "private": true,
                          "tokenCount": 0,
                          "createdAt": "2024-10-23T06:56:39.027843Z",
                          "updatedAt": "2024-10-23T06:56:39.027843Z",
                          "baseURIs": {
                            "contractMetadataURI": "https://metadata.sequence.app/projects/30957/collections/887.json",
                            "tokenMetadataURI": "https://metadata.sequence.app/projects/30957/collections/887/tokens/"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/UpdateCollection": {
      "post": {
        "summary": "UpdateCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_UpdateCollection_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "collection": {
                      "projectId": 30957,
                      "id": 888,
                      "private": true,
                      "metadata": {
                        "name": "Sandbox Chronicles Modified",
                        "description": "A collection of test cases designed to push the boundaries of your API. Whether you’re validating edge cases, simulating real-world scenarios, or just experimenting with wild inputs, this suite ensures your endpoints are battle-tested and ready for anything. Perfect for developers who embrace the unexpected and thrive on precision.",
                        "externalLink": "https://sequence.xyz/",
                        "properties": {
                          "maxNfts": 1000,
                          "minNfts": "1",
                          "funCollection": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_UpdateCollection_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "collection": {
                        "id": 888,
                        "projectId": 30957,
                        "metadata": {
                          "name": "Sandbox Chronicles Modified",
                          "description": "A collection of test cases designed to push the boundaries of your API. Whether you’re validating edge cases, simulating real-world scenarios, or just experimenting with wild inputs, this suite ensures your endpoints are battle-tested and ready for anything. Perfect for developers who embrace the unexpected and thrive on precision.",
                          "properties": {
                            "funCollection": false,
                            "maxNfts": 1000,
                            "minNfts": "1"
                          }
                        },
                        "private": true,
                        "createdAt": "2024-10-23T07:02:00.905283Z",
                        "updatedAt": "2024-10-23T07:10:45.118089375Z",
                        "baseURIs": {
                          "contractMetadataURI": "https://metadata.sequence.app/projects/30957/collections/888.json",
                          "tokenMetadataURI": "https://metadata.sequence.app/projects/30957/collections/888/tokens/"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/DeleteCollection": {
      "post": {
        "summary": "DeleteCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_DeleteCollection_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 3095723,
                    "collectionId": 26532223
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_DeleteCollection_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": true
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/PublishCollection": {
      "post": {
        "summary": "PublishCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_PublishCollection_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "collectionId": 888
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_PublishCollection_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "collection": {
                        "id": 888,
                        "projectId": 30957,
                        "metadata": {
                          "name": "Sandbox Chronicles Modified",
                          "description": "A collection of test cases designed to push the boundaries of your API. Whether you’re validating edge cases, simulating real-world scenarios, or just experimenting with wild inputs, this suite ensures your endpoints are battle-tested and ready for anything. Perfect for developers who embrace the unexpected and thrive on precision.",
                          "properties": {
                            "funCollection": false,
                            "maxNfts": 1000,
                            "minNfts": "1"
                          }
                        },
                        "private": false,
                        "createdAt": "2024-10-23T07:02:00.905283Z",
                        "updatedAt": "2024-10-23T07:10:45.118089Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/UnpublishCollection": {
      "post": {
        "summary": "UnpublishCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_UnpublishCollection_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "collectionId": 888
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_UnpublishCollection_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "collection": {
                        "id": 888,
                        "projectId": 30957,
                        "metadata": {
                          "name": "Sandbox Chronicles Modified",
                          "description": "A collection of test cases designed to push the boundaries of your API. Whether you’re validating edge cases, simulating real-world scenarios, or just experimenting with wild inputs, this suite ensures your endpoints are battle-tested and ready for anything. Perfect for developers who embrace the unexpected and thrive on precision.",
                          "properties": {
                            "funCollection": false,
                            "maxNfts": 1000,
                            "minNfts": "1"
                          }
                        },
                        "private": true,
                        "createdAt": "2024-10-23T07:02:00.905283Z",
                        "updatedAt": "2024-10-23T07:10:45.118089Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/CreateContractCollection": {
      "post": {
        "summary": "CreateContractCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_CreateContractCollection_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "contractCollection": {
                      "chainId": "80002",
                      "contractAddress": "0x477566e9ade2dfa69f066f909e36ad617a2adef7",
                      "collectionId": 819
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_CreateContractCollection_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "contractCollection": {
                        "id": 460,
                        "chainId": "80002",
                        "contractAddress": "0x477566e9ade2dfa69f066f909e36ad617a2adef7",
                        "collectionId": 819
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/GetContractCollection": {
      "post": {
        "summary": "GetContractCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_GetContractCollection_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "chainId": "80002",
                    "contractAddress": "0x6325e304e6eea3c818f1eaf8924570d491e1f6d4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_GetContractCollection_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "contractCollection": {
                        "id": 442,
                        "chainId": "80002",
                        "contractAddress": "0x6325e304e6eea3c818f1eaf8924570d491e1f6d4",
                        "collectionId": 908
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/ListContractCollections": {
      "post": {
        "summary": "ListContractCollections",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_ListContractCollections_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "collectionId": 819,
                    "projectId": 30957
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_ListContractCollections_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "contractCollections": [
                        {
                          "id": 370,
                          "chainId": "80002",
                          "contractAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                          "collectionId": 819
                        }
                      ],
                      "collections": [
                        {
                          "id": 819,
                          "projectId": 30957,
                          "metadata": {
                            "name": "Placeholders",
                            "description": "Placeholders collection",
                            "image": "https://metadata.sequence.app/projects/30957/collections/819/image.png"
                          },
                          "private": false,
                          "createdAt": "2024-10-03T18:46:15.987375Z",
                          "updatedAt": "2024-10-03T18:46:18.25727Z"
                        }
                      ],
                      "page": {
                        "pageSize": 30,
                        "more": false
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/UpdateContractCollection": {
      "post": {
        "summary": "UpdateContractCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_UpdateContractCollection_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "contractCollection": {
                      "chainId": "80002",
                      "contractAddress": "0x70a2177079877e4aae639d1abb29ffa537b94970",
                      "collectionId": 819
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_UpdateContractCollection_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "ok": true
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/DeleteContractCollection": {
      "post": {
        "summary": "DeleteContractCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_DeleteContractCollection_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "chainId": "80002",
                    "contractAddress": "0x477566e9ade2dfa69f066f909e36ad617a2adef7"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_DeleteContractCollection_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "ok": true
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/CreateToken": {
      "post": {
        "summary": "CreateToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_CreateToken_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "collectionId": 888,
                    "private": false,
                    "token": {
                      "tokenId": 200,
                      "name": "Eclipse Dragon",
                      "description": "Forged from starlight and shadows, the Eclipse Dragon emerges only during celestial alignments. Its obsidian scales shimmer with constellations, and its breath holds the power to bend time and space. Legends say that those who possess its essence gain unparalleled wisdom—though at the cost of fleeting moments lost to the void. Will you dare wield its mystic force?",
                      "properties": {
                        "element": "Shadow and Starlight",
                        "rarity": "Legendary",
                        "alignment": "Celestial",
                        "age": "Ancient",
                        "size": "Massive",
                        "breath_power": "Time Distortion",
                        "temperament": "Mysterious",
                        "constellations_on_scales": 42,
                        "last_seen": "During the Last Solar Eclipse"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_CreateToken_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "token": {
                        "tokenId": 200,
                        "name": "Eclipse Dragon",
                        "description": "Forged from starlight and shadows, the Eclipse Dragon emerges only during celestial alignments. Its obsidian scales shimmer with constellations, and its breath holds the power to bend time and space. Legends say that those who possess its essence gain unparalleled wisdom—though at the cost of fleeting moments lost to the void. Will you dare wield its mystic force?",
                        "image": "",
                        "properties": {
                          "age": "Ancient",
                          "alignment": "Celestial",
                          "breath_power": "Time Distortion",
                          "constellations_on_scales": 42,
                          "element": "Shadow and Starlight",
                          "last_seen": "During the Last Solar Eclipse",
                          "rarity": "Legendary",
                          "size": "Massive",
                          "temperament": "Mysterious"
                        },
                        "attributes": null,
                        "updatedAt": "0001-01-01T00:00:00Z"
                      },
                      "assets": null
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/GetToken": {
      "post": {
        "summary": "GetToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_GetToken_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "collectionId": 888,
                    "tokenId": 200
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_GetToken_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "token": {
                        "tokenId": 200,
                        "name": "Eclipse Dragon",
                        "description": "Forged from starlight and shadows, the Eclipse Dragon emerges only during celestial alignments. Its obsidian scales shimmer with constellations, and its breath holds the power to bend time and space. Legends say that those who possess its essence gain unparalleled wisdom—though at the cost of fleeting moments lost to the void. Will you dare wield its mystic force?",
                        "image": "",
                        "properties": {
                          "age": "Ancient",
                          "alignment": "Celestial",
                          "breath_power": "Time Distortion",
                          "constellations_on_scales": 42,
                          "element": "Shadow and Starlight",
                          "last_seen": "During the Last Solar Eclipse",
                          "rarity": "Legendary",
                          "size": "Massive",
                          "temperament": "Mysterious"
                        },
                        "attributes": null,
                        "updatedAt": "2024-10-23T19:34:40.158987036Z"
                      },
                      "assets": []
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/ListTokens": {
      "post": {
        "summary": "ListTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_ListTokens_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "collectionId": 888
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_ListTokens_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "page": {
                        "pageSize": 30,
                        "more": false
                      },
                      "tokens": [
                        {
                          "tokenId": 200,
                          "name": "Eclipse Dragon",
                          "description": "Forged from starlight and shadows, the Eclipse Dragon emerges only during celestial alignments. Its obsidian scales shimmer with constellations, and its breath holds the power to bend time and space. Legends say that those who possess its essence gain unparalleled wisdom—though at the cost of fleeting moments lost to the void. Will you dare wield its mystic force?",
                          "image": "",
                          "properties": {
                            "age": "Ancient",
                            "alignment": "Celestial",
                            "breath_power": "Time Distortion",
                            "constellations_on_scales": 42,
                            "element": "Shadow and Starlight",
                            "last_seen": "During the Last Solar Eclipse",
                            "rarity": "Legendary",
                            "size": "Massive",
                            "temperament": "Mysterious"
                          },
                          "attributes": null,
                          "updatedAt": "2024-10-23T19:34:40.158987036Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/UpdateToken": {
      "post": {
        "summary": "UpdateToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_UpdateToken_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "collectionId": 888,
                    "tokenId": 200,
                    "private": false,
                    "token": {
                      "tokenId": "201",
                      "name": "Eclipse Dragon",
                      "description": "Forged from starlight and shadows, the Eclipse Dragon emerges only during celestial alignments. Its obsidian scales shimmer with constellations, and its breath holds the power to bend time and space. Legends say that those who possess its essence gain unparalleled wisdom—though at the cost of fleeting moments lost to the void. Will you dare wield its mystic force?",
                      "properties": {
                        "element": "Shadow and Starlight",
                        "rarity": "Legendary",
                        "alignment": "Celestial",
                        "age": "Ancient",
                        "size": "Massive",
                        "breath_power": "Time Distortion",
                        "temperament": "Mysterious",
                        "constellations_on_scales": 42,
                        "last_seen": "During the Last Solar Eclipse"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_UpdateToken_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "token": {
                        "tokenId": "201",
                        "name": "Eclipse Dragon",
                        "description": "Forged from starlight and shadows, the Eclipse Dragon emerges only during celestial alignments. Its obsidian scales shimmer with constellations, and its breath holds the power to bend time and space. Legends say that those who possess its essence gain unparalleled wisdom—though at the cost of fleeting moments lost to the void. Will you dare wield its mystic force?",
                        "image": "",
                        "properties": {
                          "age": "Ancient",
                          "alignment": "Celestial",
                          "breath_power": "Time Distortion",
                          "constellations_on_scales": 42,
                          "element": "Shadow and Starlight",
                          "last_seen": "During the Last Solar Eclipse",
                          "rarity": "Legendary",
                          "size": "Massive",
                          "temperament": "Mysterious"
                        },
                        "attributes": null,
                        "updatedAt": "0001-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/DeleteToken": {
      "post": {
        "summary": "DeleteToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_DeleteToken_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 3095723,
                    "collectionId": 26532223,
                    "tokenId": "32132121"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_DeleteToken_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": true
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/CreateAsset": {
      "post": {
        "summary": "CreateAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_CreateAsset_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "asset": {
                      "collectionId": 894,
                      "tokenId": "6",
                      "metadataField": "image",
                      "url": "https://metadata.sequence.app/projects/30957/collections/895/tokens/2/image.png",
                      "filename": "image.png",
                      "filesize": 670912,
                      "mimeType": "image/png",
                      "width": 1024,
                      "height": 1024
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_CreateAsset_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "asset": {
                        "id": 4418,
                        "collectionId": 894,
                        "tokenId": "6",
                        "url": "",
                        "metadataField": "image",
                        "updatedAt": "2024-10-25T01:29:44.686464786Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/GetAsset": {
      "post": {
        "summary": "GetAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_GetAsset_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "assetId": 4405
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_GetAsset_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "asset": {
                        "id": 4405,
                        "collectionId": 894,
                        "tokenId": "1",
                        "url": "",
                        "metadataField": "image",
                        "updatedAt": "2024-10-25T00:15:34.156343Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/UpdateAsset": {
      "post": {
        "summary": "UpdateAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_UpdateAsset_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "asset": {
                      "id": 4416,
                      "collectionId": 894,
                      "tokenId": "4",
                      "metadataField": "image",
                      "filename": "My asset"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_UpdateAsset_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "asset": {
                        "id": 4416,
                        "collectionId": 894,
                        "tokenId": "4",
                        "url": "",
                        "metadataField": "image",
                        "filename": "New Image",
                        "updatedAt": "2024-10-25T01:22:44.045492Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    },
    "/rpc/Collections/DeleteAsset": {
      "post": {
        "summary": "DeleteAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collections_DeleteAsset_Request"
              },
              "examples": {
                "0": {
                  "value": {
                    "projectId": 30957,
                    "assetId": 4415
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections_DeleteAsset_Response"
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": true
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMethodNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequestConflict"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTimeout"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRequiredArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorValidationFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorRateLimited"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorProjectNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorChainNotFound"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorTokenDirectoryDisabled"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorFail"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "secret"
        ],
        "security": [
          {
            "BearerAuth": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMHhiZWU3NGU3ZmZkNzdkMThhZDJhOTg2ODEyZGE2MTc5ODk0MDY4ODZjIiwiaWF0IjoxNzQxNjg3NDg4LCJwcm9qZWN0IjoxNjgxNX0.LvTwKf0T6IBK9HuRFboXCNh2YY9d6EwDoQAlGYC80KQ"
            ]
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://metadata.sequence.app/",
      "description": "Metadata"
    }
  ],
  "tags": [
    {
      "name": "public",
      "description": "Endpoints accessible by passing your project-access-key in the header. This is injected whenever you login automatically."
    },
    {
      "name": "secret",
      "description": "Endpoints that require a Sequence service token intended to be secret. You can manually generate one on Sequence Builder and pass it as a Bearer Token."
    }
  ]
}
