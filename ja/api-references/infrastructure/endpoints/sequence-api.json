{
  "components": {
    "schemas": {
      "ErrorWebrpcEndpoint": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcEndpoint"
          },
          "code": {
            "type": "number",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": "endpoint error"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcRequestFailed": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcRequestFailed"
          },
          "code": {
            "type": "number",
            "example": -1
          },
          "msg": {
            "type": "string",
            "example": "request failed"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcBadRoute": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadRoute"
          },
          "code": {
            "type": "number",
            "example": -2
          },
          "msg": {
            "type": "string",
            "example": "bad route"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 404
          }
        }
      },
      "ErrorWebrpcBadMethod": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadMethod"
          },
          "code": {
            "type": "number",
            "example": -3
          },
          "msg": {
            "type": "string",
            "example": "bad method"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 405
          }
        }
      },
      "ErrorWebrpcBadRequest": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadRequest"
          },
          "code": {
            "type": "number",
            "example": -4
          },
          "msg": {
            "type": "string",
            "example": "bad request"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcBadResponse": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcBadResponse"
          },
          "code": {
            "type": "number",
            "example": -5
          },
          "msg": {
            "type": "string",
            "example": "bad response"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcServerPanic": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcServerPanic"
          },
          "code": {
            "type": "number",
            "example": -6
          },
          "msg": {
            "type": "string",
            "example": "server panic"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcInternalError": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcInternalError"
          },
          "code": {
            "type": "number",
            "example": -7
          },
          "msg": {
            "type": "string",
            "example": "internal error"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        }
      },
      "ErrorWebrpcClientDisconnected": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcClientDisconnected"
          },
          "code": {
            "type": "number",
            "example": -8
          },
          "msg": {
            "type": "string",
            "example": "client disconnected"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcStreamLost": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcStreamLost"
          },
          "code": {
            "type": "number",
            "example": -9
          },
          "msg": {
            "type": "string",
            "example": "stream lost"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorWebrpcStreamFinished": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "WebrpcStreamFinished"
          },
          "code": {
            "type": "number",
            "example": -10
          },
          "msg": {
            "type": "string",
            "example": "stream finished"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 200
          }
        }
      },
      "ErrorUnauthorized": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Unauthorized"
          },
          "code": {
            "type": "number",
            "example": 1000
          },
          "msg": {
            "type": "string",
            "example": "Unauthorized access"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 401
          }
        }
      },
      "ErrorPermissionDenied": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "PermissionDenied"
          },
          "code": {
            "type": "number",
            "example": 1001
          },
          "msg": {
            "type": "string",
            "example": "Permission denied"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 403
          }
        }
      },
      "ErrorSessionExpired": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "SessionExpired"
          },
          "code": {
            "type": "number",
            "example": 1002
          },
          "msg": {
            "type": "string",
            "example": "Session expired"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 403
          }
        }
      },
      "ErrorAborted": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Aborted"
          },
          "code": {
            "type": "number",
            "example": 1005
          },
          "msg": {
            "type": "string",
            "example": "Request aborted"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorGeoblocked": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Geoblocked"
          },
          "code": {
            "type": "number",
            "example": 1006
          },
          "msg": {
            "type": "string",
            "example": "Geoblocked region"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 451
          }
        }
      },
      "ErrorInvalidArgument": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "InvalidArgument"
          },
          "code": {
            "type": "number",
            "example": 2000
          },
          "msg": {
            "type": "string",
            "example": "Invalid argument"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorUnavailable": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Unavailable"
          },
          "code": {
            "type": "number",
            "example": 2002
          },
          "msg": {
            "type": "string",
            "example": "Unavailable resource"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorQueryFailed": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "QueryFailed"
          },
          "code": {
            "type": "number",
            "example": 2003
          },
          "msg": {
            "type": "string",
            "example": "Query failed"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "ErrorNotFound": {
        "type": "object",
        "required": [
          "error",
          "code",
          "msg",
          "status"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "NotFound"
          },
          "code": {
            "type": "number",
            "example": 3000
          },
          "msg": {
            "type": "string",
            "example": "Resource not found"
          },
          "cause": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "example": 400
          }
        }
      },
      "SortOrder": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "DESC",
          "ASC"
        ]
      },
      "SardinePaymentType": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "ach",
          "debit",
          "credit",
          "us_debit",
          "international_debit",
          "international_credit"
        ]
      },
      "SardineQuoteType": {
        "type": "string",
        "description": "Represented as uint32 on the server side",
        "enum": [
          "buy",
          "sell"
        ]
      },
      "TokenType": {
        "type": "string",
        "description": "Represented as uint8 on the server side",
        "enum": [
          "ERC20",
          "ERC721",
          "ERC1155"
        ]
      },
      "Version": {
        "type": "object",
        "required": [
          "webrpcVersion",
          "schemaVersion",
          "schemaHash",
          "appVersion"
        ],
        "properties": {
          "webrpcVersion": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "string"
          },
          "schemaHash": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          }
        }
      },
      "RuntimeStatus": {
        "type": "object",
        "required": [
          "healthOK",
          "startTime",
          "uptime",
          "ver",
          "branch",
          "commitHash",
          "checks",
          "numTxnsRelayed"
        ],
        "properties": {
          "healthOK": {
            "type": "boolean"
          },
          "startTime": {
            "type": "string"
          },
          "uptime": {
            "type": "number"
          },
          "ver": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "commitHash": {
            "type": "string"
          },
          "checks": {
            "$ref": "#/components/schemas/RuntimeChecks"
          },
          "numTxnsRelayed": {
            "type": "object",
            "description": "map<string,NumTxnsRelayed>",
            "additionalProperties": {
              "$ref": "#/components/schemas/NumTxnsRelayed"
            }
          }
        }
      },
      "NumTxnsRelayed": {
        "type": "object",
        "required": [
          "chainID",
          "prev",
          "current",
          "period"
        ],
        "properties": {
          "chainID": {
            "type": "number"
          },
          "prev": {
            "type": "number"
          },
          "current": {
            "type": "number"
          },
          "period": {
            "type": "number"
          }
        }
      },
      "RuntimeChecks": {
        "type": "object"
      },
      "SequenceContext": {
        "type": "object",
        "required": [
          "factory",
          "mainModule",
          "mainModuleUpgradable",
          "guestModule",
          "utils"
        ],
        "properties": {
          "factory": {
            "type": "string"
          },
          "mainModule": {
            "type": "string"
          },
          "mainModuleUpgradable": {
            "type": "string"
          },
          "guestModule": {
            "type": "string"
          },
          "utils": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "address",
          "username",
          "normalizedUsername",
          "avatar",
          "bio",
          "location",
          "locale",
          "sysAdmin"
        ],
        "properties": {
          "address": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "normalizedUsername": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "backup": {
            "type": "boolean"
          },
          "backupConfirmed": {
            "type": "boolean"
          },
          "maxInvites": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "sysAdmin": {
            "type": "boolean"
          }
        }
      },
      "WalletBackup": {
        "type": "object",
        "required": [
          "accountAddress",
          "secretHash",
          "encryptedWallet",
          "userConfirmed"
        ],
        "properties": {
          "accountAddress": {
            "type": "string"
          },
          "secretHash": {
            "type": "string"
          },
          "encryptedWallet": {
            "type": "string"
          },
          "userConfirmed": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "Friend": {
        "type": "object",
        "required": [
          "id",
          "userAddress",
          "friendAddress",
          "nickname"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "userAddress": {
            "type": "string"
          },
          "friendAddress": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "InviteCode": {
        "type": "object",
        "required": [
          "code",
          "source",
          "usesLeft",
          "ownerAccount",
          "url"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "usesLeft": {
            "type": "number"
          },
          "ownerAccount": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          }
        }
      },
      "InviteCodeAccount": {
        "type": "object",
        "required": [
          "code",
          "claimedByUserAddress"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "claimedByUserAddress": {
            "type": "string"
          },
          "claimedAt": {
            "type": "string"
          }
        }
      },
      "InviteInfo": {
        "type": "object",
        "required": [
          "expiryInHours",
          "max",
          "invites"
        ],
        "properties": {
          "expiryInHours": {
            "type": "number"
          },
          "max": {
            "type": "number"
          },
          "invites": {
            "type": "array",
            "description": "[]InviteCode",
            "items": {
              "$ref": "#/components/schemas/InviteCode"
            }
          }
        }
      },
      "ContractCall": {
        "type": "object",
        "required": [
          "signature",
          "function",
          "args"
        ],
        "properties": {
          "signature": {
            "type": "string"
          },
          "function": {
            "type": "string"
          },
          "args": {
            "type": "array",
            "description": "[]TupleComponent",
            "items": {
              "$ref": "#/components/schemas/TupleComponent"
            }
          }
        }
      },
      "TupleComponent": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "required": [
          "delegateCall",
          "revertOnError",
          "gasLimit",
          "target",
          "value",
          "data"
        ],
        "properties": {
          "delegateCall": {
            "type": "boolean"
          },
          "revertOnError": {
            "type": "boolean"
          },
          "gasLimit": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "call": {
            "$ref": "#/components/schemas/ContractCall"
          }
        }
      },
      "UserStorage": {
        "type": "object",
        "required": [
          "userAddress",
          "key",
          "value"
        ],
        "properties": {
          "userAddress": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "Token": {
        "type": "object",
        "required": [
          "chainId",
          "contractAddress"
        ],
        "properties": {
          "chainId": {
            "type": "number"
          },
          "contractAddress": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          }
        }
      },
      "Price": {
        "type": "object",
        "required": [
          "value",
          "currency"
        ],
        "properties": {
          "value": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "TokenPrice": {
        "type": "object",
        "required": [
          "token",
          "floorPrice",
          "buyPrice",
          "sellPrice",
          "updatedAt"
        ],
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "price24hChange": {
            "$ref": "#/components/schemas/Price"
          },
          "floorPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "buyPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "sellPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ExchangeRate": {
        "type": "object",
        "required": [
          "name",
          "symbol",
          "value",
          "vsCurrency",
          "currencyType"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "vsCurrency": {
            "type": "string"
          },
          "currencyType": {
            "type": "string"
          }
        }
      },
      "LinkedWallet": {
        "type": "object",
        "required": [
          "id",
          "walletAddress",
          "linkedWalletAddress"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "walletType": {
            "type": "string"
          },
          "walletAddress": {
            "type": "string"
          },
          "linkedWalletAddress": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "totalRecords": {
            "type": "number"
          },
          "column": {
            "type": "string"
          },
          "before": {
            "type": "object"
          },
          "after": {
            "type": "object"
          },
          "sort": {
            "type": "array",
            "description": "[]SortBy",
            "items": {
              "$ref": "#/components/schemas/SortBy"
            }
          },
          "more": {
            "type": "boolean"
          }
        }
      },
      "SortBy": {
        "type": "object",
        "required": [
          "column",
          "order"
        ],
        "properties": {
          "column": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "SardineNFTCheckoutParams": {
        "type": "object",
        "required": [
          "name",
          "imageUrl",
          "network",
          "recipientAddress",
          "blockchainNftId",
          "contractAddress",
          "quantity",
          "tokenAmount",
          "tokenAddress",
          "tokenSymbol",
          "calldata",
          "platform"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "network": {
            "type": "string"
          },
          "recipientAddress": {
            "type": "string"
          },
          "blockchainNftId": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "decimals": {
            "type": "number"
          },
          "tokenAmount": {
            "type": "string"
          },
          "tokenAddress": {
            "type": "string"
          },
          "tokenSymbol": {
            "type": "string"
          },
          "tokenDecimals": {
            "type": "number"
          },
          "calldata": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "approvedSpenderAddress": {
            "type": "string"
          }
        }
      },
      "SardineNFTCheckout": {
        "type": "object",
        "required": [
          "token",
          "expiresAt",
          "orderId"
        ],
        "properties": {
          "token": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          }
        }
      },
      "SardineOrder": {
        "type": "object",
        "required": [
          "id",
          "referenceId",
          "status",
          "fiatCurrency",
          "fiatExchangeRateUSD",
          "transactionId",
          "total",
          "subTotal",
          "transactionFee",
          "networkFee",
          "transactionType",
          "name",
          "price",
          "imageUrl",
          "recipientAddress"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "fiatCurrency": {
            "type": "string"
          },
          "fiatExchangeRateUSD": {
            "type": "number"
          },
          "transactionId": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          },
          "total": {
            "type": "number"
          },
          "subTotal": {
            "type": "number"
          },
          "transactionFee": {
            "type": "number"
          },
          "networkFee": {
            "type": "number"
          },
          "paymentCurrency": {
            "type": "string"
          },
          "paymentMethodType": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "imageUrl": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "transactionHash": {
            "type": "string"
          },
          "recipientAddress": {
            "type": "string"
          }
        }
      },
      "SardineRegion": {
        "type": "object",
        "required": [
          "countryCode",
          "isAllowedOnRamp",
          "isAllowedOnNFT",
          "isBasicKycRequired",
          "isSsnRequired",
          "name",
          "currencyCode",
          "isPayrollSupported",
          "supportedDocuments",
          "paymentMethods",
          "states"
        ],
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "isAllowedOnRamp": {
            "type": "boolean"
          },
          "isAllowedOnNFT": {
            "type": "boolean"
          },
          "isBasicKycRequired": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "isSsnRequired": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "isPayrollSupported": {
            "type": "boolean"
          },
          "supportedDocuments": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "paymentMethods": {
            "type": "array",
            "description": "[]SardineRegionPaymentMethod",
            "items": {
              "$ref": "#/components/schemas/SardineRegionPaymentMethod"
            }
          },
          "states": {
            "type": "array",
            "description": "[]SardineRegionState",
            "items": {
              "$ref": "#/components/schemas/SardineRegionState"
            }
          }
        }
      },
      "SardineRegionPaymentMethod": {
        "type": "object",
        "required": [
          "name",
          "isAllowedOnRamp",
          "isAllowedOnNFT",
          "subTypes",
          "type",
          "subType"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "isAllowedOnRamp": {
            "type": "boolean"
          },
          "isAllowedOnNFT": {
            "type": "boolean"
          },
          "subTypes": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          },
          "subType": {
            "type": "string"
          }
        }
      },
      "SardineRegionState": {
        "type": "object",
        "required": [
          "code",
          "name",
          "isAllowedOnRamp",
          "isAllowedOnNFT"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isAllowedOnRamp": {
            "type": "boolean"
          },
          "isAllowedOnNFT": {
            "type": "boolean"
          }
        }
      },
      "SardineSupportedToken": {
        "type": "object",
        "required": [
          "network",
          "assetSymbol",
          "assetName",
          "chainId",
          "tokenName",
          "token",
          "tokenAddress"
        ],
        "properties": {
          "network": {
            "type": "string"
          },
          "assetSymbol": {
            "type": "string"
          },
          "assetName": {
            "type": "string"
          },
          "chainId": {
            "type": "string"
          },
          "tokenName": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "tokenAddress": {
            "type": "string"
          }
        }
      },
      "SardineEnabledToken": {
        "type": "object",
        "required": [
          "network",
          "assetSymbol",
          "assetName",
          "chainId",
          "tokenName",
          "token",
          "tokenAddress"
        ],
        "properties": {
          "network": {
            "type": "string"
          },
          "assetSymbol": {
            "type": "string"
          },
          "assetName": {
            "type": "string"
          },
          "chainId": {
            "type": "string"
          },
          "tokenName": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "tokenAddress": {
            "type": "string"
          }
        }
      },
      "SardineGetQuoteParams": {
        "type": "object",
        "required": [
          "assetType",
          "network",
          "total"
        ],
        "properties": {
          "assetType": {
            "type": "string"
          },
          "network": {
            "type": "string"
          },
          "total": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "paymentType": {
            "$ref": "#/components/schemas/SardinePaymentType"
          },
          "quoteType": {
            "$ref": "#/components/schemas/SardineQuoteType"
          },
          "walletAddress": {
            "type": "string"
          }
        }
      },
      "SardineQuote": {
        "type": "object",
        "required": [
          "quantity",
          "network",
          "assetType",
          "total",
          "currency",
          "expiresAt",
          "paymentType",
          "price",
          "subtotal",
          "transactionFee",
          "networkFee",
          "highNetworkFee",
          "minTransactionValue",
          "maxTransactionValue",
          "liquidityProvider"
        ],
        "properties": {
          "quantity": {
            "type": "number"
          },
          "network": {
            "type": "string"
          },
          "assetType": {
            "type": "string"
          },
          "total": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          },
          "paymentType": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "subtotal": {
            "type": "number"
          },
          "transactionFee": {
            "type": "number"
          },
          "networkFee": {
            "type": "number"
          },
          "highNetworkFee": {
            "type": "boolean"
          },
          "minTransactionValue": {
            "type": "number"
          },
          "maxTransactionValue": {
            "type": "number"
          },
          "liquidityProvider": {
            "type": "string"
          }
        }
      },
      "SardineFiatCurrency": {
        "type": "object",
        "required": [
          "currencyCode",
          "name",
          "currencySymbol",
          "paymentOptions",
          "supportingCountries"
        ],
        "properties": {
          "currencyCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "currencySymbol": {
            "type": "string"
          },
          "paymentOptions": {
            "type": "array",
            "description": "[]SardinePaymentOption",
            "items": {
              "$ref": "#/components/schemas/SardinePaymentOption"
            }
          },
          "supportingCountries": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SardinePaymentOption": {
        "type": "object",
        "required": [
          "name",
          "dailyLimit",
          "weeklyLimit",
          "monthlyLimit",
          "maxAmount",
          "minAmount",
          "subTypes",
          "type",
          "subType",
          "processingTime"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "dailyLimit": {
            "type": "number"
          },
          "weeklyLimit": {
            "type": "number"
          },
          "monthlyLimit": {
            "type": "number"
          },
          "maxAmount": {
            "type": "number"
          },
          "minAmount": {
            "type": "number"
          },
          "subTypes": {
            "type": "array",
            "description": "[]string",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          },
          "subType": {
            "type": "string"
          },
          "processingTime": {
            "type": "string"
          }
        }
      },
      "SwapPrice": {
        "type": "object",
        "required": [
          "currencyAddress",
          "currencyBalance",
          "price",
          "maxPrice",
          "transactionValue"
        ],
        "properties": {
          "currencyAddress": {
            "type": "string"
          },
          "currencyBalance": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "maxPrice": {
            "type": "string"
          },
          "transactionValue": {
            "type": "string"
          }
        }
      },
      "SwapQuote": {
        "type": "object",
        "required": [
          "currencyAddress",
          "currencyBalance",
          "price",
          "maxPrice",
          "to",
          "transactionData",
          "transactionValue",
          "approveData"
        ],
        "properties": {
          "currencyAddress": {
            "type": "string"
          },
          "currencyBalance": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "maxPrice": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "transactionData": {
            "type": "string"
          },
          "transactionValue": {
            "type": "string"
          },
          "approveData": {
            "type": "string"
          }
        }
      },
      "CurrencyGroup": {
        "type": "object",
        "required": [
          "name",
          "tokens"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "tokens": {
            "type": "array",
            "description": "[]CurrencyGroupToken",
            "items": {
              "$ref": "#/components/schemas/CurrencyGroupToken"
            }
          }
        }
      },
      "CurrencyGroupToken": {
        "type": "object",
        "required": [
          "chainId",
          "tokenAddress"
        ],
        "properties": {
          "chainId": {
            "type": "number"
          },
          "tokenAddress": {
            "type": "string"
          }
        }
      },
      "OffchainInventory": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "chainId",
          "externalProductId",
          "paymentTokenAddress",
          "paymentTokenType",
          "paymentTokenId",
          "paymentAmount",
          "paymentRecipient",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "externalProductId": {
            "type": "string"
          },
          "paymentTokenAddress": {
            "type": "string"
          },
          "paymentTokenType": {
            "$ref": "#/components/schemas/TokenType"
          },
          "paymentTokenId": {
            "type": "number"
          },
          "paymentAmount": {
            "type": "number"
          },
          "paymentRecipient": {
            "type": "string"
          },
          "chainedCallAddress": {
            "type": "string"
          },
          "chainedCallData": {
            "type": "string"
          },
          "allowCrossChainPayments": {
            "type": "boolean"
          },
          "callbackURL": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          }
        }
      },
      "OffchainPayment": {
        "type": "object",
        "required": [
          "id",
          "offchainInventoryId",
          "productRecipient",
          "paymentChainId",
          "paymentTokenAddress",
          "expiration",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "offchainInventoryId": {
            "type": "number"
          },
          "productRecipient": {
            "type": "string"
          },
          "paymentChainId": {
            "type": "number"
          },
          "paymentTokenAddress": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "completedAt": {
            "type": "string"
          },
          "processedAt": {
            "type": "string"
          }
        }
      },
      "PaymentResponse": {
        "type": "object",
        "required": [
          "paymentId",
          "offchainInventoryId",
          "chainId",
          "externalProductId",
          "paymentTokenAddress",
          "paymentTokenType",
          "paymentTokenId",
          "paymentTotal",
          "expiration",
          "signature",
          "txTo",
          "txData"
        ],
        "properties": {
          "paymentId": {
            "type": "number"
          },
          "offchainInventoryId": {
            "type": "number"
          },
          "chainId": {
            "type": "number"
          },
          "externalProductId": {
            "type": "string"
          },
          "paymentTokenAddress": {
            "type": "string"
          },
          "paymentTokenType": {
            "$ref": "#/components/schemas/TokenType"
          },
          "paymentTokenId": {
            "type": "number"
          },
          "paymentTotal": {
            "type": "number"
          },
          "expiration": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "txTo": {
            "type": "string"
          },
          "txData": {
            "type": "string"
          }
        }
      },
      "API_IsValidSignature_Request": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "string"
          },
          "walletAddress": {
            "type": "string"
          },
          "digest": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          }
        }
      },
      "API_IsValidMessageSignature_Request": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "string"
          },
          "walletAddress": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          }
        }
      },
      "API_IsValidTypedDataSignature_Request": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "string"
          },
          "walletAddress": {
            "type": "string"
          },
          "typedData": {
            "type": "object"
          },
          "signature": {
            "type": "string"
          }
        }
      },
      "API_IsValidETHAuthProof_Request": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "string"
          },
          "walletAddress": {
            "type": "string"
          },
          "ethAuthProofString": {
            "type": "string"
          }
        }
      },
      "API_LinkWallet_Request": {
        "type": "object",
        "properties": {
          "parentWalletAddress": {
            "type": "string"
          },
          "parentWalletMessage": {
            "type": "string"
          },
          "parentWalletSignature": {
            "type": "string"
          },
          "linkedWalletAddress": {
            "type": "string"
          },
          "linkedWalletMessage": {
            "type": "string"
          },
          "linkedWalletSignature": {
            "type": "string"
          },
          "signatureChainId": {
            "type": "string"
          },
          "linkedWalletType": {
            "type": "string"
          }
        }
      },
      "API_GetLinkedWallets_Request": {
        "type": "object",
        "properties": {
          "parentWalletAddress": {
            "type": "string"
          },
          "parentWalletMessage": {
            "type": "string"
          },
          "parentWalletSignature": {
            "type": "string"
          },
          "signatureChainId": {
            "type": "string"
          }
        }
      },
      "API_RemoveLinkedWallet_Request": {
        "type": "object",
        "properties": {
          "parentWalletAddress": {
            "type": "string"
          },
          "parentWalletMessage": {
            "type": "string"
          },
          "parentWalletSignature": {
            "type": "string"
          },
          "linkedWalletAddress": {
            "type": "string"
          },
          "linkedWalletMessage": {
            "type": "string"
          },
          "linkedWalletSignature": {
            "type": "string"
          },
          "signatureChainId": {
            "type": "string"
          }
        }
      },
      "API_GetSwapPrice_Request": {
        "type": "object",
        "properties": {
          "buyCurrencyAddress": {
            "type": "string"
          },
          "sellCurrencyAddress": {
            "type": "string"
          },
          "buyAmount": {
            "type": "string"
          },
          "chainId": {
            "type": "number"
          },
          "slippagePercentage": {
            "type": "number"
          }
        }
      },
      "API_GetSwapPrices_Request": {
        "type": "object",
        "properties": {
          "userAddress": {
            "type": "string"
          },
          "buyCurrencyAddress": {
            "type": "string"
          },
          "buyAmount": {
            "type": "string"
          },
          "chainId": {
            "type": "number"
          },
          "slippagePercentage": {
            "type": "number"
          }
        }
      },
      "API_GetSwapQuote_Request": {
        "type": "object",
        "properties": {
          "userAddress": {
            "type": "string"
          },
          "buyCurrencyAddress": {
            "type": "string"
          },
          "sellCurrencyAddress": {
            "type": "string"
          },
          "buyAmount": {
            "type": "string"
          },
          "chainId": {
            "type": "number"
          },
          "includeApprove": {
            "type": "boolean"
          },
          "slippagePercentage": {
            "type": "number"
          }
        }
      },
      "API_IsValidSignature_Response": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          }
        }
      },
      "API_IsValidMessageSignature_Response": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          }
        }
      },
      "API_IsValidTypedDataSignature_Response": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          }
        }
      },
      "API_IsValidETHAuthProof_Response": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          }
        }
      },
      "API_LinkWallet_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      },
      "API_GetLinkedWallets_Response": {
        "type": "object",
        "properties": {
          "linkedWallets": {
            "type": "array",
            "description": "[]LinkedWallet",
            "items": {
              "$ref": "#/components/schemas/LinkedWallet"
            }
          }
        }
      },
      "API_RemoveLinkedWallet_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      },
      "API_GetSwapPrice_Response": {
        "type": "object",
        "properties": {
          "swapPrice": {
            "$ref": "#/components/schemas/SwapPrice"
          }
        }
      },
      "API_GetSwapPrices_Response": {
        "type": "object",
        "properties": {
          "swapPrices": {
            "type": "array",
            "description": "[]SwapPrice",
            "items": {
              "$ref": "#/components/schemas/SwapPrice"
            }
          }
        }
      },
      "API_GetSwapQuote_Response": {
        "type": "object",
        "properties": {
          "swapQuote": {
            "$ref": "#/components/schemas/SwapQuote"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "description": "Public project access key for authenticating requests obtained on Sequence Builder. Example Test Key: AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI",
        "name": "X-Access-Key"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Secret JWT token for authenticating requests obtained from Sequence Builder - should not be exposed publicly."
      }
    }
  },
  "info": {
    "title": "Sequence Api",
    "version": ""
  },
  "openapi": "3.0.0",
  "paths": {
    "/rpc/API/IsValidSignature": {
      "post": {
        "summary": "IsValidSignature",
        "description": "TODO: we can add walletContext optional in the future when we need it NOTE: chainId can be either a number or canonical name",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API_IsValidSignature_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API_IsValidSignature_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/API/IsValidMessageSignature": {
      "post": {
        "summary": "IsValidMessageSignature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API_IsValidMessageSignature_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API_IsValidMessageSignature_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/API/IsValidTypedDataSignature": {
      "post": {
        "summary": "IsValidTypedDataSignature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API_IsValidTypedDataSignature_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API_IsValidTypedDataSignature_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/API/IsValidETHAuthProof": {
      "post": {
        "summary": "IsValidETHAuthProof",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API_IsValidETHAuthProof_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API_IsValidETHAuthProof_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/API/LinkWallet": {
      "post": {
        "summary": "LinkWallet",
        "description": "Send a Payload to link a user wallet, this would require a signed message from both parent wallet (Embedded Wallet) and a linking wallet like an EOA.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API_LinkWallet_Request"
              },
              "example": {
                "signatureChainId": "137",
                "linkedWalletType": "MetaMask",
                "parentWalletAddress": "0xb33018E5C4f5A168f5560D9C05597508dA8a4E91",
                "parentWalletMessage": "child wallet with address 0x4f8A351143A0aAec055873959b8Cb705c00a37F6",
                "parentWalletSignature": "0x01000100000000020189e6eb0408ae08542bcc99696fba0c001f6aa3ac0000fe01000300000000060100010000740001b467851352ace0a432c71a157e6fd6b5007b86e473247919461148e5eed2bd68226f24168e61a2c1dddb3c860188dec82df140637dc765d1be3ad814853db8a91c010400002c01019cec96321d5a54df2277fe3dbb2405016a3bbf9601013f5602872eff7ef96e69ef2409e0dd3c62923bd7060200010000740001069b3fb27e49dcb5e396cac5d5b073be0d86ae1e4a591150387b98583a7a23856f3ad6e24a21cc56d5cab9f61708e88cf526de72eff8b83416de7b8cab6378f51c010400002c0101951448847a03ad1005a0e463dff0da093690ff240101e0f61b36d02be47455ce5332e9d7bb43bf8f344b030100c46d323d87fc26dad057c9a8d5faeb7112ab829e",
                "linkedWalletAddress": "0x4f8A351143A0aAec055873959b8Cb705c00a37F6",
                "linkedWalletMessage": "Link to parent wallet with address 0xb33018E5C4f5A168f5560D9C05597508dA8a4E91",
                "linkedWalletSignature": "0x0d31791e6aefbd01590f846e93a7740988a6d5ffc50a59ee0941747c2740242a3ec105fddf66a8b39b49db5d13de9d68a36c5fd7e1e83da1e01657c9996d87181c"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API_LinkWallet_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/API/GetLinkedWallets": {
      "post": {
        "summary": "GetLinkedWallets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API_GetLinkedWallets_Request"
              },
              "example": {
                "parentWalletAddress": "0xb33018E5C4f5A168f5560D9C05597508dA8a4E91",
                "parentWalletMessage": "parent wallet with address 0xb33018E5C4f5A168f5560D9C05597508dA8a4E91",
                "parentWalletSignature": "0x01000100000000020189e6eb0408ae08542bcc99696fba0c001f6aa3ac0000fe010003000000000601000100007400019b61caaf15c224553593641f40c0ecd8d57e589dd9b04c129505d4537d979b827548ad6feef3379b0c3442e9b76ac07e06307e779c9b3a5fd4ec2ff27037eac81b010400002c01019cec96321d5a54df2277fe3dbb2405016a3bbf9601013f5602872eff7ef96e69ef2409e0dd3c62923bd7060200010000740001c0fb1a592dd8424b917820c1d8ae25bd1516df486fa6f7610999b141fac46f1e072a5c439d21eaad9521b912b68c428135117bef95bebf56d0a2dfe61fc8fddd1c010400002c0101951448847a03ad1005a0e463dff0da093690ff240101e0f61b36d02be47455ce5332e9d7bb43bf8f344b030100c46d323d87fc26dad057c9a8d5faeb7112ab829e",
                "signatureChainId": "137"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API_GetLinkedWallets_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Query all wallets that are linked",
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/API/RemoveLinkedWallet": {
      "post": {
        "summary": "RemoveLinkedWallet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API_RemoveLinkedWallet_Request"
              },
              "example": {
                "signatureChainId": "137",
                "parentWalletAddress": "0xb33018E5C4f5A168f5560D9C05597508dA8a4E91",
                "parentWalletMessage": "child wallet with address 0x4f8A351143A0aAec055873959b8Cb705c00a37F6",
                "parentWalletSignature": "0x01000100000000020189e6eb0408ae08542bcc99696fba0c001f6aa3ac0000fe01000300000000060100010000740001b467851352ace0a432c71a157e6fd6b5007b86e473247919461148e5eed2bd68226f24168e61a2c1dddb3c860188dec82df140637dc765d1be3ad814853db8a91c010400002c01019cec96321d5a54df2277fe3dbb2405016a3bbf9601013f5602872eff7ef96e69ef2409e0dd3c62923bd7060200010000740001069b3fb27e49dcb5e396cac5d5b073be0d86ae1e4a591150387b98583a7a23856f3ad6e24a21cc56d5cab9f61708e88cf526de72eff8b83416de7b8cab6378f51c010400002c0101951448847a03ad1005a0e463dff0da093690ff240101e0f61b36d02be47455ce5332e9d7bb43bf8f344b030100c46d323d87fc26dad057c9a8d5faeb7112ab829e",
                "linkedWalletAddress": "0x4f8A351143A0aAec055873959b8Cb705c00a37F6",
                "linkedWalletMessage": "Unlink from parent wallet with address 0xb33018E5C4f5A168f5560D9C05597508dA8a4E91",
                "linkedWalletSignature": "0x3cb92cfae098adb135560f52158fb6fc4c02ca962b9a8721ab6203440f116464259099457f014d46b078d59a02946c3f40b6031f89efa2ac9df4ddc7f88ec1131b"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API_RemoveLinkedWallet_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Send a Payload to link a user wallet, this would require a signed message from both parent wallet (Embedded Wallet) and a linking wallet like an EOA.",
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/API/GetSwapPrice": {
      "post": {
        "summary": "GetSwapPrice",
        "description": " Currency abstraction ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API_GetSwapPrice_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API_GetSwapPrice_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/API/GetSwapPrices": {
      "post": {
        "summary": "GetSwapPrices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API_GetSwapPrices_Request"
              },
              "example": {
                "userAddress": "0x1fEA9Fcbd1989C0f2D0Fbad08144c528c7F5ea54",
                "buyCurrencyAddress": "0x50ba9d89fbfa2862d0447281219a3058e7724224",
                "buyAmount": "1000000000000000000",
                "chainId": 11155111
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API_GetSwapPrices_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Retrieve swap prices for the specified ERC20 token at the address provided as 'buyCurrencyAddress'. The result will be 'null' if the user lacks sufficient funds or if there is insufficient pool liquidity.",
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    },
    "/rpc/API/GetSwapQuote": {
      "post": {
        "summary": "GetSwapQuote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API_GetSwapQuote_Request"
              },
              "example": {
                "userAddress": "0x1fEA9Fcbd1989C0f2D0Fbad08144c528c7F5ea54",
                "sellCurrencyAddress": "0x1c7d4b196cb0c7b01d743fbc6116a902379c7238",
                "buyCurrencyAddress": "0x50ba9d89fbfa2862d0447281219a3058e7724224",
                "buyAmount": "1000000000000000000",
                "chainId": 11155111,
                "includeApprove": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API_GetSwapQuote_Response"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcEndpoint"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcRequestFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRoute"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadMethod"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadRequest"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcClientDisconnected"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcStreamLost"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnauthorized"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorPermissionDenied"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSessionExpired"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorAborted"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorGeoblocked"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorInvalidArgument"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorUnavailable"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorQueryFailed"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorNotFound"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcBadResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcServerPanic"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorWebrpcInternalError"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "After selecting a swap price from 'GetSwapPrices', use this API to retrieve the transaction data needed to execute the swap on-chain.",
        "security": [
          {
            "ApiKeyAuth": [
              "AQAAAAAAAEGvyZiWA9FMslYeG_yayXaHnSI"
            ]
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.sequence.app/",
      "description": "Api"
    }
  ]
}
